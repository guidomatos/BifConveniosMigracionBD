USE [bifconvenio]
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2DREAmChUgelCondorcanqXlsText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************************************        
Cambio COT 24-04-14: Se Agregan los Campos UGEL - DNI - FINICRE     
El campo EMPRESA tomo 3 digitos   
*************************************************************************************************/      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2DREAmChUgelCondorcanqXlsText]            
@Codigo_proceso  as Uniqueidentifier,            
@SituacionTrabajador  as char ( 1 )            
AS            
BEGIN            
--set @Codigo_proceso   = '59bd50b8-0a00-4abe-9efd-cab3f9294111'            
--set @SituacionTrabajador  = '-'            
                
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
      
IF @TIPO_CUOTA = 1                
BEGIN         
 SELECT  Nro = ROW_number() OVER(order by DLNP),            
  CONVERT(CHAR(6),             
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,             
  --EMPRESA = CAST ( DLCCIN AS CHAR ( 2 ) ),                
 EMPRESA  = CAST  ( '0' + DLCCIN AS CHAR( 3)),           
  CODMOD  = CAST  ( DLCM  AS CHAR(10)),            
  CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),            
  CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),            
  [T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,            
  CODDES  = '0205',            
  MONTODES = DLIC,             
  APEPATER = CAST ( DLPA AS CHAR(40)),            
  APEMATER  = CAST ( DLMA AS CHAR(40)),            
  NOMBRE   = CAST ( DLMN AS CHAR(35)),      
  --FINICRE AÑADIDO AL REPORTE EXCEL      
  FINICRE = cast (CRE.FINICRE as char(10))            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
 WHERE [Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
 AND SUBSTRING(DLCR, 1, 2) = 'OP'            
         
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
 SELECT  Nro = ROW_number() OVER(order by DLNP),            
  CONVERT(CHAR(6),             
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,             
  --EMPRESA = CAST ( DLCCIN AS CHAR ( 2 ) ),                
 EMPRESA  = CAST  ( '0' + DLCCIN AS CHAR( 3)),            
  CODMOD  = CAST  ( DLCM  AS CHAR(10)),            
  CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),            
  CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),            
  [T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,            
  CODDES  = '0205',            
  MONTODES = CR.DLIMC,             
  APEPATER = CAST ( DLPA AS CHAR(40)),            
  APEMATER  = CAST ( DLMA AS CHAR(40)),            
  NOMBRE   = CAST ( DLMN AS CHAR(35)),      
  --FINICRE AÑADIDO AL REPORTE EXCEL      
  FINICRE = cast (CRE.FINICRE as char(10))            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
 WHERE CC.[Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
 AND SUBSTRING(DLCR, 1, 2) = 'OP'            
          
         
        
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
 GROUP BY CR.DLACC        
        
  SELECT  Nro = ROW_number() OVER(order by DLNP),            
  CONVERT(CHAR(6),             
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,             
  --EMPRESA = CAST ( DLCCIN AS CHAR ( 2 ) ),                
 EMPRESA  = CAST  ( '0' + DLCCIN AS CHAR( 3)),            
  CODMOD  = CAST  ( DLCM  AS CHAR(10)),            
  CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),            
  CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),            
  [T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,            
  CODDES  = '0205',            
  MONTODES = T.CUOTA,             
  APEPATER = CAST ( DLPA AS CHAR(40)),            
  APEMATER  = CAST ( DLMA AS CHAR(40)),            
  NOMBRE   = CAST ( DLMN AS CHAR(35)),      
  --FINICRE AÑADIDO AL REPORTE EXCEL      
  FINICRE = cast (CRE.FINICRE as char(10))            
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
  left JOIN DLCRE CRE             
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
  WHERE CC.[Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
  ELSE @situacionTrabajador END            
  AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
  AND SUBSTRING(DLCR, 1, 2) = 'OP'            
          
   DROP TABLE #TEMPO        
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2DREAmChUgelUctubambaText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2DREAmChUgelUctubambaText]    
@Codigo_proceso  as Uniqueidentifier,    
@SituacionTrabajador  as char ( 1 )    
AS    
BEGIN    
--set @Codigo_proceso   = '59bd50b8-0a00-4abe-9efd-cab3f9294111'    
--set @SituacionTrabajador  = '-'    
  
  
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 
	
 SELECT  CONVERT(CHAR(6),     
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,     
  EMPRESA  = CAST  ( DLCCIN AS CHAR( 2)),    
  CODMOD  = CAST  ( DLCM  AS CHAR(10)),    
  CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),    
  CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),    
  [T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,    
  CODDES  = '0205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = CAST ( DLPA AS CHAR(40)),    
  APEMATER  = CAST ( DLMA AS CHAR(40)),    
  NOMBRE   = CAST ( DLMN AS CHAR(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 WHERE [Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
 AND SUBSTRING(DLCR, 1, 2) = 'ON'    
 
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT  CONVERT(CHAR(6),     
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,     
  EMPRESA  = CAST  ( DLCCIN AS CHAR( 2)),    
  CODMOD  = CAST  ( DLCM  AS CHAR(10)),    
  CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),    
  CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),    
  [T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,    
  CODDES  = '0205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = CAST ( DLPA AS CHAR(40)),    
  APEMATER  = CAST ( DLMA AS CHAR(40)),    
  NOMBRE   = CAST ( DLMN AS CHAR(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
 AND SUBSTRING(DLCR, 1, 2) = 'ON'    
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	GROUP BY CR.DLACC

		SELECT  CONVERT(CHAR(6),     
		DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,     
		EMPRESA  = CAST  ( DLCCIN AS CHAR( 2)),    
		CODMOD  = CAST  ( DLCM  AS CHAR(10)),    
		CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),    
		CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),    
		[T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,    
		CODDES  = '0205',    
		MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
		APEPATER = CAST ( DLPA AS CHAR(40)),    
		APEMATER  = CAST ( DLMA AS CHAR(40)),    
		NOMBRE   = CAST ( DLMN AS CHAR(35))    
		FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
		left JOIN DLCRE CRE     
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
		AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
		AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
		AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
		AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
		--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )						
		INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
		WHERE CC.[Codigo_proceso] = @Codigo_proceso    
		and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
		ELSE @situacionTrabajador END    
		AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
		AND SUBSTRING(DLCR, 1, 2) = 'ON'    
  

		DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2DREAmChUgelUctubambaXlsText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************************************        
Cambio COT 24-04-14: Se Agrego el campo FINICRE       
El campo EMPRESA tomo 3 digitos  
*************************************************************************************************/        
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2DREAmChUgelUctubambaXlsText]            
@Codigo_proceso  as Uniqueidentifier,            
@SituacionTrabajador  as char ( 1 )            
AS            
BEGIN            
--set @Codigo_proceso   = '59bd50b8-0a00-4abe-9efd-cab3f9294111'            
--set @SituacionTrabajador  = '-'            
                 
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
                 
IF @TIPO_CUOTA = 1                
BEGIN         
 SELECT  Nro = ROW_number() OVER(order by DLNP),            
  CONVERT(CHAR(6),             
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,             
--EMPRESA = CAST ( DLCCIN AS CHAR ( 2 ) ),                
 EMPRESA  = CAST  ( '0' + DLCCIN AS CHAR( 3)),          
  CODMOD  = CAST  ( DLCM  AS CHAR(10)),            
  CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),            
  CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),            
  [T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,            
  CODDES  = '0205',            
  MONTODES = DLIC,             
  APEPATER = CAST ( DLPA AS CHAR(40)),            
  APEMATER  = CAST ( DLMA AS CHAR(40)),            
  NOMBRE   = CAST ( DLMN AS CHAR(35)),      
  --  FINICRE AÑADIDO AL REPORTE EXCEL      
  FINICRE = cast (CRE.FINICRE as char(10))            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
 WHERE [Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
 AND SUBSTRING(DLCR, 1, 2) = 'ON'            
         
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
 SELECT  Nro = ROW_number() OVER(order by DLNP),            
  CONVERT(CHAR(6),             
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,             
  --EMPRESA = CAST ( DLCCIN AS CHAR ( 2 ) ),                
 EMPRESA  = CAST  ( '0' + DLCCIN AS CHAR( 3)),            
  CODMOD  = CAST  ( DLCM  AS CHAR(10)),            
  CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),            
  CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),            
  [T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,            
  CODDES  = '0205',            
  MONTODES = CR.DLIMC,             
  APEPATER = CAST ( DLPA AS CHAR(40)),            
  APEMATER  = CAST ( DLMA AS CHAR(40)),            
  NOMBRE   = CAST ( DLMN AS CHAR(35)),      
  --  FINICRE AÑADIDO AL REPORTE EXCEL      
  FINICRE = cast (CRE.FINICRE as char(10))            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
 WHERE CC.[Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
 AND SUBSTRING(DLCR, 1, 2) = 'ON'            
         
        
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
 WHERE DLIC >= 0                       
 GROUP BY CR.DLACC        
        
  SELECT  Nro = ROW_number() OVER(order by DLNP),            
  CONVERT(CHAR(6),             
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,             
  --EMPRESA = CAST ( DLCCIN AS CHAR ( 2 ) ),                
 EMPRESA  = CAST  ( '0' + DLCCIN AS CHAR( 3)),            
  CODMOD  = CAST  ( DLCM  AS CHAR(10)),            
  CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),            
  CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),            
  [T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,            
  CODDES  = '0205',            
  MONTODES = T.CUOTA,             
  APEPATER = CAST ( DLPA AS CHAR(40)),            
  APEMATER  = CAST ( DLMA AS CHAR(40)),            
  NOMBRE   = CAST ( DLMN AS CHAR(35)),      
  --  FINICRE AÑADIDO AL REPORTE EXCEL      
  FINICRE = cast (CRE.FINICRE as char(10))            
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
  left JOIN DLCRE CRE             
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
  WHERE CC.[Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
  ELSE @situacionTrabajador END            
  AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
  AND SUBSTRING(DLCR, 1, 2) = 'ON'        
         
  DROP TABLE #TEMPO        
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2DREAmUctubambaText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************************************          
Cambio COT 24-04-14: Se Agregan los Campos UGEL - DNI - FINICRE  
El campo EMPRESA tomo 3 digitos         
*************************************************************************************************/          
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2DREAmUctubambaText]--ADBF                
@Codigo_proceso  as Uniqueidentifier,                
@SituacionTrabajador  as char ( 1 )                
AS                
BEGIN                
--set @Codigo_proceso   = '59bd50b8-0a00-4abe-9efd-cab3f9294111'                
--set @SituacionTrabajador  = '-'              
                        
DECLARE @CODIGO_CLIENTE_IBS AS INT                   
DECLARE @TIPO_CUOTA AS INT                  
                  
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                  
GROUP BY DLCC                  
                  
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                  
                     
IF @TIPO_CUOTA = 1                  
BEGIN           
 SELECT  CONVERT(CHAR(6),                 
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                 
  --EMPRESA  = CAST  ( DLCCIN AS CHAR( 2)),                
  EMPRESA  = CAST  ( '0' + DLCCIN AS CHAR( 3)),     
  CODMOD  = CAST  ( DLCM  AS CHAR(10)),                
  CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),                
  CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),                
  [T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,                
  CODDES  = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = CAST ( DLPA AS CHAR(40)),                
  APEMATER  = CAST ( DLMA AS CHAR(40)),                
  NOMBRE   = CAST ( DLMN AS CHAR(35)),        
  --  FINICRE AÑADIDO AL REPORTE EXCEL        
  FINICRE = cast (CRE.FINICRE as char(10))                
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 WHERE [Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
 AND SUBSTRING(DLCR, 1, 2) IN ('ON') --'ON' es de Uctubamba,'OO','OQ' es de Bagua-Imaza                
           
END          
ELSE IF  @TIPO_CUOTA = 2              
BEGIN             
          
 SELECT  CONVERT(CHAR(6),                 
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                 
  --EMPRESA  = CAST  ( DLCCIN AS CHAR( 2)),                
  EMPRESA  = CAST  ( '0' + DLCCIN AS CHAR( 3)),     
  CODMOD  = CAST  ( DLCM  AS CHAR(10)),                
  CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),                
  CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),                
  [T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,                
  CODDES  = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   APEPATER = CAST ( DLPA AS CHAR(40)),               
 
  APEMATER  = CAST ( DLMA AS CHAR(40)),             
  NOMBRE   = CAST ( DLMN AS CHAR(35)),        
  --  FINICRE AÑADIDO AL REPORTE EXCEL        
  FINICRE = cast (CRE.FINICRE as char(10))                
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
 AND SUBSTRING(DLCR, 1, 2) IN ('ON') --'ON' es de Uctubamba,'OO','OQ' es de Bagua-Imaza                
            
           
          
END          
          
ELSE IF  @TIPO_CUOTA = 3              
BEGIN            
             
          
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'          
    INTO #TEMPO          
 FROM ClienteCuota CC          
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)          
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso           
       AND CC.DLNP = CR.DLACC          
       AND(CONVERT(INT,          
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +           
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )           
        <          
        CONVERT(INT,          
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +           
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +           
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END          
        )          
        OR          
                  
        CONVERT(INT,          
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END          
        )          
        =          
        CONVERT(INT,          
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +           
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END           
        )          
      )          
 )          
    WHERE DLIC >= 0                         
 GROUP BY CR.DLACC          
          
  SELECT  CONVERT(CHAR(6),                 
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                 
  --EMPRESA  = CAST  ( DLCCIN AS CHAR( 2)),                
  EMPRESA  = CAST  ( '0' + DLCCIN AS CHAR( 3)),     
  CODMOD  = CAST  ( DLCM  AS CHAR(10)),                
  CARGO  = ISNULL( CAST  ( DLCCR AS CHAR (6)), SPACE(6)),                
  CARBEN  = CAST  ( ISNULL( DLPLA, '') AS CHAR(4)),                
  [T_PLANI]  = CAST  ( DLST   AS CHAR ( 1 ) ) ,                
  CODDES  = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = CAST ( DLPA AS CHAR(40)),            
  APEMATER  = CAST ( DLMA AS CHAR(40)),                
  NOMBRE   = CAST ( DLMN AS CHAR(35)),        
  --  FINICRE AÑADIDO AL REPORTE EXCEL        
  FINICRE = cast (CRE.FINICRE as char(10))                
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
 AND SUBSTRING(DLCR, 1, 2) IN ('ON') --'ON' es de Uctubamba,'OO','OQ' es de Bagua-Imaza                
            
  DROP TABLE #TEMPO          
          
END          
          
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2DRECAJText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
    CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2DRECAJText]    
@Codigo_proceso  as Uniqueidentifier,    
@SituacionTrabajador  as char ( 1 )    
AS    
BEGIN    
--- DIRECCION REGIONAL DE EDUCACION DE CAJAMARCA    
--- ARCHIVO DIREL DRECAJ     
  
   
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        




IF @TIPO_CUOTA = 1        
BEGIN 
	 SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 WHERE [Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  and RTRIM(LTRIM(dlcus)) in ('AM',    
'AT',    
'AN',    
'AO',    
'AP',    
'AQ',    
'AR',    
'AS')    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	 SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))   
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 WHERE CC.[Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  and RTRIM(LTRIM(dlcus)) in ('AM',    
'AT',    
'AN',    
'AO',    
'AP',    
'AQ',    
'AR',    
'AS')    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  


END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
    WHERE DLIC >= 0               
	GROUP BY CR.DLACC

	 SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))   
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )						
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE CC.[Codigo_proceso] = @Codigo_proceso    
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	and RTRIM(LTRIM(dlcus)) in ('AM',    
	'AT',    
	'AN',    
	'AO',    
	'AP',    
	'AQ',    
	'AR',    
	'AS')    
	AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  
	
	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2DRELambContratadosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2DRELambContratadosText]    
@Codigo_proceso  as Uniqueidentifier,    
@SituacionTrabajador  as char ( 1 )    
AS    
BEGIN    
  
  
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        




IF @TIPO_CUOTA = 1        
BEGIN 
SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 WHERE [Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
 and DLNP IN ('233100194024',    
  '233100218048',    
  '233100215429',    
  '233100215409',    
  '233100217379',    
  '233100218304',    
  '233100198756',    
  '233100198870',    
  '233100198517',    
  '233102154121',    
  '233100198518',    
  '233100215430',    
  '233100217662',    
  '233100217503',    
  '233100218314',    
  '233100239958',    
  '233100238813',    
   '233100195660',    
   '233100217378',    
   '233100218239' )     
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   
	SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
 and DLNP IN ('233100194024',    
  '233100218048',    
  '233100215429',    
  '233100215409',    
  '233100217379',    
  '233100218304',    
  '233100198756',    
  '233100198870',    
  '233100198517',    
  '233102154121',    
  '233100198518',    
  '233100215430',    
  '233100217662',    
  '233100217503',    
  '233100218314',    
  '233100239958',    
  '233100238813',    
   '233100195660',    
   '233100217378',    
   '233100218239' ) 


END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
    WHERE DLIC >= 0               
	GROUP BY CR.DLACC

	SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
 WHERE CC.[Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
 and DLNP IN ('233100194024',    
  '233100218048',    
  '233100215429',    
  '233100215409',    
  '233100217379',    
  '233100218304',    
  '233100198756',    
  '233100198870',    
  '233100198517',    
  '233102154121',    
  '233100198518',    
  '233100215430',    
  '233100217662',    
  '233100217503',    
  '233100218314',    
  '233100239958',    
  '233100238813',    
   '233100195660',    
   '233100217378',    
   '233100218239' ) 


	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2DRELambUgelChiclayoText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



  
  
 CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2DRELambUgelChiclayoText]    
@Codigo_proceso  as Uniqueidentifier,    
@SituacionTrabajador  as char ( 1 )    
AS    
BEGIN    
--- DIRECCION REGIONAL DE EDUCACION DE LAMBAYEQUE    
  
   
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        




IF @TIPO_CUOTA = 1        
BEGIN 
	SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 WHERE [Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  and RTRIM(LTRIM(dlcus)) in ( 'CM')    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  and RTRIM(LTRIM(dlcus)) in ( 'CM')    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
    WHERE DLIC >= 0               
	GROUP BY CR.DLACC

	SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )						
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	 WHERE CC.[Codigo_proceso] = @Codigo_proceso    
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	and RTRIM(LTRIM(dlcus)) in ( 'CM')    
	AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2DRELambUgelFerreniafeText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2DRELambUgelFerreniafeText]    
@Codigo_proceso  as Uniqueidentifier,    
@SituacionTrabajador  as char ( 1 )    
AS    
BEGIN    
--- DIRECCION REGIONAL DE EDUCACION DE LAMBAYEQUE    
  
   
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        




IF @TIPO_CUOTA = 1        
BEGIN 
	SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 WHERE [Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  and RTRIM(LTRIM(dlcus)) in ( 'CO')    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  and RTRIM(LTRIM(dlcus)) in ( 'CO')    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0               
	GROUP BY CR.DLACC

	SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
 WHERE CC.[Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  and RTRIM(LTRIM(dlcus)) in ( 'CO')    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2DRELambUgelLambayequeText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2DRELambUgelLambayequeText]    
@Codigo_proceso  as Uniqueidentifier,    
@SituacionTrabajador  as char ( 1 )    
AS    
BEGIN    
--- DIRECCION REGIONAL DE EDUCACION DE LAMBAYEQUE    
  
  
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        




IF @TIPO_CUOTA = 1        
BEGIN 
	SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 WHERE [Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  and RTRIM(LTRIM(dlcus)) in ( 'CN')    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   
	
 SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  and RTRIM(LTRIM(dlcus)) in ( 'CN')    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  


END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
    WHERE DLIC >= 0               
	GROUP BY CR.DLACC

	
 SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '205',    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE CC.[Codigo_proceso] = @Codigo_proceso    
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	and RTRIM(LTRIM(dlcus)) in ( 'CN')    
	AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  

	DROP TABLE #TEMPO

END

END

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2ICAText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



  
  
/*CREATE OR ALTER PROCEDURE CronogramaFuturoDIREL2ICAText      
@Codigo_proceso  as Uniqueidentifier,      
@SituacionTrabajador  as char ( 1 )      
AS      
BEGIN      
--set @Codigo_proceso   = '59bd50b8-0a00-4abe-9efd-cab3f9294111'      
--set @SituacionTrabajador  = '-'      
 SELECT convert(varchar(6),       
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
  , 112)  as PERIODO,       
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),      
  CODMOD = cast ( DLCM as char(10)),      
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),      
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,      
  CODDES = '0205', -- RESPINOZA 20080102 - SE SOLICITO EL CAMBIO DE CODIFICACION DE 205 A 0205      
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),       
  APEPATER = cast ( DLPA as char(40)),      
  AMATER = cast ( DLMA as char(40)),      
  NOMBRE = cast ( DLMN as char(35))      
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)      
   left JOIN DLCRE CRE       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))       
 WHERE [Codigo_proceso] = @Codigo_proceso      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END      
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR      
END  */    
    
     
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2ICAText]       
@Codigo_proceso  as Uniqueidentifier,            
@SituacionTrabajador  as char ( 1 )            
AS            
BEGIN            
--set @Codigo_proceso   = '59bd50b8-0a00-4abe-9efd-cab3f9294111'            
--set @SituacionTrabajador  = '-'            
          
  declare @codigo_cliente varchar(10)           
  select @codigo_cliente = codigo_cliente from proceso where codigo_proceso = @Codigo_proceso          
        
  declare @i int      
   set @i=0      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        




IF @TIPO_CUOTA = 1        
BEGIN 

	 SELECT (case when @codigo_cliente = '190828059' then 'BIFICA' else 'BIFPALPA' end)  as CODEMPRESA,             
  [PERIODO]= convert(varchar(6),dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )            
  , 112),      
  [TIPPLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODMOD = cast ( DLCM as char(10)),            
  [CARGO_TIT] = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),            
  [CARGO_BEN] = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
  [CODUSE] = ' ',      
  [CODNEC]=' ',      
  [CODNIV]=' ',      
  [CODEST]=' ',          
  [DIDENT]=' ',      
  [APEPAT] = cast ( DLPA as char(30)),      
  [APEMAT] = cast ( DLMA as char(30)),      
  [NOMBRES] = cast ( DLMN as char(60)),      
  [NUMCREDITO] = identity(int,1,1) ,--cast(@i as char(4)),           
  --CODDES = '205',            
--  [MTOCUOTA] = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
   [MTOCUOTA] = cast( DLIC as char(8)),      
   [FECDESEMB] =' ',      
   [FECPRIMERV]=' ',      
   [FECVCTO]=' ',      
   [CUOTASPAG]=' ',      
   [NUMCUO]=' ',      
   [MTOPRESTA]=' ',      
   [CODMODAVA]=' ',      
   [APELLIAVA]=' ',      
   [NOMBREAVA]=' ',      
   [FECHA]=' '      
into #ProductTotals2        
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
 WHERE [Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
      
      
select CODEMPRESA,[PERIODO],[TIPPLA],CODMOD,[CARGO_TIT],[CARGO_BEN],[CODUSE],[CODNEC],[CODNIV],[CODEST],[DIDENT],      
 [APEPAT],[APEMAT],[NOMBRES],CAST([NUMCREDITO] AS CHAR(4)) 'NUMCREDITO',[MTOCUOTA],[FECDESEMB],[FECPRIMERV],[FECVCTO],[CUOTASPAG],      
  [NUMCUO],[MTOPRESTA], [CODMODAVA],[APELLIAVA],[NOMBREAVA],[FECHA] from #ProductTotals2       
      
drop table #ProductTotals2    

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   
	SELECT (case when @codigo_cliente = '190828059' then 'BIFICA' else 'BIFPALPA' end)  as CODEMPRESA,             
  [PERIODO]= convert(varchar(6),dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )            
  , 112),      
  [TIPPLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODMOD = cast ( DLCM as char(10)),            
  [CARGO_TIT] = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),            
  [CARGO_BEN] = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
  [CODUSE] = ' ',      
  [CODNEC]=' ',      
  [CODNIV]=' ',      
  [CODEST]=' ',          
  [DIDENT]=' ',      
  [APEPAT] = cast ( DLPA as char(30)),      
  [APEMAT] = cast ( DLMA as char(30)),      
  [NOMBRES] = cast ( DLMN as char(60)),      
  [NUMCREDITO] = identity(int,1,1) ,--cast(@i as char(4)),           
  --CODDES = '205',            
--  [MTOCUOTA] = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
   [MTOCUOTA] = cast( CR.DLIMC as char(8)),      
   [FECDESEMB] =' ',      
   [FECPRIMERV]=' ',      
   [FECVCTO]=' ',      
   [CUOTASPAG]=' ',      
   [NUMCUO]=' ',      
   [MTOPRESTA]=' ',      
   [CODMODAVA]=' ',      
   [APELLIAVA]=' ',      
   [NOMBREAVA]=' ',      
   [FECHA]=' '      
into #ProductTotals        
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                   WHERE CC.[Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
      
      
select CODEMPRESA,[PERIODO],[TIPPLA],CODMOD,[CARGO_TIT],[CARGO_BEN],[CODUSE],[CODNEC],[CODNIV],[CODEST],[DIDENT],      
 [APEPAT],[APEMAT],[NOMBRES],CAST([NUMCREDITO] AS CHAR(4)) 'NUMCREDITO',[MTOCUOTA],[FECDESEMB],[FECPRIMERV],[FECVCTO],[CUOTASPAG],      
  [NUMCUO],[MTOPRESTA], [CODMODAVA],[APELLIAVA],[NOMBREAVA],[FECHA] from #ProductTotals       
      
drop table #ProductTotals        
  


END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0               
	GROUP BY CR.DLACC

	SELECT (case when @codigo_cliente = '190828059' then 'BIFICA' else 'BIFPALPA' end)  as CODEMPRESA,             
  [PERIODO]= convert(varchar(6),dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )            
  , 112),      
  [TIPPLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODMOD = cast ( DLCM as char(10)),            
  [CARGO_TIT] = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),            
  [CARGO_BEN] = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
  [CODUSE] = ' ',      
  [CODNEC]=' ',      
  [CODNIV]=' ',      
  [CODEST]=' ',          
  [DIDENT]=' ',      
  [APEPAT] = cast ( DLPA as char(30)),      
  [APEMAT] = cast ( DLMA as char(30)),      
  [NOMBRES] = cast ( DLMN as char(60)),      
  [NUMCREDITO] = identity(int,1,1) ,--cast(@i as char(4)),           
  --CODDES = '205',            
--  [MTOCUOTA] = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
   [MTOCUOTA] = cast( T.CUOTA as char(8)),      
   [FECDESEMB] =' ',      
   [FECPRIMERV]=' ',      
   [FECVCTO]=' ',      
   [CUOTASPAG]=' ',      
   [NUMCUO]=' ',      
   [MTOPRESTA]=' ',      
   [CODMODAVA]=' ',      
   [APELLIAVA]=' ',      
   [NOMBREAVA]=' ',      
   [FECHA]=' '      
     into #ProductTotals3        
	 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
	 left JOIN DLCRE CRE             
	 ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                   WHERE CC.[Codigo_proceso] = @Codigo_proceso            
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
	AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
      
      
	select CODEMPRESA,[PERIODO],[TIPPLA],CODMOD,[CARGO_TIT],[CARGO_BEN],[CODUSE],[CODNEC],[CODNIV],[CODEST],[DIDENT],      
	[APEPAT],[APEMAT],[NOMBRES],CAST([NUMCREDITO] AS CHAR(4)) 'NUMCREDITO',[MTOCUOTA],[FECDESEMB],[FECPRIMERV],[FECVCTO],[CUOTASPAG],      
	[NUMCUO],[MTOPRESTA], [CODMODAVA],[APELLIAVA],[NOMBREAVA],[FECHA] from #ProductTotals3       
      
	drop table #ProductTotals3        
  

	DROP TABLE #TEMPO

END

END

 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2NAZCText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2NAZCText]    
@Codigo_proceso  as Uniqueidentifier,    
@SituacionTrabajador  as char ( 1 )    
AS    
BEGIN    
--set @Codigo_proceso   = '59bd50b8-0a00-4abe-9efd-cab3f9294111'    
--set @SituacionTrabajador  = '-'    
  
 DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        




IF @TIPO_CUOTA = 1        
BEGIN 
		 SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '0205', -- RESPINOZA 20080102 - SE SOLICITO EL CAMBIO DE CODIFICACION DE 205 A 0205    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 WHERE [Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
	
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT convert(varchar(6),     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
  , 112)  as PERIODO,     
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
  CODMOD = cast ( DLCM as char(10)),    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
  CODDES = '0205', -- RESPINOZA 20080102 - SE SOLICITO EL CAMBIO DE CODIFICACION DE 205 A 0205    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
  APEPATER = cast ( DLPA as char(40)),    
  AMATER = cast ( DLMA as char(40)),    
  NOMBRE = cast ( DLMN as char(35))    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
   left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))    
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                   
 WHERE CC.[Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0               
	GROUP BY CR.DLACC

	SELECT convert(varchar(6),     
	dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )    
	, 112)  as PERIODO,     
	INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),    
	CODMOD = cast ( DLCM as char(10)),    
	CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),    
	CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),    
	[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,    
	CODDES = '0205', -- RESPINOZA 20080102 - SE SOLICITO EL CAMBIO DE CODIFICACION DE 205 A 0205    
	MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),     
	APEPATER = cast ( DLPA as char(40)),    
	AMATER = cast ( DLMA as char(40)),    
	NOMBRE = cast ( DLMN as char(35))    
	FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)    
	left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))    
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                   
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE CC.[Codigo_proceso] = @Codigo_proceso    
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2Text]                  
@Codigo_proceso  as Uniqueidentifier,                  
@SituacionTrabajador  as char ( 1 )                  

							/*Historial de cambios*/
/*===================================================================================
Fecha: 07-02-2012
Autor: Christian Rivera
Descripcion: Se modifica select para la DRE ICA (codigo_cliente = 190828059):
		campo INSTIT --> se le agrega un cero mas al inicio  
		campo CODDES --> se le agrega un cero mas al inicio
===================================================================================*/

AS                  
BEGIN                  
--set @Codigo_proceso   = '59bd50b8-0a00-4abe-9efd-cab3f9294111'                  
--set @SituacionTrabajador  = '-'                  
                
declare @codigo_cliente varchar(10)  
select @codigo_cliente = codigo_cliente from proceso where codigo_proceso = @Codigo_proceso  
                 
DECLARE @CODIGO_CLIENTE_IBS AS INT             
DECLARE @TIPO_CUOTA AS INT            
            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso            
GROUP BY DLCC            
            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS            
            
    
IF @TIPO_CUOTA = 1            
BEGIN     
    
  if (@codigo_cliente in( '190827997'))          
  BEGIN            
               
  SELECT convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                  
  , 112)  as PERIODO,                   
  INSTIT =  '0' + CAST (DLCCIN AS CHAR ( 3 )),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '0205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35)),            
  monto_real = cc.DLIC                   
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
   left JOIN DLCRE CRE                   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                   
 WHERE [Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END                  
 AND DLIC >= 0             
          
  end                
  else             
  if @codigo_cliente = '190828033'                
  begin                
                 
    SELECT convert(varchar(6),                   
    dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ) , 112)  as PERIODO,                   
    INSTIT =  '0' + CAST (DLCCIN AS CHAR ( 3 )),                  
    CODMOD = cast ( DLCM as char(10)),                  
    CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
    CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
    [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
    CODDES = '0205',             
    MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
    APEPATER = cast ( DLPA as char(40)),                  
    AMATER = cast ( DLMA as char(40)),                  
    NOMBRE = cast ( DLMN as char(35)),        
    monto_real = cc.DLIC                    
    FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
    left JOIN DLCRE CRE                   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
 AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))        
    WHERE [Codigo_proceso] = @Codigo_proceso                  
    and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END                  
    AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR           
    
    END            
 
 ELSE         
 
 begin
         
 /*IF(@codigo_cliente IN ('190828117','190828059'))  
 BEGIN  
  
  SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = CASE WHEN DLCCR IS NULL OR LTRIM( RTRIM(DLCCR)) = '' THEN '      ' ELSE CAST ( DLCCR AS VARCHAR (12 )) END,    
  CARBEN = CASE WHEN DLPLA IS NULL OR LTRIM (RTRIM(DLPLA)) = '' THEN '    ' ELSE CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)) END , --CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)),           
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  AMATER = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
  left JOIN DLCRE CRE           
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
  WHERE [Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
  ELSE @situacionTrabajador END          
  AND DLIC >= 0   
  END */ 

 IF(@codigo_cliente IN ('190828117'))  
 BEGIN  
  
  SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = CASE WHEN DLCCR IS NULL OR LTRIM( RTRIM(DLCCR)) = '' THEN '      ' ELSE CAST ( DLCCR AS VARCHAR (12 )) END,    
  CARBEN = CASE WHEN DLPLA IS NULL OR LTRIM (RTRIM(DLPLA)) = '' THEN '    ' ELSE CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)) END , --CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)),           
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  AMATER = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
  left JOIN DLCRE CRE           
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
  WHERE [Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
  ELSE @situacionTrabajador END          
  AND DLIC >= 0   
  END

ELSE 

 IF(@codigo_cliente IN ('190828059')) --DRE ICA 
 BEGIN  
  
  SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  INSTIT = '0' + CAST (DLCCIN AS CHAR ( 2 ) ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = CASE WHEN DLCCR IS NULL OR LTRIM( RTRIM(DLCCR)) = '' THEN '      ' ELSE CAST ( DLCCR AS VARCHAR (12 )) END,    
  CARBEN = CASE WHEN DLPLA IS NULL OR LTRIM (RTRIM(DLPLA)) = '' THEN '    ' ELSE CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)) END , --CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)),           
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  AMATER = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
  left JOIN DLCRE CRE           
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
  WHERE [Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
  ELSE @situacionTrabajador END          
  AND DLIC >= 0   
  END

  -- Dirección Regional de Educación de Piura  --Cambio HM
 ELSE  
  IF(@codigo_cliente in ('190827992')) -- DRE PIURA
  begin

  SELECT convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                   
  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35)),
  FINICRE = cast (CRE.FINICRE as char(10))                                    
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
  left JOIN DLCRE CRE                   
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                   
  WHERE [Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
  ELSE @situacionTrabajador END                  
  AND DLIC >= 0
  
  end
   -- fin cambio HM
 else
 BEGIN  
  
  SELECT convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                   
  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35))                  
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
  left JOIN DLCRE CRE                   
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                   
  WHERE [Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
  ELSE @situacionTrabajador END                  
  AND DLIC >= 0   

    END     
  end         
END    

ELSE IF  @TIPO_CUOTA = 2        

BEGIN       
     
 if @codigo_cliente in( '190827997')  
  BEGIN    
               
  SELECT convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                  
  , 112)  as PERIODO,                   
  INSTIT =  '0' + CAST (DLCCIN AS CHAR ( 3 )),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '0205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35)),            
  monto_real = cc.DLIC                   
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
   left JOIN DLCRE CRE                   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                   
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
 ELSE @situacionTrabajador END                  
 AND DLIC >= 0             
            
           
 end                
  else             
  if @codigo_cliente = '190828033'                
  begin                
                 
    SELECT convert(varchar(6),                   
    dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ) , 112)  as PERIODO,                   
    INSTIT =  '0' + CAST (DLCCIN AS CHAR ( 3 )),                  
    CODMOD = cast ( DLCM as char(10)),                  
    CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
    CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
    [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
    CODDES = '0205',             
    MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
    APEPATER = cast ( DLPA as char(40)),                  
    AMATER = cast ( DLMA as char(40)),                  
    NOMBRE = cast ( DLMN as char(35)),        
    monto_real = cc.DLIC                    
    FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
    left JOIN DLCRE CRE                   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
    INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                   
    WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
    and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END                  
    AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR           
                
  END            
  ELSE             
  begin          
  

 /*IF(@codigo_cliente IN ('190828117','190828059'))  
 BEGIN  
  
 SELECT convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                   
  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35))                  
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
  left JOIN DLCRE CRE                   
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                   
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
  ELSE @situacionTrabajador END                  
  AND DLIC >= 0   

  END  */

 IF(@codigo_cliente IN ('190828117'))  
 BEGIN  
  
 SELECT convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                   
  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35))                  
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
  left JOIN DLCRE CRE                   
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                   
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
  ELSE @situacionTrabajador END                  
  AND DLIC >= 0   

  END  

  else 

  IF(@codigo_cliente IN ('190828059'))  --DRE ICA
  BEGIN  
  
  SELECT convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                   
  INSTIT = '0' + CAST (DLCCIN AS CHAR ( 2 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '0205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35))                  
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
  left JOIN DLCRE CRE                   
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                   
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
  ELSE @situacionTrabajador END                  
  AND DLIC >= 0   

  END 

-- Dirección Regional de Educación de Piura  --cambio HM
 ELSE 
 IF(@codigo_cliente in ('190827992')) --DRE Piura
 begin
 
  SELECT convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                   
  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35)),
  FINICRE = cast (CRE.FINICRE as char(10))                                    
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
  left JOIN DLCRE CRE                   
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                   
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
  ELSE @situacionTrabajador END                  
  AND DLIC >= 0    
 
 end
 -- fin cambio HM
 else
 BEGIN        
  
  SELECT convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                   
  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35))                  
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
  left JOIN DLCRE CRE                   
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                   
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
  ELSE @situacionTrabajador END                  
  AND DLIC >= 0   
                
 END    
 end      
    
END    
    
ELSE IF  @TIPO_CUOTA = 3        
BEGIN     
       
    
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'    
    INTO #TEMPO    
 FROM ClienteCuota CC    
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)    
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso     
       AND CC.DLNP = CR.DLACC    
       AND(CONVERT(INT,    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +     
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )     
        <     
        CONVERT(INT,    
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +     
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +     
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END    
        )    
        OR    
            
        CONVERT(INT,    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +     
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END    
        )    
        =    
        CONVERT(INT,    
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +     
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END     
        )    
      )    
 )    
    WHERE DLIC >= 0                   
 GROUP BY CR.DLACC    
    
  if @codigo_cliente in( '190827997')       
  BEGIN            
               
  SELECT convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                  
  , 112)  as PERIODO,                   
  INSTIT =  '0' + CAST (DLCCIN AS CHAR ( 3 )),              
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '0205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35)),            
  monto_real = cc.DLIC                   
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
   left JOIN DLCRE CRE                   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )             
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)    
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END                  
 AND DLIC >= 0             
            
           
 end                
  else             
  if @codigo_cliente = '190828033'                
  begin                
                 
    SELECT convert(varchar(6),                   
    dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ) , 112)  as PERIODO,                   
    INSTIT =  '0' + CAST (DLCCIN AS CHAR ( 3 )),                 
    CODMOD = cast ( DLCM as char(10)),                  
    CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
    CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
    [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
    CODDES = '0205',             
    MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
    APEPATER = cast ( DLPA as char(40)),                  
    AMATER = cast ( DLMA as char(40)),                  
    NOMBRE = cast ( DLMN as char(35)),        
    monto_real = cc.DLIC                    
    FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
    left JOIN DLCRE CRE                   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
    --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                   
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)    
    WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
    and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END                  
    AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR           
                
  END            
  ELSE             
  begin          
        
 /*IF(@codigo_cliente IN ('190828117','190828059'))  
 BEGIN  
  
  SELECT CONVERT(varchar(6),           
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = CASE WHEN DLCCR IS NULL OR LTRIM( RTRIM(DLCCR)) = '' THEN '      ' ELSE CAST ( DLCCR AS VARCHAR (12 )) END,    
  CARBEN = CASE WHEN DLPLA IS NULL OR LTRIM (RTRIM(DLPLA)) = '' THEN '    ' ELSE CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)) END , --CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)),           
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = CAST ( DLPA as char(40)),          
  AMATER = CAST ( DLMA as char(40)),          
  NOMBRE = CAST ( DLMN as char(35))          
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
  left JOIN DLCRE CRE           
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
  WHERE [Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
  ELSE @situacionTrabajador END          
  AND DLIC >= 0   
  END */ 

IF(@codigo_cliente IN ('190828117'))  
 BEGIN  
  
  SELECT CONVERT(varchar(6),           
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = CASE WHEN DLCCR IS NULL OR LTRIM( RTRIM(DLCCR)) = '' THEN '      ' ELSE CAST ( DLCCR AS VARCHAR (12 )) END,    
  CARBEN = CASE WHEN DLPLA IS NULL OR LTRIM (RTRIM(DLPLA)) = '' THEN '    ' ELSE CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)) END , --CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)),           
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = CAST ( DLPA as char(40)),          
  AMATER = CAST ( DLMA as char(40)),          
  NOMBRE = CAST ( DLMN as char(35))          
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
  left JOIN DLCRE CRE           
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
  WHERE [Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
  ELSE @situacionTrabajador END          
  AND DLIC >= 0   
  END 

ELSE

IF(@codigo_cliente IN ('190828059'))  --DRE ICA
 BEGIN  
  
  SELECT CONVERT(varchar(6),           
  DATEADD(m, -1,  CAST ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  INSTIT = '0' + CAST (DLCCIN AS CHAR ( 2 ) ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = CASE WHEN DLCCR IS NULL OR LTRIM( RTRIM(DLCCR)) = '' THEN '      ' ELSE CAST ( DLCCR AS VARCHAR (12 )) END,    
  CARBEN = CASE WHEN DLPLA IS NULL OR LTRIM (RTRIM(DLPLA)) = '' THEN '    ' ELSE CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)) END , --CAST (ISNULL(DLPLA, '    ') AS VARCHAR(4)),           
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = CAST ( DLPA as char(40)),          
  AMATER = CAST ( DLMA as char(40)),          
  NOMBRE = CAST ( DLMN as char(35))          
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
  left JOIN DLCRE CRE           
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
  WHERE [Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
  ELSE @situacionTrabajador END          
  AND DLIC >= 0   
  END 
 
 --Dirección Regional de Educación de Piura  -- cambio HM
 ELSE  
 IF(@codigo_cliente in ('190827992')) --DRE Piura
 begin
	  SELECT convert(varchar(6),                   
	  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                   
	  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),                  
	  CODMOD = cast ( DLCM as char(10)),                  
	  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
	  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
	  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
	  CODDES = '205',                  
	  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
	  APEPATER = cast ( DLPA as char(40)),                  
	  AMATER = cast ( DLMA as char(40)),                  
	  NOMBRE = cast ( DLMN as char(35)),
	  FINICRE = cast (CRE.FINICRE as char(10))                  
	  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
	  left JOIN DLCRE CRE                   
	  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
	  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
	  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
	  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
	  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                        
	  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)    
	  WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
	  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
	  ELSE @situacionTrabajador END                  
	  AND DLIC >= 0 
	  END   
 
 -- fin cambio HM
 else 
 BEGIN        
  
   SELECT convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                   
  INSTIT = CAST (DLCCIN AS CHAR ( 2 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35))                  
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
  left JOIN DLCRE CRE                   
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                   
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)    
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
  ELSE @situacionTrabajador END                  
  AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR             
   END  
 END      
   
 DROP TABLE #TEMPO    
    
END    
    
END

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelAscopeText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                
/* Modif. por : AHSP(GO)       */                
/* Fecha Modif : 2009/06/18       */                
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */                
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */          
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */              
/********************************************************************************/                
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelAscopeText]                
@Codigo_proceso  as Uniqueidentifier,                
@SituacionTrabajador  as char ( 1 )                
AS                
BEGIN                
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                
--- ARCHIVO Pacasmayo              
          
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
                
        
        
IF @TIPO_CUOTA = 1                
BEGIN         
        
  SELECT       
  -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
  UGEL = cast (CRE.DLCUS as char(10)),      
  convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0'+DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI    
  --CAMPO QUE YA NO VA EN EL REPORTE              
  --monto_real = cc.DLIC                
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 WHERE [Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BD')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
        
        
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN             
  SELECT       
  -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
  UGEL = cast (CRE.DLCUS as char(10)),      
  convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0'+DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',            
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
  --CAMPO QUE YA NO VA EN EL REPORTE              
  --monto_real = cc.DLIC                
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BD')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
        
        
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
    WHERE DLIC >= 0                       
 GROUP BY CR.DLACC        
      
  SELECT       
  -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
  UGEL = cast (CRE.DLCUS as char(10)),      
  convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0'+DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),              
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
  --CAMPO QUE YA NO VA EN EL REPORTE              
 --monto_real = cc.DLIC                
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
 and RTRIM(LTRIM(dlcus)) in ( 'BD')             
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
        
        
         
 DROP TABLE #TEMPO        
         
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelBolivar2Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                   
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                   
/********************************************************************************/                   
        
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelBolivar2Text]                  
@Codigo_proceso  as Uniqueidentifier,                  
@SituacionTrabajador  as char ( 1 )                  
AS                  
BEGIN                  
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                  
--- ARCHIVO UGEL BOLIVAR                  
              
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
     
IF @TIPO_CUOTA = 1                
BEGIN         
        
SELECT       
-- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
convert(varchar(6),                     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                    
  , 112)  as PERIODO,                     
  INSTIT = CAST ('0' + DLCCIN AS CHAR ( 3 ) ),                    
  CODMOD = cast ( DLCM as char(10)),                    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                    
  CODDES = '0205',                    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                     
  APEPATER = cast ( DLPA as char(40)),                    
  AMATER = cast ( DLMA as char(40)),                    
  NOMBRE = cast ( DLMN as char(35)),        
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE            
   --monto_real = cc.DLIC                      
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
   left JOIN DLCRE CRE                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                     
 WHERE [Codigo_proceso] = @Codigo_proceso                    
  and DLST =case when rtrim( @SituacionTrabajador ) = '-' then DLST                    
    ELSE @SituacionTrabajador END                    
 AND DLIC >= 0                  
        
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                    
  , 112)  as PERIODO,                     
  INSTIT = CAST ('0' + DLCCIN AS CHAR ( 3 ) ),                    
  CODMOD = cast ( DLCM as char(10)),                    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                    
  CODDES = '0205',                    
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                     
  APEPATER = cast ( DLPA as char(40)),                    
  AMATER = cast ( DLMA as char(40)),                    
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE      
   --monto_real = cc.DLIC                      
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
   left JOIN DLCRE CRE                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                     
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                    
  and DLST =case when rtrim( @SituacionTrabajador ) = '-' then DLST                    
    ELSE @SituacionTrabajador END                    
 AND DLIC >= 0                 
        
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <        
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
    WHERE  DLIC >= 0                       
 GROUP BY CR.DLACC        
        
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                     
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                    
  , 112)  as PERIODO,                     
  INSTIT = CAST ('0' + DLCCIN AS CHAR ( 3 ) ),                    
  CODMOD = cast ( DLCM as char(10)),                    
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),                    
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                    
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                    
  CODDES = '0205',            
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                     
  APEPATER = cast ( DLPA as char(40)),                    
  AMATER = cast ( DLMA as char(40)),                    
  NOMBRE = cast ( DLMN as char(35)),             
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI     
--CAMPO QUE YA NO VA EN EL REPORTE      
   --monto_real = cc.DLIC                      
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
   left JOIN DLCRE CRE                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                     
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                    
 and DLST =case when rtrim( @SituacionTrabajador ) = '-' then DLST                    
    ELSE @SituacionTrabajador END                    
 AND DLIC >= 0                 
        
        
 DROP TABLE #TEMPO        
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelBolivarText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                
/* Modif. por : AHSP(GO)       */                
/* Fecha Modif : 2009/06/18       */                
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */                
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */        
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                
/********************************************************************************/                
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelBolivarText]                
@Codigo_proceso  as Uniqueidentifier,                
@SituacionTrabajador  as char ( 1 )                
AS                
BEGIN                
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                
--- ARCHIVO UGEL BOLIVAR            
            
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
    
IF @TIPO_CUOTA = 1                
BEGIN         
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC                
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 WHERE [Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BK')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
         
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI     
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC                
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BK')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
          
         
        
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
    WHERE DLIC >= 0                       
 GROUP BY CR.DLACC        
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,       
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC                
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
 and RTRIM(LTRIM(dlcus)) in ( 'BK')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
          
         
 DROP TABLE #TEMPO        
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelCajabambaText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelCajabambaText]      
@Codigo_proceso  as Uniqueidentifier,      
@SituacionTrabajador  as char ( 1 )      
AS      
BEGIN      
--- DIRECCION REGIONAL DE EDUCACION DE CAJAMARCA      
--- ARCHIVO DIREL DRECAJ       
 SELECT convert(varchar(6),       
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
  , 112)  as PERIODO,       
  --INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),      
  EMPRESA = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),      
  CODMOD = cast ( DLCM as char(10)),      
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),      
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
  [T-PLANI] = CAST ( DLST AS CHAR ( 1 ) ) ,      
  CODDES = '0205',      
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),       
  APEPATER = cast ( DLPA as char(40)),      
  APEMATER = cast ( DLMA as char(40)),      
  NOMBRE = cast ( DLMN as char(35))      
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)      
   left JOIN DLCRE CRE       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))       
 WHERE [Codigo_proceso] = @Codigo_proceso      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END      
  and RTRIM(LTRIM(dlcus)) in ( 'AN')      
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR      
      
END      
      
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelCajamarcaText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelCajamarcaText]      
@Codigo_proceso  as Uniqueidentifier,      
@SituacionTrabajador  as char ( 1 )      
AS      
BEGIN      
--- DIRECCION REGIONAL DE EDUCACION DE CAJAMARCA      
--- ARCHIVO DIREL DRECAJ    


          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
	

IF @TIPO_CUOTA = 1        
BEGIN 

		SELECT convert(varchar(6),       
		dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
		, 112)  as PERIODO,       
		INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),      
		CODMOD = cast ( DLCM as char(10)),      
		CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),      
		CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
		[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,      
		CODDES = '0205',      
		MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),       
		APEPATER = cast ( DLPA as char(40)),      
		AMATER = cast ( DLMA as char(40)),      
		NOMBRE = cast ( DLMN as char(35))      
		FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)      
		left JOIN DLCRE CRE       
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
		AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
		AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
		AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
		AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))       
		WHERE [Codigo_proceso] = @Codigo_proceso      
		and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
		ELSE @situacionTrabajador END      
		and RTRIM(LTRIM(dlcus)) in ( 'AM', 'AT')     
		--'AN','AO','AP','AQ','AR','AS','AT')      
		AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR      
  
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

		SELECT convert(varchar(6),       
		dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
		, 112)  as PERIODO,       
		INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),      
		CODMOD = cast ( DLCM as char(10)),      
		CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),      
		CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
		[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,      
		CODDES = '0205',      
		MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),       
		APEPATER = cast ( DLPA as char(40)),      
		AMATER = cast ( DLMA as char(40)),      
		NOMBRE = cast ( DLMN as char(35))      
		FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)      
		left JOIN DLCRE CRE       
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
		AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
		AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
		AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
		AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))
		INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                           
		WHERE cc.[Codigo_proceso] = @Codigo_proceso      
		and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
		ELSE @situacionTrabajador END      
		and RTRIM(LTRIM(dlcus)) in ( 'AM', 'AT')     
		--'AN','AO','AP','AQ','AR','AS','AT')     
		AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR      
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
    WHERE DLIC >= 0               
	GROUP BY CR.DLACC

		
		SELECT convert(varchar(6),       
		dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
		, 112)  as PERIODO,       
		INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),      
		CODMOD = cast ( DLCM as char(10)),      
		CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),      
		CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
		[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,      
		CODDES = '0205',      
		MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),       
		APEPATER = cast ( DLPA as char(40)),      
		AMATER = cast ( DLMA as char(40)),      
		NOMBRE = cast ( DLMN as char(35))      
		FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)      
		left JOIN DLCRE CRE       
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
		AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
		AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
		AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
		AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))
		--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                           
		INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
		WHERE [Codigo_proceso] = @Codigo_proceso      
		and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
		ELSE @situacionTrabajador END      
		and RTRIM(LTRIM(dlcus)) in ( 'AM', 'AT')     
		--'AN','AO','AP','AQ','AR','AS','AT')     
		AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR      
  

		DROP TABLE #TEMPO
	

END

END
   
     

      
  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelCascasText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                
/* Modif. por : AHSP(GO)       */                
/* Fecha Modif : 2009/06/18       */                
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */                
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */        
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                
/********************************************************************************/                
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelCascasText]                
@Codigo_proceso  as Uniqueidentifier,                
@SituacionTrabajador  as char ( 1 )                
AS                
BEGIN                
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                
--- ARCHIVO CASCAS              
          
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
                
        
        
IF @TIPO_CUOTA = 1                
BEGIN         
 SELECT       
-- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ('0'+ DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE              
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 WHERE [Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BE')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
          
         
        
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ('0'+ DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE              
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BE')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
         
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
 WHERE DLIC >= 0                       
 GROUP BY CR.DLACC        
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,               
  INSTIT = CAST ('0'+ DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
  --CAMPO QUE YA NO VA EN EL REPORTE              
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BE')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
         
        
 DROP TABLE #TEMPO        
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelChepenText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/            
/* Modif. por : AHSP(GO)       */            
/* Fecha Modif : 2009/06/18       */            
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */            
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */   
/* Cambio COT 22-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                             
/********************************************************************************/            
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelChepenText]            
@Codigo_proceso  as Uniqueidentifier,            
@SituacionTrabajador  as char ( 1 )            
AS            
BEGIN            
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD            
--- ARCHIVO DIREL DRECAJ          
        
        
               
                  
DECLARE @CODIGO_CLIENTE_IBS AS INT                   
DECLARE @TIPO_CUOTA AS INT                  
                  
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                  
GROUP BY DLCC                  
                  
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                  
                  
          
        
IF @TIPO_CUOTA = 1                
BEGIN         
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
 UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,             
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),            
  CODMOD = cast ( DLCM as char(10)),            
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),            
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),            
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODDES = '205',            
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
  APEPATER = cast ( DLPA as char(40)),            
  AMATER = cast ( DLMA as char(40)),            
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI     
  --CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
 WHERE [Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
  and RTRIM(LTRIM(dlcus)) in ( 'BB')            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
END            
            
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,             
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),            
  CODMOD = cast ( DLCM as char(10)),            
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),            
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),            
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODDES = '205',            
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
  APEPATER = cast ( DLPA as char(40)),            
  AMATER = cast ( DLMA as char(40)),            
  NOMBRE = cast ( DLMN as char(35)),      
  -- CAMPO DNI Y FINICRE AÑADIDOS AL REPORTE EXCEL      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE          
  --monto_real = cc.DLIC            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))        
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                 
 WHERE CC.[Codigo_proceso] = @Codigo_proceso            
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 and RTRIM(LTRIM(dlcus)) in ( 'BB')            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
END            
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
 WHERE DLIC >= 0                       
 GROUP BY CR.DLACC        
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6), dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ) , 112)  as PERIODO,             
  INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),            
  CODMOD = cast ( DLCM as char(10)),            
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),            
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),            
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODDES = '205',            
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
  APEPATER = cast ( DLPA as char(40)),            
  AMATER = cast ( DLMA as char(40)),            
  NOMBRE = cast ( DLMN as char(35)),          
  -- CAMPO DNI Y FINICRE AÑADIDOS AL REPORTE EXCEL      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI     
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))        
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                 
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE [Codigo_proceso] = @Codigo_proceso            
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 and RTRIM(LTRIM(dlcus)) in ( 'BB')            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
        
        
 DROP TABLE #TEMPO        
         
END        
        
END        
        
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelChotaText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelChotaText]          
@Codigo_proceso  as Uniqueidentifier,          
@SituacionTrabajador  as char ( 1 )          
AS          
BEGIN          
--- DIRECCION REGIONAL DE EDUCACION DE CAJAMARCA          
--- ARCHIVO DIREL DRECAJ     
  
    
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  INSTIT = substring( '000' +  Ltrim(rtrim( CAST (isnull(DLCCIN,'0') AS CHAR (2)))), len(Ltrim(rtrim( CAST (isnull(DLCCIN,'0') AS CHAR (2))))) + 1,3 ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),          
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),          
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  AMATER = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
   left JOIN DLCRE CRE           
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
 WHERE [Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END          
  and RTRIM(LTRIM(dlcus)) in ( 'AX', 'AW', 'AV')          
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
  
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  INSTIT = substring( '000' +  Ltrim(rtrim( CAST (isnull(DLCCIN,'0') AS CHAR (2)))), len(Ltrim(rtrim( CAST (isnull(DLCCIN,'0') AS CHAR (2))))) + 1,3 ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),          
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),          
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  AMATER = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
   left JOIN DLCRE CRE           
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END          
  and RTRIM(LTRIM(dlcus)) in ( 'AX', 'AW', 'AV')          
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0               
	GROUP BY CR.DLACC


	SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  INSTIT = substring( '000' +  Ltrim(rtrim( CAST (isnull(DLCCIN,'0') AS CHAR (2)))), len(Ltrim(rtrim( CAST (isnull(DLCCIN,'0') AS CHAR (2))))) + 1,3 ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),          
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),          
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  AMATER = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
   left JOIN DLCRE CRE           
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE CC.[Codigo_proceso] = @Codigo_proceso          
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END          
	and RTRIM(LTRIM(dlcus)) in ( 'AX', 'AW', 'AV')          
	AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
  

	DROP TABLE #TEMPO

END

END
  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelChulucanasText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

    
    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelChulucanasText]            
@Codigo_proceso  as Uniqueidentifier,            
@SituacionTrabajador  as char ( 1 )            
AS            
BEGIN            
--- DIRECCION REGIONAL DE EDUCACION DE CAJAMARCA            
--- ARCHIVO DIREL DRECAJ        
    
        
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
 SELECT convert(varchar(6),             
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )            
  , 112)  as PERIODO,             
  --INSTIT      
  EMPRESA = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),            
  CODMOD = cast ( DLCM as char(10)),            
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),            
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),            
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODDES = '0205',            
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
  APEPATER = cast ( DLPA as char(40)),            
  AMATER = cast ( DLMA as char(40)),            
  NOMBRE = cast ( DLMN as char(35))            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
 WHERE [Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
 AND substring(DLCR,1,2) <> 'FJ' --  MORROPÓN
  
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
 SELECT convert(varchar(6),             
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )            
  , 112)  as PERIODO,             
  --INSTIT      
  EMPRESA = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),            
  CODMOD = cast ( DLCM as char(10)),            
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),            
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),            
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODDES = '0205',            
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
  APEPATER = cast ( DLPA as char(40)),            
  AMATER = cast ( DLMA as char(40)),            
  NOMBRE = cast ( DLMN as char(35))            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 WHERE CC.[Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
 AND substring(DLCR,1,2) <> 'FJ' --  MORROPÓN
   
  
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE DLIC >= 0                 
 GROUP BY CR.DLACC  
  
   
 SELECT convert(varchar(6),             
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )            
  , 112)  as PERIODO,             
  --INSTIT      
  EMPRESA = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),            
  CODMOD = cast ( DLCM as char(10)),            
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),            
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),            
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODDES = '0205',            
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
  APEPATER = cast ( DLPA as char(40)),            
  AMATER = cast ( DLMA as char(40)),            
  NOMBRE = cast ( DLMN as char(35))            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso            
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
 AND substring(DLCR,1,2) <> 'FJ' --  MORROPÓN   
  
 DROP TABLE #TEMPO  
  
END  
  
END  
  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelCutervoText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelCutervoText]        
@Codigo_proceso  as Uniqueidentifier,        
@SituacionTrabajador  as char ( 1 )        
AS        
BEGIN        
--- DIRECCION REGIONAL DE EDUCACION DE CAJAMARCA        
--- ARCHIVO DIREL DRECAJ      
  
      
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        


IF @TIPO_CUOTA = 1        
BEGIN 
	SELECT convert(varchar(6),         
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )        
  , 112)  as PERIODO,         
  INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),        
  CODMOD = cast ( DLCM as char(10)),        
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),        
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,        
  CODDES = '0205',        
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),         
  APEPATER = cast ( DLPA as char(40)),        
  AMATER = cast ( DLMA as char(40)),        
  NOMBRE = cast ( DLMN as char(35))        
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)        
   left JOIN DLCRE CRE         
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )        
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)        
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)        
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )        
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))         
 WHERE [Codigo_proceso] = @Codigo_proceso        
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST        
    ELSE @situacionTrabajador END        
  and RTRIM(LTRIM(dlcus)) in ( 'CT')        
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR        
 

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   
	
	SELECT convert(varchar(6),         
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )        
  , 112)  as PERIODO,         
  INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),        
  CODMOD = cast ( DLCM as char(10)),        
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),        
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,        
  CODDES = '0205',        
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),         
  APEPATER = cast ( DLPA as char(40)),        
  AMATER = cast ( DLMA as char(40)),        
  NOMBRE = cast ( DLMN as char(35))        
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)        
   left JOIN DLCRE CRE         
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )        
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)        
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)        
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )        
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))         
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso        
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST        
    ELSE @situacionTrabajador END        
  and RTRIM(LTRIM(dlcus)) in ( 'CT')        
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR        
 

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0               
	GROUP BY CR.DLACC

	SELECT convert(varchar(6),         
	dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )        
	, 112)  as PERIODO,         
	INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),        
	CODMOD = cast ( DLCM as char(10)),        
	CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),        
	CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),        
	[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,        
	CODDES = '0205',        
	MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),         
	APEPATER = cast ( DLPA as char(40)),        
	AMATER = cast ( DLMA as char(40)),        
	NOMBRE = cast ( DLMN as char(35))        
	FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)        
	left JOIN DLCRE CRE         
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )        
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)        
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)        
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )        
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))         
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE CC.[Codigo_proceso] = @Codigo_proceso        
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST        
    ELSE @situacionTrabajador END        
	and RTRIM(LTRIM(dlcus)) in ( 'CT')        
	AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR        
 	

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelELPORVERNIRText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/        
/* Fecha Creac  : BANBIF(AHSP) - 20130110    */        
/* Observacion  : Se solicito crear un Filtro para UGEL El Porvenir-B6 */        
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */        
/************************************************************************/        
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelELPORVERNIRText]        
@Codigo_proceso  as Uniqueidentifier,        
@SituacionTrabajador  as char(1)        
AS        
BEGIN        
                
DECLARE @CODIGO_CLIENTE_IBS AS INT        
DECLARE @TIPO_CUOTA AS INT        
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        
IF @TIPO_CUOTA = 1        
BEGIN        
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(VARCHAR(6),DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4))+SUBSTRING('00'+LTRIM(RTRIM(DLMP)),LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' AS DATETIME)), 112) AS PERIODO,        
  INSTIT = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD = CAST(DLCM AS CHAR(10)),        
  CARGO = ISNULL(CAST ( LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST( DLST AS CHAR(1)),        
  CODDES = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),        
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER = CAST(DLMA AS CHAR(40)),        
  NOMBRE = CAST(DLMN AS CHAR(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE        
  --monto_real = cc.DLIC        
 FROM ClienteCuota CC        
  LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
  LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)        
        AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
        AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
        AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
        AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))        
 WHERE Codigo_proceso = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
    ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B6')        
 AND DLIC >= 0        
        
END           
ELSE IF @TIPO_CUOTA = 2          
BEGIN          
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(varchar(6), DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime)), 112)  as PERIODO,                 
  INSTIT = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD = CAST(DLCM AS CHAR(10)),        
  CARGO = ISNULL(CAST(LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST(DLST AS CHAR(1)),        
  CODDES = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER = CAST(DLMA AS CHAR(40)),        
  NOMBRE = CAST(DLMN AS CHAR(35)),        
 FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC        
 FROM ClienteCuota CC        
 LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
 LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)        
    AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
    AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
    AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
    AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))        
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
        ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B6')        
  AND DLIC >= 0        
        
END          
ELSE IF @TIPO_CUOTA = 3        
BEGIN        
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <        
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
    WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
        
         
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(varchar(6),DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4))+SUBSTRING('00'+LTRIM(RTRIM(DLMP)),LEN(LTRIM(RTRIM(DLMP)))+ 1, 2 ) + '01' AS DATETIME)), 112) AS PERIODO,        
  INSTIT  = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD  = CAST(DLCM AS CHAR(10)),        
  CARGO   = ISNULL(CAST ( LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN  = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST(DLST AS CHAR(1)),        
  CODDES  = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER  = CAST(DLMA AS CHAR(40)),        
  NOMBRE  = CAST(DLMN AS CHAR(35)),        
 FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = CC.DLIC        
 FROM ClienteCuota CC        
 LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
 LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)        
       AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
       AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
       AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
       AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))        
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
    ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B6')        
  AND DLIC >= 0        
          
        
END        
        
END
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelHUAMACHUCOText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                
/* Modif. por : AHSP(GO)       */                
/* Fecha Modif : 2009/06/18       */                
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */                
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */      
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                      
/********************************************************************************/                
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelHUAMACHUCOText]                
@Codigo_proceso  as Uniqueidentifier,                
@SituacionTrabajador  as char ( 1 )                
AS                
BEGIN                
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                
--- ARCHIVO JULCAN                
                
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
                
        
IF @TIPO_CUOTA = 1                
BEGIN         
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL        
UGEL = cast (CRE.DLCUS as char(10)),       
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ('0'+  DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE                
--monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 WHERE [Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BH')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
         
        
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL        
UGEL = cast (CRE.DLCUS as char(10)),        
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ('0'+  DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),         
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI        
--CAMPO QUE YA NO VA EN EL REPORTE                
--monto_real = cc.DLIC                    
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BH')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
          
          
        
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
 WHERE DLIC >= 0                       
 GROUP BY CR.DLACC        
        
         
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL        
UGEL = cast (CRE.DLCUS as char(10)),        
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ('0'+  DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI         
--CAMPO QUE YA NO VA EN EL REPORTE                
--monto_real = cc.DLIC         
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
 and RTRIM(LTRIM(dlcus)) in ( 'BH')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
          
   DROP TABLE #TEMPO        
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelJaenText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelJaenText]          
@Codigo_proceso  as Uniqueidentifier,          
@SituacionTrabajador  as char ( 1 )          
AS          
BEGIN          
--- DIRECCION REGIONAL DE EDUCACION DE CAJAMARCA          
--- ARCHIVO DIREL DRECAJ     
  
   
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        

IF @TIPO_CUOTA = 1        
BEGIN 
	
	SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  --INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),          
  EMPRESA = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),          
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),          
  --[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  [T-PLANI] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  --AMATER = cast ( DLMA as char(40)),          
  APEMATER = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
   left JOIN DLCRE CRE           
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
 WHERE [Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END          
  and RTRIM(LTRIM(dlcus)) in ( 'AY')          
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
          
 

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  --INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),          
  EMPRESA = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),          
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),          
  --[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  [T-PLANI] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  --AMATER = cast ( DLMA as char(40)),          
  APEMATER = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
   left JOIN DLCRE CRE           
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END          
  and RTRIM(LTRIM(dlcus)) in ( 'AY')          
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
 

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  --INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),          
  EMPRESA = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),          
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),          
  --[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  [T-PLANI] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  --AMATER = cast ( DLMA as char(40)),          
  APEMATER = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
   left JOIN DLCRE CRE           
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )						
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE CC.[Codigo_proceso] = @Codigo_proceso          
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END          
	and RTRIM(LTRIM(dlcus)) in ( 'AY')          
	AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
 

	DROP TABLE #TEMPO

END

END

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelJULCANText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                
/* Modif. por : AHSP(GO)       */                
/* Fecha Modif : 2009/06/18       */                
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */                
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */       
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                 
/********************************************************************************/                
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelJULCANText]                
@Codigo_proceso  as Uniqueidentifier,                
@SituacionTrabajador  as char ( 1 )                
AS                
BEGIN                
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                
--- ARCHIVO JULCAN             
            
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
                
        
IF @TIPO_CUOTA = 1                
BEGIN         
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
  --CAMPO QUE YA NO VA EN EL REPORTE           
 --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 WHERE [Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BG')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
          
         
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
  --CAMPO QUE YA NO VA EN EL REPORTE                    
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BG')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
         
        
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
        
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,            
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
  --CAMPO QUE YA NO VA EN EL REPORTE           
  --monto_real = cc.DLIC                 
  FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
  left JOIN DLCRE CRE                 
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
  ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BG')                
  AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
         
  DROP TABLE #TEMPO        
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelLAESPERANZAText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/                
/* Fecha Creac  : BANBIF(AHSP) - 20130110    */                
/* Observacion  : Se solicito crear un Filtro para UGEL La Esperanza-B7 */        
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                
/************************************************************************/                
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelLAESPERANZAText]            
@Codigo_proceso  as Uniqueidentifier,        
@SituacionTrabajador  as char(1)        
AS        
BEGIN        
        
DECLARE @CODIGO_CLIENTE_IBS AS INT        
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        
IF @TIPO_CUOTA = 1        
BEGIN        
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(VARCHAR(6),DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4))+SUBSTRING('00'+LTRIM(RTRIM(DLMP)),LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' AS DATETIME)), 112) AS PERIODO,        
  INSTIT = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD = CAST(DLCM AS CHAR(10)),        
  CARGO = ISNULL(CAST ( LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST( DLST AS CHAR(1)),        
  CODDES = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),        
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER = CAST(DLMA AS CHAR(40)),        
  NOMBRE = CAST(DLMN AS CHAR(35)),      
 FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
--CAMPO QUE YA NO VA EN EL REPORTE        
  --monto_real = cc.DLIC        
 FROM ClienteCuota CC        
  LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
  LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)        
        AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
        AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
        AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
        AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))        
 WHERE Codigo_proceso = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
    ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B7')        
 AND DLIC >= 0        
        
END           
ELSE IF @TIPO_CUOTA = 2          
BEGIN          
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(varchar(6), DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime)), 112)  as PERIODO,                 
  INSTIT = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD = CAST(DLCM AS CHAR(10)),        
  CARGO = ISNULL(CAST(LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST(DLST AS CHAR(1)),        
  CODDES = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER = CAST(DLMA AS CHAR(40)),        
  NOMBRE = CAST(DLMN AS CHAR(35)),        
  FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC        
 FROM ClienteCuota CC        
 LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
 LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)   
    AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
    AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
    AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
    AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))        
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
        ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B7')        
  AND DLIC >= 0        
        
END          
ELSE IF @TIPO_CUOTA = 3        
BEGIN        
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <        
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
    WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
        
         
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(varchar(6),DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4))+SUBSTRING('00'+LTRIM(RTRIM(DLMP)),LEN(LTRIM(RTRIM(DLMP)))+ 1, 2 ) + '01' AS DATETIME)), 112) AS PERIODO,        
  INSTIT  = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD  = CAST(DLCM AS CHAR(10)),        
  CARGO   = ISNULL(CAST ( LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN  = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST(DLST AS CHAR(1)),        
  CODDES  = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER  = CAST(DLMA AS CHAR(40)),        
  NOMBRE  = CAST(DLMN AS CHAR(35)),        
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = CC.DLIC        
 FROM ClienteCuota CC        
 LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
 LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)        
       AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
       AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
       AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
       AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))        
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
    ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B7')        
  AND DLIC >= 0        
          
        
END        
        
END
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelMORROPONText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
   
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelMORROPONText] 
@Codigo_proceso  as Uniqueidentifier,            
@SituacionTrabajador  as char ( 1 )            
AS            
BEGIN            
--- DIRECCION REGIONAL DE EDUCACION DE CAJAMARCA            
--- ARCHIVO DIREL DRECAJ        
    
        
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
 SELECT convert(varchar(6),             
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )            
  , 112)  as PERIODO,             
  --INSTIT      
  EMPRESA = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),            
  CODMOD = cast ( DLCM as char(10)),            
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),            
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),            
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODDES = '0205',            
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
  APEPATER = cast ( DLPA as char(40)),            
  AMATER = cast ( DLMA as char(40)),            
  NOMBRE = cast ( DLMN as char(35))            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
 WHERE [Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
 AND substring(DLCR,1,2) = 'FJ' --  MORROPÓN
  
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
 SELECT convert(varchar(6),             
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )            
  , 112)  as PERIODO,             
  --INSTIT      
  EMPRESA = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),            
  CODMOD = cast ( DLCM as char(10)),            
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),            
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),            
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODDES = '0205',            
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
  APEPATER = cast ( DLPA as char(40)),            
  AMATER = cast ( DLMA as char(40)),            
  NOMBRE = cast ( DLMN as char(35))            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 WHERE CC.[Codigo_proceso] = @Codigo_proceso            
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
 AND substring(DLCR,1,2) = 'FJ' --  MORROPÓN
   
  
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE DLIC >= 0                 
 GROUP BY CR.DLACC  
  
   
 SELECT convert(varchar(6),             
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )            
  , 112)  as PERIODO,             
  --INSTIT      
  EMPRESA = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),            
  CODMOD = cast ( DLCM as char(10)),            
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),            
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),            
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,            
  CODDES = '0205',            
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),             
  APEPATER = cast ( DLPA as char(40)),            
  AMATER = cast ( DLMA as char(40)),            
  NOMBRE = cast ( DLMN as char(35))            
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)            
   left JOIN DLCRE CRE             
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )            
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)            
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)            
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )            
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))             
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso            
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST            
    ELSE @situacionTrabajador END            
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR            
 AND substring(DLCR,1,2) = 'FJ' --  MORROPÓN   
  
 DROP TABLE #TEMPO  
  
END  
  
END  
  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelOTUZCOText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                
/* Modif. por : AHSP(GO)       */                
/* Fecha Modif : 2009/06/18       */                
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */                
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */      
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                  
/********************************************************************************/                
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelOTUZCOText]                
@Codigo_proceso  as Uniqueidentifier,                
@SituacionTrabajador  as char ( 1 )                
AS                
BEGIN                
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                
--- ARCHIVO OTUZCO             
          
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
                
        
IF @TIPO_CUOTA = 1                
BEGIN         
         
 SELECT       
  -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
  UGEL = cast (CRE.DLCUS as char(10)),      
  convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
  --CAMPO QUE YA NO VA EN EL REPORTE              
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 WHERE [Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BF')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
         
        
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
         
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',        
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
  --CAMPO QUE YA NO VA EN EL REPORTE            
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BF')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
          
          
         
        
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
        
 SELECT       
  -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
  UGEL = cast (CRE.DLCUS as char(10)),      
  convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),           
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
  --CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
 and RTRIM(LTRIM(dlcus)) in ( 'BF')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
          
         
 DROP TABLE #TEMPO        
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelPacasmayoText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                  
/* Modif. por : AHSP(GO)       */                  
/* Fecha Modif : 2009/06/18       */                  
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */                  
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */        
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                    
/********************************************************************************/                  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelPacasmayoText]                  
@Codigo_proceso  as Uniqueidentifier,                  
@SituacionTrabajador  as char ( 1 )                  
AS                  
BEGIN                  
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                  
--- ARCHIVO Pacasmayo               
                
DECLARE @CODIGO_CLIENTE_IBS AS INT                   
DECLARE @TIPO_CUOTA AS INT                  
                  
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                  
GROUP BY DLCC                  
                  
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                  
                  
          
IF @TIPO_CUOTA = 1                  
BEGIN           
 SELECT         
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL        
UGEL = cast (CRE.DLCUS as char(10)),        
 convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                  
  , 112)  as PERIODO,                   
  INSTIT = CAST ('0' + DLCCIN AS CHAR ( 3 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '0205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35)),        
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
--CAMPO QUE YA NO VA EN EL REPORTE                
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
   left JOIN DLCRE CRE                   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                   
 WHERE [Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END                  
  and RTRIM(LTRIM(dlcus)) in ( 'BC')                  
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                  
           
END          
ELSE IF  @TIPO_CUOTA = 2              
BEGIN             
          
 SELECT         
-- CAMPO UGEL AÑADIDO AL REPORTE EXCEL        
UGEL = cast (CRE.DLCUS as char(10)),        
 convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                  
  , 112)  as PERIODO,                   
  INSTIT = CAST ('0' + DLCCIN AS CHAR ( 3 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '0205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35)),        
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
--CAMPO QUE YA NO VA EN EL REPORTE                
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
   left JOIN DLCRE CRE                   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                  
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                             
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END                  
  and RTRIM(LTRIM(dlcus)) in ( 'BC')                  
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                  
        
END          
          
ELSE IF  @TIPO_CUOTA = 3              
BEGIN            
             
          
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'          
    INTO #TEMPO          
 FROM ClienteCuota CC          
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)          
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso           
       AND CC.DLNP = CR.DLACC          
       AND(CONVERT(INT,          
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +           
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )           
        <          
        CONVERT(INT,          
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +           
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +           
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END          
        )          
        OR          
                  
        CONVERT(INT,          
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END          
        )          
        =          
        CONVERT(INT,          
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +           
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END           
        )          
      )          
 )          
 WHERE DLIC >= 0          
 GROUP BY CR.DLACC          
          
          
 SELECT         
-- CAMPO UGEL AÑADIDO AL REPORTE EXCEL        
UGEL = cast (CRE.DLCUS as char(10)),        
 convert(varchar(6),                   
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                  
  , 112)  as PERIODO,                   
  INSTIT = CAST ('0' + DLCCIN AS CHAR ( 3 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),          
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '0205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35)),        
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI        
  --CAMPO QUE YA NO VA EN EL REPORTE                
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                  
   left JOIN DLCRE CRE                   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                  
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                             
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END                  
 and RTRIM(LTRIM(dlcus)) in ( 'BC')                  
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                  
            
           
 DROP TABLE #TEMPO          
          
END          
          
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelPATAZText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                
/* Modif. por : AHSP(GO)       */                
/* Fecha Modif : 2009/06/18       */                
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */                
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */       
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                 
/********************************************************************************/                
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelPATAZText]                
@Codigo_proceso  as Uniqueidentifier,                
@SituacionTrabajador  as char ( 1 )                
AS                
BEGIN                
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                
--- ARCHIVO PATAZ                  
                
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
                
        
        
IF @TIPO_CUOTA = 1                
BEGIN         
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),       
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE             
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 WHERE [Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BJ')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
         
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                           
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BJ')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
         
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
        
         
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,    
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                           
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
 and RTRIM(LTRIM(dlcus)) in ( 'BJ')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
         
        
 DROP TABLE #TEMPO        
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelSanIgnacioText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


   
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelSanIgnacioText]          
@Codigo_proceso  as Uniqueidentifier,          
@SituacionTrabajador  as char ( 1 )          
AS          
BEGIN          
--- DIRECCION REGIONAL DE EDUCACION DE CAJAMARCA          
--- ARCHIVO DIREL DRECAJ       
    
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          


IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  empresa = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),          
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),          
  [T-Plani] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  apemater = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
   left JOIN DLCRE CRE           
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
 WHERE [Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END          
  and RTRIM(LTRIM(dlcus)) in ( 'AZ')          
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
 
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  empresa = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),          
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),          
  [T-PLANI] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  apemater = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
   left JOIN DLCRE CRE           
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 WHERE CC.[Codigo_proceso] = @Codigo_proceso          
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END          
  and RTRIM(LTRIM(dlcus)) in ( 'AZ')          
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
 

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	SELECT convert(varchar(6),           
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )          
  , 112)  as PERIODO,           
  empresa = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),          
  CODMOD = cast ( DLCM as char(10)),          
  CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),          
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),          
  [T-PLANI] = CAST ( DLST AS CHAR ( 1 ) ) ,          
  CODDES = '0205',          
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),           
  APEPATER = cast ( DLPA as char(40)),          
  apemater = cast ( DLMA as char(40)),          
  NOMBRE = cast ( DLMN as char(35))          
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)          
   left JOIN DLCRE CRE           
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )          
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)          
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)          
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )          
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))           
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE CC.[Codigo_proceso] = @Codigo_proceso          
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END          
	and RTRIM(LTRIM(dlcus)) in ( 'AZ')          
	AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR          
 
	DROP TABLE #TEMPO

END

END
       
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelSanMarcosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelSanMarcosText]      
@Codigo_proceso  as Uniqueidentifier,      
@SituacionTrabajador  as char ( 1 )      
AS      
BEGIN      
--- DIRECCION REGIONAL DE EDUCACION DE SAN MARCOS   
--- ARCHIVO DIREL DRECAJ    


          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
	

IF @TIPO_CUOTA = 1        
BEGIN 

		SELECT convert(varchar(6),       
		dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
		, 112)  as PERIODO,       
		INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),      
		CODMOD = cast ( DLCM as char(10)),      
		CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),      
		CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
		[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,      
		CODDES = '0205',      
		MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),       
		APEPATER = cast ( DLPA as char(40)),      
		AMATER = cast ( DLMA as char(40)),      
		NOMBRE = cast ( DLMN as char(35))      
		FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)      
		left JOIN DLCRE CRE       
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
		AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
		AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
		AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
		AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))       
		WHERE [Codigo_proceso] = @Codigo_proceso      
		and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
		ELSE @situacionTrabajador END      
		and RTRIM(LTRIM(dlcus))  in ('AS')   -- RHERESI DEACUERDO A LO MANIFESTADO POR MARCO CASANOVA  
		AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR      
  
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

		SELECT convert(varchar(6),       
		dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
		, 112)  as PERIODO,       
		INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),      
		CODMOD = cast ( DLCM as char(10)),      
		CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),      
		CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
		[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,      
		CODDES = '0205',      
		MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),       
		APEPATER = cast ( DLPA as char(40)),      
		AMATER = cast ( DLMA as char(40)),      
		NOMBRE = cast ( DLMN as char(35))      
		FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)      
		left JOIN DLCRE CRE       
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
		AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
		AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
		AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
		AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))
		INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                           
		WHERE cc.[Codigo_proceso] = @Codigo_proceso      
		and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
		ELSE @situacionTrabajador END      
		and RTRIM(LTRIM(dlcus)) in ('AS')  -- RHERESI DEACUERDO A LO MANIFESTADO POR MARCO CASANOVA  
				AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR      
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
    WHERE DLIC >= 0               
	GROUP BY CR.DLACC

		
		SELECT convert(varchar(6),       
		dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
		, 112)  as PERIODO,       
		INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),      
		CODMOD = cast ( DLCM as char(10)),      
		CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),      
		CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
		[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,      
		CODDES = '0205',      
		MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),       
		APEPATER = cast ( DLPA as char(40)),      
		AMATER = cast ( DLMA as char(40)),      
		NOMBRE = cast ( DLMN as char(35))      
		FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)      
		left JOIN DLCRE CRE       
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
		AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
		AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
		AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
		AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))
		--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                           
		INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
		WHERE [Codigo_proceso] = @Codigo_proceso      
		and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
		ELSE @situacionTrabajador END      
		and RTRIM(LTRIM(dlcus))  in ( 'AS')   -- RHERESI DEACUERDO A LO MANIFESTADO POR MARCO CASANOVA  
		AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR      
  
		DROP TABLE #TEMPO
	
END
END
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelSanMiguelText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelSanMiguelText]      
@Codigo_proceso  as Uniqueidentifier,      
@SituacionTrabajador  as char ( 1 )      
AS      
BEGIN      
--- DIRECCION REGIONAL DE EDUCACION DE SAN MIGUEL      
--- ARCHIVO DIREL DRECAJ    


          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
	

IF @TIPO_CUOTA = 1        
BEGIN 

		SELECT convert(varchar(6),       
		dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
		, 112)  as PERIODO,       
		INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),      
		CODMOD = cast ( DLCM as char(10)),      
		CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),      
		CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
		[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,      
		CODDES = '0205',      
		MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),       
		APEPATER = cast ( DLPA as char(40)),      
		AMATER = cast ( DLMA as char(40)),      
		NOMBRE = cast ( DLMN as char(35))      
		FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)      
		left JOIN DLCRE CRE       
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
		AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
		AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
		AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
		AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))       
		WHERE [Codigo_proceso] = @Codigo_proceso      
		and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
		ELSE @situacionTrabajador END      
		and RTRIM(LTRIM(dlcus))  in ( 'AQ')  -- RHERESI DEACUERDO A LO MANIFESTADO POR MARCO CASANOVA  
		AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR      
  
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

		SELECT convert(varchar(6),       
		dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
		, 112)  as PERIODO,       
		INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),      
		CODMOD = cast ( DLCM as char(10)),      
		CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),      
		CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
		[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,      
		CODDES = '0205',      
		MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),       
		APEPATER = cast ( DLPA as char(40)),      
		AMATER = cast ( DLMA as char(40)),      
		NOMBRE = cast ( DLMN as char(35))      
		FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)      
		left JOIN DLCRE CRE       
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
		AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
		AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
		AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
		AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))
		INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                           
		WHERE cc.[Codigo_proceso] = @Codigo_proceso      
		and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
		ELSE @situacionTrabajador END      
		and RTRIM(LTRIM(dlcus)) in ( 'AQ')  -- RHERESI DEACUERDO A LO MANIFESTADO POR MARCO CASANOVA  
				AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR      
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
    WHERE DLIC >= 0               
	GROUP BY CR.DLACC

		
		SELECT convert(varchar(6),       
		dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
		, 112)  as PERIODO,       
		INSTIT = substring( '000' +  Ltrim(rtrim( CAST (DLCCIN AS CHAR (2)))), len(Ltrim(rtrim( CAST (DLCCIN AS CHAR (2))))) + 1,3 ),      
		CODMOD = cast ( DLCM as char(10)),      
		CARGO = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), ''),      
		CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),      
		[T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,      
		CODDES = '0205',      
		MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),       
		APEPATER = cast ( DLPA as char(40)),      
		AMATER = cast ( DLMA as char(40)),      
		NOMBRE = cast ( DLMN as char(35))      
		FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)      
		left JOIN DLCRE CRE       
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
		AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
		AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
		AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
		AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))
		--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                           
		INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
		WHERE [Codigo_proceso] = @Codigo_proceso      
		and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
		ELSE @situacionTrabajador END      
		and RTRIM(LTRIM(dlcus))  in ( 'AQ')  -- RHERESI DEACUERDO A LO MANIFESTADO POR MARCO CASANOVA  
		AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR      
  
		DROP TABLE #TEMPO
	
END
END
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelSANTIAGO_DE_CHUCOText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                
/* Modif. por : AHSP(GO)       */                
/* Fecha Modif : 2009/06/18       */                
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */                
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */         
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */               
/********************************************************************************/                
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelSANTIAGO_DE_CHUCOText]                
@Codigo_proceso  as Uniqueidentifier,                
@SituacionTrabajador  as char ( 1 )                
AS                
BEGIN                
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                
--- ARCHIVO JULCAN                
          
            
                
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
                
        
IF @TIPO_CUOTA = 1                
BEGIN         
         
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE              
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 WHERE [Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BI')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
        
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),              
 FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
  and RTRIM(LTRIM(dlcus)) in ( 'BI')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
          
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                 
  dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                
  , 112)  as PERIODO,                 
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                
  CODMOD = cast ( DLCM as char(10)),                
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                
 [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                
  CODDES = '0205',                
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER = cast ( DLPA as char(40)),                
  AMATER = cast ( DLMA as char(40)),                
  NOMBRE = cast ( DLMN as char(35)),              
 FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC                 
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
 and RTRIM(LTRIM(dlcus)) in ( 'BI')                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
          
        
 DROP TABLE #TEMPO        
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelTrujilloText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                      
/* Modif. por : AHSP(GO)       */                      
/* Fecha Modif : 2009/06/18       */                      
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */                      
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */            
/* Cambio COT 22-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                      
/********************************************************************************/                      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelTrujilloText]                 
@Codigo_proceso  as Uniqueidentifier,                      
@SituacionTrabajador  as char ( 1 )                     
AS                      
BEGIN                      
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                      
--- ARCHIVO DIREL DRECAJ                   
                   
DECLARE @CODIGO_CLIENTE_IBS AS INT                       
DECLARE @TIPO_CUOTA AS INT                      
                      
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                      
GROUP BY DLCC                      
                      
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                      
                      
IF @TIPO_CUOTA = 1                      
 BEGIN  --BEGIN IF CUOTA                    
                
 SELECT             
 UGEL = cast (CRE.DLCUS as char(10)),--SE AÑADIO EL CAMPO UGEL            
 convert(varchar(6),dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ) , 112)  as PERIODO,                       
INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),                       
 CODMOD = cast ( DLCM as char(10)),                      
 CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                      
 CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                      
 [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                      
 CODDES = '0205',                      
 MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                       
 APEPATER = cast ( DLPA as char(40)),                      
 AMATER = cast ( DLMA as char(40)),                      
 NOMBRE = cast ( DLMN as char(35)),            
 FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE      
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI            
 --monto_real = cc.DLIC                       
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                      
 left JOIN DLCRE CRE                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                       
 WHERE [Codigo_proceso] = @Codigo_proceso                      
 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                      
    ELSE @situacionTrabajador END                      
 AND RTRIM(LTRIM(dlcus)) in ( 'BA')                      
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                      
               
END                 
ELSE IF @TIPO_CUOTA = 2                
BEGIN                
                
 SELECT             
 UGEL = cast (CRE.DLCUS as char(10)),--SE AÑADIO EL CAMPO UGEL            
 convert(varchar(6),dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ), 112)  as PERIODO,                       
 INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),                       
 CODMOD = cast ( DLCM as char(10)),                      
 CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                      
 CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),       
 [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                      
 CODDES = '0205',                      
 MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                       
 APEPATER = cast ( DLPA as char(40)),                    
 AMATER = cast ( DLMA as char(40)),                      
 NOMBRE = cast ( DLMN as char(35)),                    
 --monto_real = cc.DLIC                       
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE      
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI         
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                      
 LEFT JOIN DLCRE CRE                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                       
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                      
 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                      
    ELSE @situacionTrabajador END                      
 AND RTRIM(LTRIM(dlcus)) in ( 'BA')                      
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                      
                
               
END                
ELSE IF @TIPO_CUOTA = 3              
BEGIN              
              
               
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'              
    INTO #TEMPO              
 FROM ClienteCuota CC              
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)              
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso               
       AND CC.DLNP = CR.DLACC              
       AND(CONVERT(INT,              
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +               
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +               
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )               
        <              
        CONVERT(INT,              
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +               
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +               
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END              
        )              
        OR              
                      
        CONVERT(INT,              
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +               
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END              
        )              
        =              
        CONVERT(INT,              
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +               
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END              
        )              
      )              
 )              
    WHERE DLIC >= 0              
 GROUP BY CR.DLACC              
              
               
 SELECT             
 UGEL = cast (CRE.DLCUS as char(10)),--SE AÑADIO EL CAMPO UGEL           convert(varchar(6), dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ) , 112)  as PERIODO,                       
 INSTIT = CAST ( DLCCIN AS CHAR ( 2 ) ),                       
 CODMOD = cast ( DLCM as char(10)),                      
 CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                      
 CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                      
 [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                      
 CODDES = '0205',                      
 MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                       
 APEPATER = cast ( DLPA as char(40)),                      
 AMATER = cast ( DLMA as char(40)),                      
 NOMBRE = cast ( DLMN as char(35)),                    
 --monto_real = cc.DLIC                       
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE      
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI         
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                      
 LEFT JOIN DLCRE CRE                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                       
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                               
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                      
 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                      
    ELSE @situacionTrabajador END                      
 AND RTRIM(LTRIM(dlcus)) in ( 'BA')                      
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                      
                
              
              
END              
                    
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelTRUJNORESTEText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/        
/* Fecha Creac  : BANBIF(AHSP) - 20130110    */        
/* Observacion  : Se solicito crear un Filtro para UGEL Trj Nor Este-B8 */      
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */        
/************************************************************************/        
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelTRUJNORESTEText]        
@Codigo_proceso  as Uniqueidentifier,        
@SituacionTrabajador  as char(1)        
AS        
BEGIN        
        
DECLARE @CODIGO_CLIENTE_IBS AS INT        
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        
IF @TIPO_CUOTA = 1        
BEGIN        
        
 SELECT       
  -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(VARCHAR(6),DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4))+SUBSTRING('00'+LTRIM(RTRIM(DLMP)),LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' AS DATETIME)), 112) AS PERIODO,        
  INSTIT = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD = CAST(DLCM AS CHAR(10)),        
  CARGO = ISNULL(CAST ( LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST( DLST AS CHAR(1)),        
  CODDES = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),        
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER = CAST(DLMA AS CHAR(40)),        
  NOMBRE = CAST(DLMN AS CHAR(35)),        
  FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE        
  --monto_real = cc.DLIC        
 FROM ClienteCuota CC        
  LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
  LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)        
        AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
        AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
        AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
        AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))        
 WHERE Codigo_proceso = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
    ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B8')        
 AND DLIC >= 0        
        
END           
ELSE IF @TIPO_CUOTA = 2          
BEGIN          
        
 SELECT       
  -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(varchar(6), DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime)), 112)  as PERIODO,                 
  INSTIT = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD = CAST(DLCM AS CHAR(10)),        
  CARGO = ISNULL(CAST(LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST(DLST AS CHAR(1)),        
  CODDES = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER = CAST(DLMA AS CHAR(40)),        
  NOMBRE = CAST(DLMN AS CHAR(35)),        
  FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
--CAMPO QUE YA NO VA EN EL REPORTE        
  --monto_real = cc.DLIC         
 FROM ClienteCuota CC        
 LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
 LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)        
    AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
    AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
    AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
    AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))        
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
        ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B8')        
  AND DLIC >= 0        
        
END          
ELSE IF @TIPO_CUOTA = 3        
BEGIN        
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <        
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
    WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
        
         
 SELECT       
  -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(varchar(6),DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4))+SUBSTRING('00'+LTRIM(RTRIM(DLMP)),LEN(LTRIM(RTRIM(DLMP)))+ 1, 2 ) + '01' AS DATETIME)), 112) AS PERIODO,        
  INSTIT  = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD  = CAST(DLCM AS CHAR(10)),        
  CARGO   = ISNULL(CAST ( LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN  = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST(DLST AS CHAR(1)),        
  CODDES  = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER  = CAST(DLMA AS CHAR(40)),        
  NOMBRE  = CAST(DLMN AS CHAR(35)),        
 FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
--CAMPO QUE YA NO VA EN EL REPORTE        
  --monto_real = cc.DLIC         
 FROM ClienteCuota CC        
 LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
 LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)        
       AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
       AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
       AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
       AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))        
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
    ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B8')        
  AND DLIC >= 0        
          
        
END        
        
END
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelTRUJSURESTEText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/        
/* Fecha Creac  : BANBIF(AHSP) - 20130110    */        
/* Observacion  : Se solicito crear un Filtro para UGEL Trj Sur Este-B9 */        
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */        
/************************************************************************/        
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelTRUJSURESTEText]        
@Codigo_proceso  AS Uniqueidentifier,        
@SituacionTrabajador AS CHAR(1)        
AS        
BEGIN        
        
DECLARE @CODIGO_CLIENTE_IBS AS INT        
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        
IF @TIPO_CUOTA = 1        
BEGIN        
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(VARCHAR(6),DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4))+SUBSTRING('00'+LTRIM(RTRIM(DLMP)),LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' AS DATETIME)), 112) AS PERIODO,        
  INSTIT = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD = CAST(DLCM AS CHAR(10)),        
  CARGO = ISNULL(CAST ( LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST( DLST AS CHAR(1)),        
  CODDES = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),        
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER = CAST(DLMA AS CHAR(40)),        
  NOMBRE = CAST(DLMN AS CHAR(35)),        
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE        
--  monto_real = cc.DLIC        
 FROM ClienteCuota CC        
  LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
  LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)        
        AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
        AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
        AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
        AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))        
 WHERE Codigo_proceso = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
    ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B9')        
 AND DLIC >= 0        
        
END           
ELSE IF @TIPO_CUOTA = 2          
BEGIN          
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(varchar(6), DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime)), 112)  as PERIODO,                 
  INSTIT = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD = CAST(DLCM AS CHAR(10)),        
  CARGO = ISNULL(CAST(LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST(DLST AS CHAR(1)),        
  CODDES = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER = CAST(DLMA AS CHAR(40)),        
  NOMBRE = CAST(DLMN AS CHAR(35)),        
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC        
 FROM ClienteCuota CC        
 LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
 LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)        
    AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
    AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
    AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
    AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))       INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
        ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B9')        
  AND DLIC >= 0        
        
END          
ELSE IF @TIPO_CUOTA = 3        
BEGIN        
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <        
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
    WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
        
         
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 CONVERT(varchar(6),DATEADD(m, -1, CAST(CAST(DLAP AS VARCHAR(4))+SUBSTRING('00'+LTRIM(RTRIM(DLMP)),LEN(LTRIM(RTRIM(DLMP)))+ 1, 2 ) + '01' AS DATETIME)), 112) AS PERIODO,        
  INSTIT  = CAST('0' + DLCCIN AS CHAR(3)),        
  CODMOD  = CAST(DLCM AS CHAR(10)),        
  CARGO   = ISNULL(CAST ( LEFT(DLCCR, 6) AS VARCHAR(6)), ''),        
  CARBEN  = CAST(ISNULL(DLPLA, '') AS VARCHAR(4)),        
  [T-PLLA]= CAST(DLST AS CHAR(1)),        
  CODDES  = '0205',        
  MONTODES= SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
  APEPATER= CAST(DLPA AS CHAR(40)),        
  AMATER  = CAST(DLMA AS CHAR(40)),        
  NOMBRE  = CAST(DLMN AS CHAR(35)),        
  FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = CC.DLIC        
 FROM ClienteCuota CC        
 LEFT JOIN DLCEC CEC ON (CEC.DLCCDG = CC.DLCC)        
 LEFT JOIN DLCRE CRE ON (RTRIM(CC.DLCC)  = RTRIM(CRE.DLCCC)        
       AND RTRIM(CC.DLAN)  = RTRIM(CRE.DLAÑO)        
       AND RTRIM(CC.DLAG)  = RTRIM(CRE.DLAGC)        
       AND RTRIM(CC.DLCO)  = RTRIM(CRE.DLCOC)        
       AND RTRIM(CRE.DLACC)= RTRIM(CC.DLNP))        
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @Codigo_proceso        
  AND DLST = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST        
    ELSE @situacionTrabajador END        
  AND RTRIM(LTRIM(dlcus)) in ('B9')        
  AND DLIC >= 0        
          
        
END        
        
END
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIREL2UgelViruText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/********************************************************************************/                
/* Modif. por : AHSP(GO)       */                
/* Fecha Modif : 2009/06/18       */                
/* Motivo : El Campo DLCCR no deberia > a 6 caracteres   */                
/* Solucion : Se cortara el campo DLCCR para que solo sea de maximo 6 */       
/* Cambio COT 23-04-14: Se Agregan los Campos UGEL - DNI - FINICRE */                 
/********************************************************************************/                
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIREL2UgelViruText]                
@Codigo_proceso  as Uniqueidentifier,                  
@SituacionTrabajador  as char ( 1 )                  
AS                  
BEGIN                  
--- DIRECCION REGIONAL DE EDUCACION LA LIBERTAD                  
--- ARCHIVO OTUZCO             
             
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
                   
IF @TIPO_CUOTA = 1                
BEGIN         
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                   
    dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                  
  , 112)  as PERIODO,                   
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '0205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35)),      
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE              
  --monto_real = cc.DLIC                   
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                   
 WHERE [Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END                  
  and RTRIM(LTRIM(dlcus)) in ( 'BM')                  
  AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                  
          
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                   
    dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                  
  , 112)  as PERIODO,                   
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                  
  CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '0205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI      
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC                   
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))               
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END                  
  and RTRIM(LTRIM(dlcus)) in ( 'BM')                  
  AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                  
          
        
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
        
 SELECT       
 -- CAMPO UGEL AÑADIDO AL REPORTE EXCEL      
UGEL = cast (CRE.DLCUS as char(10)),      
 convert(varchar(6),                   
    dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )                  
  , 112)  as PERIODO,                   
  INSTIT = CAST ( '0' + DLCCIN AS CHAR ( 3 ) ),                  
  CODMOD = cast ( DLCM as char(10)),                  
  CARGO = isnull ( CAST ( LEFT(DLCCR, 6) AS VARCHAR ( 6 )), ''),                  
CARBEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),                  
  [T-PLLA] = CAST ( DLST AS CHAR ( 1 ) ) ,                  
  CODDES = '0205',                  
  MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                   
  APEPATER = cast ( DLPA as char(40)),                  
  AMATER = cast ( DLMA as char(40)),                  
  NOMBRE = cast ( DLMN as char(35)),              
FINICRE = cast (CRE.FINICRE as char(10)), --SE AÑADIO EL CAMPO FINICRE    
 DNI = cast (CRE.DLDNI as char(10))--SE AÑADIO EL CAMPO DNI       
--CAMPO QUE YA NO VA EN EL REPORTE      
  --monto_real = cc.DLIC                   
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))               
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                  
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END                  
 and RTRIM(LTRIM(dlcus)) in ( 'BM')                  
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                  
          
 DROP TABLE #TEMPO        
        
END        
        
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIRELText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIRELText]  
@Codigo_proceso as uniqueidentifier,  
@situacionTrabajador as char ( 1 )   
AS  
BEGIN  
  
        
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
	
IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT  CAST(DLAP AS VARCHAR(4))   
  + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) as DLPER,  
  DLEMP = CAST ( DLCCIN AS CHAR ( 2 ) ),  
  DLCDM = cast ( DLCM as char(10)),  
  DLCRG = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), '')/*cast ( CASE WHEN LEN (DLCR)= 14  OR LEN (DLCR)= 12 THEN  
    SUBSTRING(DLCR, 5, 6)   
   ELSE '' END as char(6))*/,  
  DLCBE = CAST (ISNULL(DLPLA, '') AS VARCHAR(4))/*cast ( CASE WHEN LEN (DLCR)= 14  OR LEN (DLCR)= 12 THEN  
    SUBSTRING(DLCR, 11, 4)   
   ELSE '' END as char(4))*/,  
  DLTIP = CAST ( DLST AS CHAR ( 1 ) ) ,  
  DLCDE = '205',  
  DLIMD = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),   
  DLAPP = cast ( DLPA as char(40)),  
  DLAPM = cast ( DLMA as char(40)),  
  DLNBR = cast ( DLMN as char(35))  
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)  
   left JOIN DLCRE CRE   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )  
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)  
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)  
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )  
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))   
 WHERE [Codigo_proceso] = @Codigo_proceso  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST  
    ELSE @situacionTrabajador END 
  AND DLIC >= 0    
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT  CAST(DLAP AS VARCHAR(4))   
  + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) as DLPER,  
  DLEMP = CAST ( DLCCIN AS CHAR ( 2 ) ),  
  DLCDM = cast ( DLCM as char(10)),  
  DLCRG = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), '')/*cast ( CASE WHEN LEN (DLCR)= 14  OR LEN (DLCR)= 12 THEN  
    SUBSTRING(DLCR, 5, 6)   
   ELSE '' END as char(6))*/,  
  DLCBE = CAST (ISNULL(DLPLA, '') AS VARCHAR(4))/*cast ( CASE WHEN LEN (DLCR)= 14  OR LEN (DLCR)= 12 THEN  
    SUBSTRING(DLCR, 11, 4)   
   ELSE '' END as char(4))*/,  
  DLTIP = CAST ( DLST AS CHAR ( 1 ) ) ,  
  DLCDE = '205',  
  DLIMD = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),   
  DLAPP = cast ( DLPA as char(40)),  
  DLAPM = cast ( DLMA as char(40)),  
  DLNBR = cast ( DLMN as char(35))  
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)  
   left JOIN DLCRE CRE   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )  
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)  
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)  
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )  
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))
	INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                       
	WHERE CC.[Codigo_proceso] = @Codigo_proceso  
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST  
    ELSE @situacionTrabajador END
	AND DLIC >= 0     
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0   
	GROUP BY CR.DLACC

	SELECT  CAST(DLAP AS VARCHAR(4))   
  + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) as DLPER,  
  DLEMP = CAST ( DLCCIN AS CHAR ( 2 ) ),  
  DLCDM = cast ( DLCM as char(10)),  
  DLCRG = isnull ( CAST ( DLCCR AS VARCHAR ( 6 )), '')/*cast ( CASE WHEN LEN (DLCR)= 14  OR LEN (DLCR)= 12 THEN  
    SUBSTRING(DLCR, 5, 6)   
   ELSE '' END as char(6))*/,  
  DLCBE = CAST (ISNULL(DLPLA, '') AS VARCHAR(4))/*cast ( CASE WHEN LEN (DLCR)= 14  OR LEN (DLCR)= 12 THEN  
    SUBSTRING(DLCR, 11, 4)   
   ELSE '' END as char(4))*/,  
  DLTIP = CAST ( DLST AS CHAR ( 1 ) ) ,  
  DLCDE = '205',  
  DLIMD = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(8)),'.','')))) + 1 ,8 ),   
  DLAPP = cast ( DLPA as char(40)),  
  DLAPM = cast ( DLMA as char(40)),  
  DLNBR = cast ( DLMN as char(35))  
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)  
   left JOIN DLCRE CRE   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )  
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)  
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)  
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )  
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                       
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE CC.[Codigo_proceso] = @Codigo_proceso  
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST  
    ELSE @situacionTrabajador END  
	AND DLIC >= 0   
	
	DROP TABLE #TEMPO

END

END

 
 

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIRESAPIURAText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
     
        
        
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIRESAPIURAText]                
@Codigo_proceso  as Uniqueidentifier,                
@SituacionTrabajador  as char ( 1 )                
AS                
BEGIN                
--- DIRECCION REGIONAL DE SALUD DE PIURA  
            
              
DECLARE @CODIGO_CLIENTE_IBS AS INT               
DECLARE @TIPO_CUOTA AS INT              
              
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso              
GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                          
      
      
IF @TIPO_CUOTA = 1              
BEGIN       
 SELECT   
 [CODIGO ENTIDAD] = convert(char(8), '2501' + REPLICATE('0',2 - LEN(ltrim(rtrim(cc.dlmp)))) + CONVERT(VARCHAR,ltrim(rtrim(cc.dlmp))) + substring(ltrim(rtrim(cc.dlap)), 3, 2)),   
 [DNI] = convert(char(8), cre.DLDNI),  
 [APELLIDOS Y NOMBRES] = convert(char(45), cc.dlne),  
 [MONTO A DESCONTAR] = convert(varchar, ltrim(rtrim(convert(int, cc.DLIC * 100)))) + REPLICATE('0',9 - LEN(ltrim(rtrim(convert(int, cc.DLIC * 100)))))  
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
    left JOIN DLCRE CRE                 
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
   AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 WHERE [Codigo_proceso] = @Codigo_proceso                
   and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
  ELSE @situacionTrabajador END                
  AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
 -- AND substring(DLCR,1,2) <> 'FJ' --  MORROPÓN        
END      
ELSE IF  @TIPO_CUOTA = 2          
BEGIN         
 SELECT        
 [CODIGO ENTIDAD] = convert(char(8), '2501' + REPLICATE('0',2 - LEN(ltrim(rtrim(cc.dlmp)))) + CONVERT(VARCHAR,ltrim(rtrim(cc.dlmp))) + substring(ltrim(rtrim(cc.dlap)), 3, 2)),   
 [DNI] = convert(char(8), cre.DLDNI),   
 [APELLIDOS Y NOMBRES] = convert(char(45), cc.dlne),  
 [MONTO A DESCONTAR] = convert(varchar, ltrim(rtrim(convert(int, cc.DLIC * 100)))) + REPLICATE('0',9 - LEN(ltrim(rtrim(convert(int, cc.DLIC * 100)))))  
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))          
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
-- AND substring(DLCR,1,2) <> 'FJ' --  MORROPÓN    
      
END      
      
ELSE IF  @TIPO_CUOTA = 3          
BEGIN               
      
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'      
    INTO #TEMPO      
 FROM ClienteCuota CC      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)      
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso       
       AND CC.DLNP = CR.DLACC      
       AND(CONVERT(INT,      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +       
      CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )       
        <       
        CONVERT(INT,      
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END      
        )      
        OR      
              
        CONVERT(INT,      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END      
        )      
        =      
        CONVERT(INT,      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END       
        )      
      )      
 )      
 WHERE DLIC >= 0                     
 GROUP BY CR.DLACC        
       
 SELECT   
 [CODIGO ENTIDAD] = convert(char(8), '2501' + REPLICATE('0',2 - LEN(ltrim(rtrim(cc.dlmp)))) + CONVERT(VARCHAR,ltrim(rtrim(cc.dlmp))) + substring(ltrim(rtrim(cc.dlap)), 3, 2)),   
 [DNI] = convert(char(8), cre.DLDNI),   
 [APELLIDOS Y NOMBRES] = convert(char(45), cc.dlne),  
 [MONTO A DESCONTAR] = convert(varchar, ltrim(rtrim(convert(int, cc.DLIC * 100)))) + REPLICATE('0',9 - LEN(ltrim(rtrim(convert(int, cc.DLIC * 100)))))               
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
   left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                        
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)      
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR                
-- AND substring(DLCR,1,2) <> 'FJ' --  MORROPÓN       
      
 DROP TABLE #TEMPO      
      
END      
      
END 


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDIRSRSLucianoCastilloText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/***********************************************************************************************
Nombre:		CronogramaFuturoDIRSRSLucianoCastilloText
Objetivo:	Generar cronograma de cobranzas para Convenio Luciano Castillo.
Modificacion: Generar el campo COD/PLANILLA acorde al mes y año de proceso.
Creador:	21/09/2016 NCA TI-EA2016-10669_Creación de nuevo formato de reporte.
***********************************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDIRSRSLucianoCastilloText]
 @Codigo_proceso as uniqueidentifier,
 @situacionTrabajador as char ( 2 )                                         
  
AS                                        
BEGIN                              
                       
DECLARE @NumeroDocumento AS nvarchar(12)                                        
--Envio de la informacion del cronograma futuro en formato CSV                                        
  
 SET NOCOUNT ON                                         
  
  SELECT @NumeroDocumento = NumeroDocumento                                         
  FROM CLIENTE C INNER JOIN PROCESO P                                         
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                        
  WHERE Codigo_proceso = @Codigo_proceso
 SET NOCOUNT OFF

 ---- nuevo ,creado para gobierno Lambayeque                                       
 declare @codigo_cliente as int, @codigo_institucion varchar(10)                                     
select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                      
                              
DECLARE @CODIGO_CLIENTE_IBS AS INT                               
DECLARE @TIPO_CUOTA AS INT                              
                              
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                              
GROUP BY DLCC                              
                              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                              

--select @codigo_institucion = codigo_institucion from cliente where codigo_IBS = @CODIGO_CLIENTE_IBS

/*Modificacion campo COD/PLANILLA*/
DECLARE @FECHAPERIODO DATE,@MESPERIODO VARCHAR(2),@ANIOPERIODO VARCHAR(4)
SELECT 
	@FECHAPERIODO =DATEFROMPARTS(P.ANIO_PERIODO,P.MES_PERIODO,1) FROM PROCESO P WHERE CODIGO_PROCESO=@Codigo_proceso

	SET @ANIOPERIODO=RIGHT(CAST(DATEPART(YEAR,DATEADD(MONTH,-1,@FECHAPERIODO)) AS VARCHAR),2) 
	SET @MESPERIODO=DATEPART(MONTH,DATEADD(MONTH,-1,@FECHAPERIODO)) 
	SET @MESPERIODO= CASE LEN(@MESPERIODO) WHEN 1 THEN '0'+@MESPERIODO ELSE @MESPERIODO END
	
SELECT @codigo_institucion = LEFT(codigo_institucion,4)+@MESPERIODO+@ANIOPERIODO FROM cliente WHERE codigo_IBS = @CODIGO_CLIENTE_IBS
/*Modificacion campo COD/PLANILLA*/

IF @TIPO_CUOTA = 1                                
BEGIN -- 1                        
                        
    SELECT                                        
   
   @codigo_institucion AS "COD/PLANILLA",
   cre.dldni AS LIBELE,
   cast ( REPLACE ([DLNE], ',', '') as varchar(75)) AS "APELLIDOS Y NOMBRES",
   DLIC AS BANBIF
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                        
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                        
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)               
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                        
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                         
 WHERE [Codigo_proceso] = @Codigo_proceso                                      
 --AND DLST ='A'                                      
    AND DLIC >= 0                     
 ORDER BY DLMO, [DLNE]
             
END  --- FIN 1                        
                        
ELSE IF  @TIPO_CUOTA = 2                            
BEGIN                                      
                      
    SELECT                                        
	@codigo_institucion AS "COD/PLANILLA", 
    CAST(cre.dldni AS VARCHAR) AS LIBELE,
    cast ( REPLACE ([DLNE], ',', '') as varchar(75)) AS "APELLIDOS Y NOMBRES",
	CAST(CR.DLIMC AS VARCHAR) AS BANBIF
FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                         
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                        
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                        
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                        
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                  
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                              
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                        
  WHERE CC.[Codigo_proceso] = @Codigo_proceso
  --AND  DLST ='A'                
  AND DLIC >= 0                                        
  ORDER BY DLMO, [DLNE]                                        
                          
  
                           
                        
END                        
                        
ELSE IF  @TIPO_CUOTA = 3                            
BEGIN                          
                           
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                        
    INTO #TEMPO                        
 FROM ClienteCuota CC                        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                        
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                         
       AND CC.Codigo_proceso = CR.Codigo_proceso                
       AND CC.DLNP = CR.DLACC                        
       AND(CONVERT(INT,                        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                         
        <                         
        CONVERT(INT,                        
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                        
        )                        
        OR                        
                                
        CONVERT(INT,                        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                        
        )                        
        =                        
        CONVERT(INT,                        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                         
        )                        
      )                    
 )                        
    WHERE DLIC >= 0                        
 GROUP BY CR.DLACC                        
                        
                        
   
  BEGIN   -- 1                               
                                
  SELECT   
                     
                                    
   
   @codigo_institucion AS "COD/PLANILLA",                                   
   cre.dldni AS LIBELE,
   cast ( REPLACE ([DLNE], ',', '') as varchar(75)) AS "APELLIDOS Y NOMBRES",                                        
   T.CUOTA AS BANBIF  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                         
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                        
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                        
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                        
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                        
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                              
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                        
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                        
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                      
  --AND DLST ='A'                                      
  AND DLIC >= 0                                       
  ORDER BY DLMO, [DLNE]                                        
                
   
 END -- FIN 2                             
                        
                        
 DROP TABLE #TEMPO                        
                        
END                        
                        
END  
  
-- [dbo].[CronogramaFuturoDIRSRSLucianoCastilloText] -- FIN








GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoDOMINIONPERUText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoDOMINIONPERUText]                                

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
                      
    SELECT                                      
 
   PAGARE= cast([DLNP] as varchar(12)),                                      
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
         
                     case   WHEN DLMP=1 THEN 'DICIEMBRE'
                      WHEN DLMP=2 THEN 'ENERO'
                     WHEN DLMP=3 THEN 'FEBRERO'
                     WHEN DLMP=4 THEN 'MARZO'
                     WHEN DLMP=5 THEN 'ABRIL'
                     WHEN DLMP=6 THEN 'MAYO'
                     WHEN DLMP=7 THEN 'JUNIO'
                     WHEN DLMP=8 THEN 'JULIO'
                     WHEN DLMP=9 THEN 'AGOSTO'
                      WHEN DLMP=10 THEN 'SETIEMBRE'
                     WHEN DLMP=11 THEN 'OCTUBRE'
                     WHEN DLMP=12 THEN 'NOVIEMBRE'
           
            END 
            AS MES_DESCUENTO
                           
                                   
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
 WHERE [Codigo_proceso] = @Codigo_proceso                                    
 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
    ELSE @situacionTrabajador END                                      
    AND DLIC >= 0                   
 ORDER BY DLMO, [DLNE]                       
           
END  --- FIN 1                      
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN                         
                       
                        
                    
    SELECT                                      
 
   PAGARE= cast([DLNP] as varchar(12)),                                      
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
         
                     case   WHEN DLMP=1 THEN 'DICIEMBRE'
                      WHEN DLMP=2 THEN 'ENERO'
                     WHEN DLMP=3 THEN 'FEBRERO'
                     WHEN DLMP=4 THEN 'MARZO'
                     WHEN DLMP=5 THEN 'ABRIL'
                     WHEN DLMP=6 THEN 'MAYO'
                     WHEN DLMP=7 THEN 'JUNIO'
                     WHEN DLMP=8 THEN 'JULIO'
                     WHEN DLMP=9 THEN 'AGOSTO'
                      WHEN DLMP=10 THEN 'SETIEMBRE'
                     WHEN DLMP=11 THEN 'OCTUBRE'
                     WHEN DLMP=12 THEN 'NOVIEMBRE'
           
            END 
            AS MES_DESCUENTO
                           
                                  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0                                      
  ORDER BY DLMO, [DLNE]                                      
                        

                         
                      
END                      
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      
 
  BEGIN   -- 1                             
                              
  SELECT 
                   
                                  
 
   PAGARE= cast([DLNP] as varchar(12)),                                      
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
         
                     case   WHEN DLMP=1 THEN 'DICIEMBRE'
                      WHEN DLMP=2 THEN 'ENERO'
                     WHEN DLMP=3 THEN 'FEBRERO'
                     WHEN DLMP=4 THEN 'MARZO'
                     WHEN DLMP=5 THEN 'ABRIL'
                     WHEN DLMP=6 THEN 'MAYO'
                     WHEN DLMP=7 THEN 'JUNIO'
                     WHEN DLMP=8 THEN 'JULIO'
                     WHEN DLMP=9 THEN 'AGOSTO'
                      WHEN DLMP=10 THEN 'SETIEMBRE'
                     WHEN DLMP=11 THEN 'OCTUBRE'
                     WHEN DLMP=12 THEN 'NOVIEMBRE'
           
            END 
            AS MES_DESCUENTO
                           
                                    
                                    
  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0                                     
  ORDER BY DLMO, [DLNE]                                      
              
 
 END -- FIN 2                           
                      
                      
 DROP TABLE #TEMPO                      
                      
END                      
                      
END



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoESSALUD]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
    
 CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoESSALUD]      
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )       
AS      
BEGIN      
/*      
 * Generacion del formato de Envio para ESSALUD      
 */      
/*      
 * 1/1  'M'      
 * 1/9  CODIGO PLANILLA      
 * 16/18 CODIGO DESCUENTO : 175 (BIF)      
 * 37/49 CUOTA A DESCONTAR      
 */      
    
    
        
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
         
  
   
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          


IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT DLEFLG  ='M',      
  DLECDG  = CAST ( cast(RTRIM(LTRIM(CAST ( (CASE WHEN RTRIM(LTRIM([DLCM])) = '' THEN 0 ELSE [DLCM] END) AS Numeric ))) as Varchar(7)) AS Char(7)),      
  DLECDD  = '175',      
  DLEIMP  = DLIC      
 FROM [ClienteCuota]      
 WHERE [Codigo_Proceso] = @Codigo_proceso      
 And DLST = Case When RTrim( @situacionTrabajador ) = '-' Then DLST      
 Else @SituacionTrabajador END      
 AND DLIC >= 0   

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	 SELECT DLEFLG  ='M',      
	DLECDG  = CAST ( cast(RTRIM(LTRIM(CAST ( (CASE WHEN RTRIM(LTRIM([DLCM])) = '' THEN 0 ELSE [DLCM] END) AS Numeric ))) as Varchar(7)) AS Char(7)),      
	DLECDD  = '175',      
	DLEIMP  = CR.DLIMC    
	FROM [ClienteCuota]  CC    
	INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
	WHERE CC.[Codigo_Proceso] = @Codigo_proceso      
	And DLST = Case When RTrim( @situacionTrabajador ) = '-' Then DLST      
    Else @SituacionTrabajador END      
	AND DLIC >= 0   
    
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0   
	GROUP BY CR.DLACC

	 SELECT DLEFLG  ='M',      
	DLECDG  = CAST ( cast(RTRIM(LTRIM(CAST ( (CASE WHEN RTRIM(LTRIM([DLCM])) = '' THEN 0 ELSE [DLCM] END) AS Numeric ))) as Varchar(7)) AS Char(7)),      
	DLECDD  = '175',      
	DLEIMP  = T.CUOTA    
	FROM [ClienteCuota]  CC    
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE CC.[Codigo_Proceso] = @Codigo_proceso      
	And DLST = Case When RTrim( @situacionTrabajador ) = '-' Then DLST      
    Else @SituacionTrabajador END  
	AND DLIC >= 0   

	DROP TABLE #TEMPO

END

END
   
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoESSALUDACTIVOSText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoESSALUDACTIVOSText]            
@Codigo_proceso as uniqueidentifier,            
@situacionTrabajador as char ( 1 )             
AS            
BEGIN            
/*            
1/1  'M'            
1/9  CODIGO PLANILLA            
16/18 CODIGO DESCUENTO : 175 (BIF)            
37/49 CUOTA A DESCONTAR            
*/            
             
                
DECLARE @CODIGO_CLIENTE_IBS AS INT                 
DECLARE @TIPO_CUOTA AS INT                
                
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                
GROUP BY DLCC                
                
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                
                
        
        
IF @TIPO_CUOTA = 1                
BEGIN         
        
 SELECT DLTEXT = 'M'  +       
  CASE WHEN ([DLCM] IS NULL) OR ([DLCM] = '') THEN '' ELSE ' ' + CAST ( cast(RTRIM(LTRIM(CAST ( [DLCM] AS NUMERIC ))) as varchar(7)) AS CHAR(7))  END          
  + SPACE ( 6 )             
  + '175' + SPACE(18) +             
  SUBSTRING(  '000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC , 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )             
  --CAST ( replace ( cast ( DLIC as varchar(9)), '.', '') AS CHAR(9))            
 FROM [ClienteCuota]            
 WHERE [Codigo_proceso] = @Codigo_proceso            
 and DLST ='A'      
 AND DLIC >= 0        
        
END        
ELSE IF  @TIPO_CUOTA = 2            
BEGIN           
 SELECT 'M' AS Letra,      
 SPACE(1) As Espacio1,      
 RIGHT(CC.DLCM,7) As Codigo_Trabajador,      
 SPACE(6) As Espacio2,      
 LTRIM(RTRIM(CLI.Codigo_Institucion)) As Codigo_Institucion,      
 SPACE(18) As Espacio3,      
 --RIGHT(REPLICATE('0',9)+CAST(REPLACE(CC.DLIC,'.','') AS VARCHAR),9) AS Cuota,      
 RIGHT(REPLICATE('0',9)+CAST(REPLACE(CR.DLIMC,'.','') AS VARCHAR),9) AS Cuota,      
 SPACE(14) As Espacio4,      
 CASE WHEN LEN(CAST(ND.CDGNSOL AS VARCHAR))>1 THEN LEFT( STUFF(CAST(ND.CDGNSOL AS VARCHAR),3,0,'-')+SPACE(8),8)       
 ELSE LEFT(CAST(ND.CDGNSOL AS VARCHAR)+SPACE(8),8) END AS NumeroSolicitud,       
 SPACE(2) As Espacio5,      
       
    CASE WHEN LEN(CAST(CC.CuotaPagadas AS INT)+CAST(CC.NUMCUOTAS AS INT))=1      
       THEN '0'+CAST(CAST(CC.CuotaPagadas AS INT)+CAST(CC.NUMCUOTAS AS INT) AS VARCHAR)      
    ELSE CAST((CAST(CC.CuotaPagadas as INT)+CAST(CC.NUMCUOTAS AS INT)) AS VARCHAR) END AS NumeroCuota,      
          
 SPACE(2) As Espacio6,      
       
    CASE WHEN LEN(CAST(CC.CuotaPactadas-CC.CuotaPagadas AS INT))=1      
       THEN '0'+CAST(CAST(CC.CuotaPactadas-CC.CuotaPagadas AS INT) AS VARCHAR)      
    ELSE CAST((CAST(CC.CuotaPactadas-CC.CuotaPagadas as INT)) AS VARCHAR) END AS CuotasPendientes      
  
   
 FROM [ClienteCuota] CC      
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)       
 INNER JOIN CLIENTE CLI ON CLI.CODIGO_IBS=CC.DLCC  
 --INNER JOIN DLCRE RE ON RE.DLACC=CC.DLNP      25022021  
 --INNER JOIN DLCND ND ON ND.DEAACC=RE.DLACC    25022021  
 INNER JOIN DLCND ND ON ND.DEAACC=CC.DLNP       --25022021   
 WHERE  CC.[Codigo_proceso] =@Codigo_proceso      
 AND CC.DLST='A'      
 AND CLI.CODIGO_INSTITUCION IS NOT NULL AND LEN (CLI.CODIGO_INSTITUCION)>0       
    AND ISNULL(LEN(ND.CDGNSOL),0)>0  --LEN(ISNULL(ND.CDGNSOL,''))>0      
 AND nd.AÑCONV= cc.DLAN and nd.AGCONV=cc.DLAG and nd.COCONV=cc.DLCO  --Se añade para obtener solo de Essalud 23-02-2021  
END        
        
ELSE IF  @TIPO_CUOTA = 3            
BEGIN          
           
        
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
    INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)        
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso         
       AND CC.DLNP = CR.DLACC        
       AND(CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +         
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )         
        <         
        CONVERT(INT,        
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +         
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +         
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END        
        )        
        OR        
                
        CONVERT(INT,        
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +         
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END        
        )        
        =        
        CONVERT(INT,        
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +         
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END         
        )        
      )        
 )        
    WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
        
  SELECT DLTEXT = 'M'  + --' ' + CAST ( cast(RTRIM(LTRIM(CAST ( [DLCM] AS NUMERIC ))) as varchar(7)) AS CHAR(7))            
 CASE WHEN ([DLCM] IS NULL) OR ([DLCM] = '') THEN '' ELSE ' ' + CAST ( cast(RTRIM(LTRIM(CAST ( [DLCM] AS NUMERIC ))) as varchar(7)) AS CHAR(7))  END          
 + SPACE ( 6 )             
 + '175' + SPACE(18) +             
 SUBSTRING(  '000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA , 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 )             
 --CAST ( replace ( cast ( DLIC as varchar(9)), '.', '') AS CHAR(9))            
 FROM [ClienteCuota]  CC          
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                          
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.[Codigo_proceso] = @Codigo_proceso            
 and DLST ='A'      
 AND DLIC >= 0        
        
 DROP TABLE #TEMPO        
        
END        
        
END       
      
-- [dbo].[CronogramaFuturoESSALUDACTIVOSText] -- FIN   

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoESSALUDCESANTESText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoESSALUDCESANTESText]          
@Codigo_proceso as uniqueidentifier,          
@situacionTrabajador as char ( 1 )           
AS          
BEGIN          
/*          
1/1  'M'          
1/9  CODIGO PLANILLA          
16/18 CODIGO DESCUENTO : 175 (BIF)          
37/49 CUOTA A DESCONTAR          
*/          
           
              
DECLARE @CODIGO_CLIENTE_IBS AS INT               
DECLARE @TIPO_CUOTA AS INT              
              
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso              
GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS              
              
      
      
IF @TIPO_CUOTA = 1              
BEGIN       
      
 SELECT DLTEXT = 'M'  +     
  CASE WHEN ([DLCM] IS NULL) OR ([DLCM] = '') THEN '' ELSE ' ' + CAST ( cast(RTRIM(LTRIM(CAST ( [DLCM] AS NUMERIC ))) as varchar(7)) AS CHAR(7))  END        
  + SPACE ( 6 )           
  + '175' + SPACE(18) +           
  SUBSTRING(  '000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC , 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )           
  --CAST ( replace ( cast ( DLIC as varchar(9)), '.', '') AS CHAR(9))          
 FROM [ClienteCuota]          
 WHERE [Codigo_proceso] = @Codigo_proceso          
 and DLST ='C'    
 AND DLIC >= 0      
      
END      
ELSE IF  @TIPO_CUOTA = 2   --Para ESSALUD POR EL MOMENTO EL TIPO DE CUOTA ES 2       
BEGIN         
      
 SELECT 'M' AS Letra,    
 SPACE(1) As Espacio1,    
 RIGHT(CC.DLCM,7) As Codigo_Trabajador,    
 SPACE(6) As Espacio2,    
 LTRIM(RTRIM(CLI.Codigo_Institucion)) As Codigo_Institucion,    
 SPACE(18) As Espacio3,    
 --RIGHT(REPLICATE('0',9)+CAST(REPLACE(CC.DLIC,'.','') AS VARCHAR),9) AS Cuota,    
 RIGHT(REPLICATE('0',9)+CAST(REPLACE(CR.DLIMC,'.','') AS VARCHAR),9) AS Cuota,    
 SPACE(14) As Espacio4,    
 CASE WHEN LEN(CAST(ND.CDGNSOL AS VARCHAR))>1 THEN LEFT( STUFF(CAST(ND.CDGNSOL AS VARCHAR),3,0,'-')+SPACE(8),8)     
 ELSE LEFT(CAST(ND.CDGNSOL AS VARCHAR)+SPACE(8),8) END AS NumeroSolicitud,     
 SPACE(2) As Espacio5,    
     
    CASE WHEN LEN(CAST(CC.CuotaPagadas AS INT)+CAST(CC.NUMCUOTAS AS INT))=1    
      THEN '0'+CAST(CAST(CC.CuotaPagadas AS INT)+CAST(CC.NUMCUOTAS AS INT) AS VARCHAR)    
    ELSE CAST((CAST(CC.CuotaPagadas as INT)+CAST(CC.NUMCUOTAS AS INT)) AS VARCHAR) END AS NumeroCuota,    
     
 SPACE(2) As Espacio6,    
    
    CASE WHEN LEN(CAST(CC.CuotaPactadas-CC.CuotaPagadas AS INT))=1    
      THEN '0'+CAST(CAST(CC.CuotaPactadas-CC.CuotaPagadas AS INT) AS VARCHAR)    
    ELSE CAST((CAST(CC.CuotaPactadas-CC.CuotaPagadas as INT)) AS VARCHAR) END AS CuotasPendientes    
     
 FROM [ClienteCuota] CC    
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)     
 INNER JOIN CLIENTE CLI ON CLI.CODIGO_IBS=CC.DLCC    
 -- INNER JOIN DLCRE RE ON RE.DLACC=CC.DLNP      25022021  
 -- INNER JOIN DLCND ND ON ND.DEAACC=RE.DLACC     25022021  
 INNER JOIN DLCND ND ON ND.DEAACC=CC.DLNP       --25022021     
 WHERE  CC.[Codigo_proceso] =@Codigo_proceso    
 AND CC.DLST='C'    
 AND CLI.CODIGO_INSTITUCION IS NOT NULL AND LEN (CLI.CODIGO_INSTITUCION)>0     
 AND ISNULL(LEN(ND.CDGNSOL),0)>0 --LEN(ISNULL(ND.CDGNSOL,''))>0    
 AND CC.dlan = ND.añconv and CC.dlag = ND.agconv and CC.dlco = ND.coconv --25022021
END      
      
ELSE IF  @TIPO_CUOTA = 3          
BEGIN        
         
      
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'      
    INTO #TEMPO      
 FROM ClienteCuota CC      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)      
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso       
       AND CC.DLNP = CR.DLACC      
       AND(CONVERT(INT,      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )       
        <       
        CONVERT(INT,      
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END      
        )      
        OR      
              
        CONVERT(INT,      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END      
        )      
        =      
        CONVERT(INT,      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END       
        )      
      )      
 )      
    WHERE DLIC >= 0      
 GROUP BY CR.DLACC      
      
  SELECT DLTEXT = 'M'  + --' ' + CAST ( cast(RTRIM(LTRIM(CAST ( [DLCM] AS NUMERIC ))) as varchar(7)) AS CHAR(7))          
 CASE WHEN ([DLCM] IS NULL) OR ([DLCM] = '') THEN '' ELSE ' ' + CAST ( cast(RTRIM(LTRIM(CAST ( [DLCM] AS NUMERIC ))) as varchar(7)) AS CHAR(7))  END        
 + SPACE ( 6 )           
 + '175' + SPACE(18) +           
 SUBSTRING(  '000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA , 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 )           
 --CAST ( replace ( cast ( DLIC as varchar(9)), '.', '') AS CHAR(9))          
 FROM [ClienteCuota]  CC        
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                        
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)      
 WHERE CC.[Codigo_proceso] = @Codigo_proceso          
 and DLST ='C'    
 AND DLIC >= 0      
      
 DROP TABLE #TEMPO      
      
END      
      
END     
    
    
-- [dbo].[CronogramaFuturoESSALUDCESANTESText] -- FIN    

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoESSALUDDESEMBOLSOSText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoESSALUDDESEMBOLSOSText]  
@Codigo_proceso   AS Uniqueidentifier,  
@SituacionTrabajador AS char (1)  
AS  
BEGIN  
 DECLARE @FECHAPERIODO DATE,@MESPERIODO VARCHAR(2),@ANIOPERIODO VARCHAR(4),@CLIENTE VARCHAR(20)  
  
 SELECT @FECHAPERIODO =DATEFROMPARTS(P.ANIO_PERIODO,P.MES_PERIODO,1) FROM PROCESO P WHERE CODIGO_PROCESO=@Codigo_proceso   
  
 SET @ANIOPERIODO=CAST(DATEPART(YEAR,DATEADD(MONTH,-2,@FECHAPERIODO)) AS VARCHAR)  
 SET @MESPERIODO=DATEPART(MONTH,DATEADD(MONTH,-2,@FECHAPERIODO))   
 --SET @MESPERIODO= CASE LEN(@MESPERIODO) WHEN 1 THEN '0'+@MESPERIODO ELSE @MESPERIODO END  
  
 SELECT @CLIENTE=Codigo_Cliente FROM PROCESO WHERE CODIGO_PROCESO=@Codigo_proceso  
  
 SELECT  distinct --26022021 
 RIGHT(SPACE(7)+CC.DLCM,7) As Codigo_Planilla,  
   
 --CASE WHEN CHARINDEX(' ',CC.DLPA)>0 THEN LEFT(SUBSTRING(CC.DLPA,0,CHARINDEX(' ',CC.DLPA))+SPACE(20),20)  
 --ELSE LEFT(CC.DLPA +SPACE(20),20) END As ApellidoPaterno,  
 LEFT(CC.DLPA+SPACE(20),20) AS ApellidoPaterno,  
  
 --CASE WHEN CHARINDEX(' ',CC.DLMA)>0 THEN LEFT(SUBSTRING(CC.DLMA,0,CHARINDEX(' ',CC.DLMA))+SPACE(20),20)  
 --ELSE LEFT(CC.DLMA +SPACE(20),20) END As ApellidoMaterno,  
 LEFT(CC.DLMA+SPACE(20),20) AS ApellidoMaterno,  
  
 CASE WHEN CHARINDEX(' ',CC.DLMN)>0 THEN LEFT(SUBSTRING(CC.DLMN,0,CHARINDEX(' ',CC.DLMN))+SPACE(20),20)  
 ELSE LEFT(CC.DLMN +SPACE(20),20) END As Nombre,  
  
 --RIGHT(SPACE(10)+CAST(CC.MontoOriginal AS VARCHAR),10) As MontoDesembolso,  26022021
 RIGHT(SPACE(10)+CAST(PL.MontoDesembolso AS VARCHAR),10) As MontoDesembolso,  
  
 RIGHT(SPACE(2)+CC.CuotaPactadas,2) As Plazo,  
 --RIGHT(SPACE(8)+CAST(CC.DLIC As VARCHAR),8) As ValorCuota,  
 --RIGHT(SPACE(8)+CAST(CR.DLIMC As VARCHAR),8) As ValorCuota,  26022021
 RIGHT(SPACE(8)+CAST(ND.CDGVCUO As VARCHAR),8) As ValorCuota,
  
 CASE LEFT(CAST(ND.CDGTSOL AS VARCHAR),1) WHEN 'N' THEN '0' WHEN 'C' THEN '1' WHEN 'A' THEN '2' ELSE ' ' END  AS TipoSolicitud,  
   
 CASE WHEN LEN(CAST(ND.CDGNSOL AS VARCHAR))>1 THEN LEFT( STUFF(CAST(ND.CDGNSOL AS VARCHAR),3,0,'-')+SPACE(8),8)   
 ELSE LEFT(CAST(ND.CDGNSOL AS VARCHAR)+SPACE(8),8) END AS NumeroSolicitud,   
  
 CONVERT(VARCHAR,FechaDesembolso,103) As FechaDesembolso  
  
 FROM [ClienteCuota] CC  
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)   
 INNER JOIN CLIENTE CLI ON CLI.CODIGO_IBS=CC.DLCC  
 --INNER JOIN DLCRE RE ON RE.DLACC=CC.DLNP  25022021  
 INNER JOIN PLPDWH PL ON  CC.DLNP= PL.PDWPACC -- 25022021  
 --INNER JOIN DLCND ND ON CAST(ND.DEAACC AS VARCHAR)=CAST(RE.DLACC AS VARCHAR) 25022021  
 INNER JOIN DLCND ND ON CAST(ND.DEAACC AS VARCHAR)=CAST(CC.DLNP AS VARCHAR)  	  
 WHERE  CC.[Codigo_proceso] =@Codigo_proceso  
 AND CLI.CODIGO_INSTITUCION IS NOT NULL AND LEN (CLI.CODIGO_INSTITUCION)>0  
 AND DATEPART(MONTH,FechaDesembolso)=CAST(@MESPERIODO AS VARCHAR)  
 AND DATEPART(YEAR,FechaDesembolso)=CAST(@ANIOPERIODO AS VARCHAR)  
 AND CC.dlan = ND.añconv and CC.dlag = ND.agconv and CC.dlco = ND.coconv --25022021
 --AND CAST(CC.DLMP AS INT)= CAST(@MESPERIODO AS INT)  
 --AND CAST(CC.DLAP AS INT)= CAST(@ANIOPERIODO AS INT)  
END  
  
-- [dbo].[CronogramaFuturoESSALUDDESEMBOLSOSText] --FIN  

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoESSALUDText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- [dbo].[CronogramaFuturoESSALUDText] -- INICIO

 CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoESSALUDText]      
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )       
AS      
BEGIN      
/*      
1/1  'M'      
1/9  CODIGO PLANILLA      
16/18 CODIGO DESCUENTO : 175 (BIF)      
37/49 CUOTA A DESCONTAR      
*/      
       
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
  
 SELECT DLTEXT = 'M'  + 
  CASE WHEN ([DLCM] IS NULL) OR ([DLCM] = '') THEN '' ELSE ' ' + CAST ( cast(RTRIM(LTRIM(CAST ( [DLCM] AS NUMERIC ))) as varchar(7)) AS CHAR(7))  END    
  + SPACE ( 6 )       
  + '175' + SPACE(18) +       
  SUBSTRING(  '000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC , 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )       
  --CAST ( replace ( cast ( DLIC as varchar(9)), '.', '') AS CHAR(9))      
 FROM [ClienteCuota]      
 WHERE [Codigo_proceso] = @Codigo_proceso      
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END  
 AND DLIC >= 0  
  
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
  SELECT DLTEXT = 'M'  + --' ' + CAST ( cast(RTRIM(LTRIM(CAST ( [DLCM] AS NUMERIC ))) as varchar(7)) AS CHAR(7))      
  CASE WHEN ([DLCM] IS NULL) OR ([DLCM] = '') THEN '' ELSE ' ' + CAST ( cast(RTRIM(LTRIM(CAST ( [DLCM] AS NUMERIC ))) as varchar(7)) AS CHAR(7))  END    
  + SPACE ( 6 )       
  + '175' + SPACE(18) +       
  SUBSTRING(  '000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC , 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 )       
  --CAST ( replace ( cast ( DLIC as varchar(9)), '.', '') AS CHAR(9))      
 FROM [ClienteCuota]  CC    
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP ) 
 WHERE CC.[Codigo_proceso] = @Codigo_proceso      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST   
  ELSE @situacionTrabajador END    
 AND DLIC >= 0     
  
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
    WHERE DLIC >= 0  
 GROUP BY CR.DLACC  
  
  SELECT DLTEXT = 'M'  + --' ' + CAST ( cast(RTRIM(LTRIM(CAST ( [DLCM] AS NUMERIC ))) as varchar(7)) AS CHAR(7))      
 CASE WHEN ([DLCM] IS NULL) OR ([DLCM] = '') THEN '' ELSE ' ' + CAST ( cast(RTRIM(LTRIM(CAST ( [DLCM] AS NUMERIC ))) as varchar(7)) AS CHAR(7))  END    
 + SPACE ( 6 )       
 + '175' + SPACE(18) +       
 SUBSTRING(  '000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA , 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 )       
 --CAST ( replace ( cast ( DLIC as varchar(9)), '.', '') AS CHAR(9))      
 FROM [ClienteCuota]  CC    
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso      
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END    
 AND DLIC >= 0  
  
 DROP TABLE #TEMPO  
  
END  
  
END  

-- [dbo].[CronogramaFuturoESSALUDText] -- FIN


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoExecutor]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoExecutor]                
@Codigo_proceso  as uniqueidentifier,                
@situacionTrabajador  as char ( 1 ),                
@formato  as varchar(50)                 
AS                
BEGIN  
 declare @stm as varchar ( 500 )                 
 set @stm = 'EXECUTE  CronogramaFuturo' +  @formato + 'Text ''' +  cast(@Codigo_proceso as varchar(36)) + ''',''' + @situacionTrabajador + ''''                
   --select @stm     
 --EXECUTE AddLogInfo '', @Codigo_proceso, '', '', @stm, 'Server'               
 EXEC ( @stm )                
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoExelAdicional1TEXT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
                      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoExelAdicional1TEXT]                                
@Codigo_proceso as uniqueidentifier,                                      
@situacionTrabajador as char ( 2 )                                       
AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      
 SET NOCOUNT ON                                       
  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
    ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                           
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                    
                      
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
 	IF(@codigo_cliente = 190828995)
		BEGIN
		
		SELECT 
		NumeroPagare = ''''+cast([DLNP] as varchar(12)),   
		CRE.DLDNI AS 'DNI',                                                                    
	-- CodigoModular =  SUBSTRING(''''+cast([DLCM] as varchar(20)),8,4), --''''+cast([DLCM] as varchar(20)),                                     
	 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
	 Cuota = DLIC -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
	 --SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
			 AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
			 --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
			 AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
			 AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
	 WHERE [Codigo_proceso] = @Codigo_proceso                                    
	 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
		ELSE @situacionTrabajador END                                      
		AND DLIC >= 0                   
	 ORDER BY  NombreTrabajador ASC                     
		END
                        
END  --- FIN 1  
                        
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN         
----PRUEBAAAAA cuota 2 ---ESTEFANI FLORES COD=190828945 NUEVO FORMATO 
                
        IF(@codigo_cliente = 190828995)
		BEGIN
		
		SELECT  
		NumeroPagare = ''''+cast([DLNP] as varchar(12)),   
		CRE.DLDNI AS 'DNI',                                                                          
	-- CodigoModular = SUBSTRING(''''+cast([DLCM] as varchar(20)),8,4),  -- ''''+cast([DLCM] as varchar(20)),   --                                    
	 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
	 Cuota = CR.DLIMC-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                        
	 --SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
    -----                                 
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0  
                              
                 
	 ORDER BY  NombreTrabajador ASC                     
	 
		END
   
END  --2                    
               
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                            
        IF(@codigo_cliente = 190828995)
		BEGIN		
		SELECT   
		NumeroPagare = ''''+cast([DLNP] as varchar(12)),  
		CRE.DLDNI AS 'DNI',                                                                          
	 --CodigoModular = SUBSTRING(''''+cast([DLCM] as varchar(20)),8,4), --''''+cast([DLCM] as varchar(20)),   --                                      
	 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
	 Cuota = T.CUOTA --- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                        
	 --SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
	------- 
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0 
	 ORDER BY  NombreTrabajador ASC                     
		END  
		--DROP TABLE #TEMPO                              
 END -- FIN 2                                          
                 
END                      
    
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoExelAdicionalTEXT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
                      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoExelAdicionalTEXT]                                
@Codigo_proceso as uniqueidentifier,                                      
@situacionTrabajador as char ( 2 )                                       
AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      
 SET NOCOUNT ON                                       
  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
    ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                           
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                    
                      
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
 	IF(@codigo_cliente = 190827938)
		BEGIN
		
		SELECT  
		NumeroPagare = ''''+cast([DLNP] as varchar(12)),   
		CRE.DLDNI AS 'DNI',                                                                    
	-- CodigoModular =  SUBSTRING(''''+cast([DLCM] as varchar(20)),8,4), --''''+cast([DLCM] as varchar(20)),                                     
	 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
	 Cuota = DLIC -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
	 --SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
			 AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
			 --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
			 AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
			 AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
	 WHERE [Codigo_proceso] = @Codigo_proceso                                    
	 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
		ELSE @situacionTrabajador END                                      
		AND DLIC >= 0                   
	 ORDER BY  NombreTrabajador ASC                     
		END
                        
END  --- FIN 1                             
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN         
----PRUEBAAAAA cuota 2 ---ESTEFANI FLORES COD=190828945 NUEVO FORMATO 
                
        IF(@codigo_cliente = 190827938)
		BEGIN
		
		SELECT   
		NumeroPagare = ''''+cast([DLNP] as varchar(12)),   
		CRE.DLDNI AS 'DNI',                                                                          
	-- CodigoModular = SUBSTRING(''''+cast([DLCM] as varchar(20)),8,4),  -- ''''+cast([DLCM] as varchar(20)),   --                                    
	 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
	 Cuota = CR.DLIMC-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                        
	 --SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
    -----                                 
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0  
                              
                 
	 ORDER BY  NombreTrabajador ASC                     
	 
		END
   
END  --2                    
               
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                            
        IF(@codigo_cliente = 190827938)
		BEGIN		
		SELECT  
		NumeroPagare = ''''+cast([DLNP] as varchar(12)),    
		CRE.DLDNI AS 'DNI',                                                                          
	 --CodigoModular = SUBSTRING(''''+cast([DLCM] as varchar(20)),8,4), --''''+cast([DLCM] as varchar(20)),   --                                      
	 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
	 Cuota = T.CUOTA --- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                        
	 --SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
	------- 
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0 
	 ORDER BY  NombreTrabajador ASC                     
		END  
		DROP TABLE #TEMPO                              
 END -- FIN 2                                          
                 
END                      
    
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoExelBcrTEXT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
                      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoExelBcrTEXT]                                
@Codigo_proceso as uniqueidentifier,                                      
@situacionTrabajador as char ( 2 )                                       
AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      
 SET NOCOUNT ON                                       
  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
    ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                           
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                    
                      
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
 	IF(@codigo_cliente = 190828945)
		BEGIN
		
		SELECT                                                                             
	 CodigoModular =  SUBSTRING(''''+cast([DLCM] as varchar(20)),8,4), --''''+cast([DLCM] as varchar(20)),                                     
	 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
	 Cuota = DLIC -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
	 --SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
			 AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
			 --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
			 AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
			 AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
	 WHERE [Codigo_proceso] = @Codigo_proceso                                    
	 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
		ELSE @situacionTrabajador END                                      
		AND DLIC >= 0                   
	 ORDER BY CodigoModular ASC                     
		END
                        
END  --- FIN 1                             
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN         
----PRUEBAAAAA cuota 2 ---ESTEFANI FLORES COD=190828945 NUEVO FORMATO 
                
        IF(@codigo_cliente = 190828945)
		BEGIN
		
		SELECT                                                                             
	 CodigoModular = SUBSTRING(''''+cast([DLCM] as varchar(20)),8,4),  -- ''''+cast([DLCM] as varchar(20)),   --                                    
	 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
	 Cuota = CR.DLIMC-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                        
	 --SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
    -----                                 
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0  
                              
                 
	 ORDER BY CodigoModular ASC                     
	 
		END
   
END  --2                    
               
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                            
        IF(@codigo_cliente = 190828945)
		BEGIN		
		SELECT                                                                             
	 CodigoModular = SUBSTRING(''''+cast([DLCM] as varchar(20)),8,4), --''''+cast([DLCM] as varchar(20)),   --                                      
	 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
	 Cuota = T.CUOTA --- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                        
	 --SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
	------- 
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0 
	 ORDER BY CodigoModular ASC                     
		END                           
 END -- FIN 2                                          
-- DROP TABLE #TEMPO                      
END                      
    
GO
/****** Object:  StoredProcedure [dbo].[cronogramafuturoFAP_NuevoFormatoText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[cronogramafuturoFAP_NuevoFormatoText]                   
(@Codigo_proceso as uniqueidentifier,          
 @situacionTrabajador as char( 1 ) )          
AS           
          
SET NOCOUNT ON                       
          
BEGIN             
        
DECLARE @CODIGO_CLIENTE_IBS AS INT             
DECLARE @TIPO_CUOTA AS INT            
            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC   FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso            
GROUP BY DLCC            
            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS            
            
    
IF @TIPO_CUOTA = 1            
BEGIN     
    
  SELECT REVERSE(SUBSTRING(REVERSE('      ' + CONVERT(VARCHAR(6),CONVERT(INT,(CASE WHEN DLCM IS NULL OR DLCM = '' THEN 0 ELSE DLCM END)))),1,6)) +   DLST +
  '3113' ,   REVERSE(SUBSTRING(REVERSE('       ' + CONVERT(VARCHAR(12),DLIC)),1,12))   , cr.finicre
  FROM ClienteCuota  left join dlcre cr on dlnp= cr.DLacc
  WHERE [Codigo_proceso] = @Codigo_proceso                      
  AND DLST =case when rtrim(@situacionTrabajador) = '-' then DLST                      
  ELSE @situacionTrabajador END           
  AND DLIC >= 0  

    
END    
ELSE IF  @TIPO_CUOTA = 2        
BEGIN       
    
--  SELECT '0047' + '1393' + '8' +           
--  SUBSTRING('0000000' + CC.DLCM ,1,10) + '01' + 'LE' +          
--  ISNULL(CRE.DLDNI,'00000000') + '  ' +          
--  CAST (CC.DLAP AS VARCHAR) +           
--  CASE WHEN LEN(CC.DLMP) = 1 THEN '0' + CAST (CC.DLMP AS VARCHAR) ELSE CAST(CC.DLMP AS VARCHAR) END +            
--  SUBSTRING('00000000'+ CAST(CR.DLIMC AS VARCHAR) ,LEN(CAST(CR.DLIMC AS VARCHAR)) -1,10)  
  SELECT REVERSE(SUBSTRING(REVERSE('      ' + CONVERT(VARCHAR(6),CONVERT(INT,(CASE WHEN DLCM IS NULL OR DLCM = '' THEN 0 ELSE DLCM END)))),1,6)) +  DLST + 
  '3113' ,REVERSE(SUBSTRING(REVERSE('       ' + CONVERT(VARCHAR(12),CR.DLIMC)),1,12)),cre.finicre  

  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))        
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                                               
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                      
  AND DLST =case when rtrim(@situacionTrabajador) = '-' then DLST                      
  ELSE @situacionTrabajador END           
  --AND DLST = 'C'     
  AND DLIC >= 0                     
    
END    
    
ELSE IF  @TIPO_CUOTA = 3        
BEGIN      
       
    
  SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'    
  INTO #TEMPO    
  FROM ClienteCuota CC    
  INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)    
  INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso     
  AND CC.DLNP = CR.DLACC    
  AND(CONVERT(INT,    
     CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +     
  CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +     
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
  <     
        CONVERT(INT,    
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +     
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +     
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END    
        )    
        OR    
            
        CONVERT(INT,    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +     
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END    
        )    
        =    
        CONVERT(INT,    
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +     
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END     
        )    
      )    
 )    
 WHERE DLIC >= 0                   
 GROUP BY CR.DLACC    
    
    
-- SELECT '0047' + '1393' + '8' +           
-- SUBSTRING('0000000' + CC.DLCM ,1,10) + '01' + 'LE' +          
-- ISNULL(CRE.DLDNI,'00000000') + '  ' +          
-- CAST (CC.DLAP AS VARCHAR) +           
-- CASE WHEN LEN(CC.DLMP) = 1 THEN '0' + CAST (CC.DLMP AS VARCHAR) ELSE CAST(CC.DLMP AS VARCHAR) END +            
--    SUBSTRING('00000000'+ CAST(T.CUOTA AS VARCHAR) ,LEN(CAST(T.CUOTA AS VARCHAR)) -1,10)          
 SELECT REVERSE(SUBSTRING(REVERSE('      ' + CONVERT(VARCHAR(6),CONVERT(INT,(CASE WHEN DLCM IS NULL OR DLCM = '' THEN 0 ELSE DLCM END)))),1,6)) + DLST + 
 '3113' ,  REVERSE(SUBSTRING(REVERSE('       ' + CONVERT(VARCHAR(12), T.CUOTA)),1,12))  , cre.finicre  
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))        
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                                               
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)    
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                      
 AND DLST =case when rtrim(@situacionTrabajador) = '-' then DLST                      
    ELSE @situacionTrabajador END           
    --AND DLST = 'C'       
 AND DLIC >= 0                   
 DROP TABLE #TEMPO    

  
END    
    
                
           
 SET NOCOUNT OFF                  
          
END   
GO
/****** Object:  StoredProcedure [dbo].[cronogramafuturoFAPText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[cronogramafuturoFAPText]                   
(@Codigo_proceso as uniqueidentifier,          
 @situacionTrabajador as char( 1 ) )          
AS           
          
SET NOCOUNT ON                       
          
BEGIN             
        
DECLARE @CODIGO_CLIENTE_IBS AS INT             
DECLARE @TIPO_CUOTA AS INT            
            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso            
GROUP BY DLCC            
            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS            
            
    
IF @TIPO_CUOTA = 1            
BEGIN     
    
  SELECT REVERSE(SUBSTRING(REVERSE('      ' + CONVERT(VARCHAR(6),CONVERT(INT,(CASE WHEN DLCM IS NULL OR DLCM = '' THEN 0 ELSE DLCM END)))),1,6)) +   
  ' 3113' +    
  REVERSE(SUBSTRING(REVERSE('0000000000000' + CONVERT(VARCHAR(12),DLIC)),1,12))  
  FROM ClienteCuota  
  WHERE [Codigo_proceso] = @Codigo_proceso                      
  AND DLST =case when rtrim(@situacionTrabajador) = '-' then DLST                      
  ELSE @situacionTrabajador END           
  AND DLIC >= 0  
  
    
          
    
END    
ELSE IF  @TIPO_CUOTA = 2        
BEGIN       
    
--  SELECT '0047' + '1393' + '8' +           
--  SUBSTRING('0000000' + CC.DLCM ,1,10) + '01' + 'LE' +          
--  ISNULL(CRE.DLDNI,'00000000') + '  ' +          
--  CAST (CC.DLAP AS VARCHAR) +           
--  CASE WHEN LEN(CC.DLMP) = 1 THEN '0' + CAST (CC.DLMP AS VARCHAR) ELSE CAST(CC.DLMP AS VARCHAR) END +            
--  SUBSTRING('00000000'+ CAST(CR.DLIMC AS VARCHAR) ,LEN(CAST(CR.DLIMC AS VARCHAR)) -1,10)  
  SELECT REVERSE(SUBSTRING(REVERSE('      ' + CONVERT(VARCHAR(6),CONVERT(INT,(CASE WHEN DLCM IS NULL OR DLCM = '' THEN 0 ELSE DLCM END)))),1,6)) +   
  ' 3113' +    
  REVERSE(SUBSTRING(REVERSE('0000000000000' + CONVERT(VARCHAR(12),CR.DLIMC)),1,12))  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
  AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
  AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
  AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))        
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                                               
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                      
  AND DLST =case when rtrim(@situacionTrabajador) = '-' then DLST                      
  ELSE @situacionTrabajador END           
  --AND DLST = 'C'     
  AND DLIC >= 0                     
    
END    
    
ELSE IF  @TIPO_CUOTA = 3        
BEGIN      
       
    
  SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'    
  INTO #TEMPO    
  FROM ClienteCuota CC    
  INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)    
  INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso     
  AND CC.DLNP = CR.DLACC    
  AND(CONVERT(INT,    
     CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +     
  CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +     
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
  <     
        CONVERT(INT,    
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +     
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +     
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END    
        )    
        OR    
            
        CONVERT(INT,    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +     
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END    
        )    
        =    
        CONVERT(INT,    
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +     
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END     
        )    
      )    
 )    
 WHERE DLIC >= 0                   
 GROUP BY CR.DLACC    
    
    
-- SELECT '0047' + '1393' + '8' +           
-- SUBSTRING('0000000' + CC.DLCM ,1,10) + '01' + 'LE' +          
-- ISNULL(CRE.DLDNI,'00000000') + '  ' +          
-- CAST (CC.DLAP AS VARCHAR) +           
-- CASE WHEN LEN(CC.DLMP) = 1 THEN '0' + CAST (CC.DLMP AS VARCHAR) ELSE CAST(CC.DLMP AS VARCHAR) END +            
--    SUBSTRING('00000000'+ CAST(T.CUOTA AS VARCHAR) ,LEN(CAST(T.CUOTA AS VARCHAR)) -1,10)          
 SELECT REVERSE(SUBSTRING(REVERSE('      ' + CONVERT(VARCHAR(6),CONVERT(INT,(CASE WHEN DLCM IS NULL OR DLCM = '' THEN 0 ELSE DLCM END)))),1,6)) +   
 ' 3113' +    
 REVERSE(SUBSTRING(REVERSE('0000000000000' + CONVERT(VARCHAR(12),T.CUOTA)),1,12))  
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))        
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                                               
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)    
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                      
 AND DLST =case when rtrim(@situacionTrabajador) = '-' then DLST                      
    ELSE @situacionTrabajador END           
    --AND DLST = 'C'       
 AND DLIC >= 0                   
 DROP TABLE #TEMPO    
    
END    
    
                
           
 SET NOCOUNT OFF                  
          
END   
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoFILTRAACTIVOSText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoFILTRAACTIVOSText]      
@Codigo_proceso as uniqueidentifier,              
@situacionTrabajador as char ( 1 )               
AS BEGIN              
/********************************************************************************/              
/* Modificado por: AHSP        */              
/* Fecha Modif  : 2008/05/05       */              
/* Detalle  : Se necesita que el Mes sea el del periodo anterior y  */              
/*     modificar para el Hosp. Belen trujillo su Codigo a 2501 */              
/********************************************************************************/              
DECLARE @NumeroDocumento AS nvarchar(12)              
--Envio de la informacion del cronograma futuro en formato CSV              
 SET NOCOUNT ON               
  SELECT  @NumeroDocumento = NumeroDocumento               
  FROM CLIENTE C INNER JOIN PROCESO P               
    ON (C.Codigo_Cliente = P.Codigo_Cliente)              
  WHERE Codigo_proceso = @Codigo_proceso              
               
 --CREATE TABLE #TMP ( IDE AS INT IDENTITY (1, 1 ) , DATA AS CHAR(108)               
            
       
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
             
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))               
 WHERE [Codigo_proceso] = @Codigo_proceso              
  and DLST ='A' 
 AND DLIC >= 0             
               
 SET IDENTITY_INSERT #TMP ON               
 INSERT INTO #TMP ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP ORDER BY ORDEN   
  
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
                 
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP2              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))    
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 WHERE cc.[Codigo_proceso] = @Codigo_proceso              
  and DLST ='A'            
 AND DLIC >= 0  
               
 SET IDENTITY_INSERT #TMP2 ON               
 INSERT INTO #TMP2 ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP2)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP2 ORDER BY ORDEN            
    
  
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE  DLIC >= 0   GROUP BY CR.DLACC  
  
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
                 
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP3              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))    
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
 WHERE cc.[Codigo_proceso] = @Codigo_proceso              
  and DLST ='A'
 AND DLIC >= 0             
               
 SET IDENTITY_INSERT #TMP3 ON               
 INSERT INTO #TMP3 ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP3)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP3 ORDER BY ORDEN            
    
  
DROP TABLE #TEMPO   
   
END  
  
end  
  

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoFILTRACESANTESText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoFILTRACESANTESText]      
@Codigo_proceso as uniqueidentifier,              
@situacionTrabajador as char ( 1 )               
AS BEGIN              
/********************************************************************************/              
/* Modificado por: AHSP        */              
/* Fecha Modif  : 2008/05/05       */              
/* Detalle  : Se necesita que el Mes sea el del periodo anterior y  */              
/*     modificar para el Hosp. Belen trujillo su Codigo a 2501 */              
/********************************************************************************/              
DECLARE @NumeroDocumento AS nvarchar(12)              
--Envio de la informacion del cronograma futuro en formato CSV              
 SET NOCOUNT ON               
  SELECT  @NumeroDocumento = NumeroDocumento               
  FROM CLIENTE C INNER JOIN PROCESO P               
    ON (C.Codigo_Cliente = P.Codigo_Cliente)              
  WHERE Codigo_proceso = @Codigo_proceso              
               
 --CREATE TABLE #TMP ( IDE AS INT IDENTITY (1, 1 ) , DATA AS CHAR(108)               
            
       
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
             
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))               
 WHERE [Codigo_proceso] = @Codigo_proceso              
  and DLST ='C' 
 AND DLIC >= 0             
               
 SET IDENTITY_INSERT #TMP ON               
 INSERT INTO #TMP ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP ORDER BY ORDEN   
  
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
                 
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP2              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))    
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 WHERE cc.[Codigo_proceso] = @Codigo_proceso              
  and DLST ='C'            
 AND DLIC >= 0  
               
 SET IDENTITY_INSERT #TMP2 ON               
 INSERT INTO #TMP2 ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP2)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP2 ORDER BY ORDEN            
    
  
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE  DLIC >= 0   GROUP BY CR.DLACC  
  
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
                 
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP3              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))    
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
 WHERE cc.[Codigo_proceso] = @Codigo_proceso              
  and DLST ='C'
 AND DLIC >= 0             
               
 SET IDENTITY_INSERT #TMP3 ON               
 INSERT INTO #TMP3 ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP3)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP3 ORDER BY ORDEN            
    
  
DROP TABLE #TEMPO   
   
END  
  
end  
  

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoFILTRASERVICIOSNOPText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoFILTRASERVICIOSNOPText]      
@Codigo_proceso as uniqueidentifier,              
@situacionTrabajador as char ( 1 )               
AS BEGIN              
/********************************************************************************/              
/* Modificado por: AHSP        */              
/* Fecha Modif  : 2008/05/05       */              
/* Detalle  : Se necesita que el Mes sea el del periodo anterior y  */              
/*     modificar para el Hosp. Belen trujillo su Codigo a 2501 */              
/********************************************************************************/              
DECLARE @NumeroDocumento AS nvarchar(12)              
--Envio de la informacion del cronograma futuro en formato CSV              
 SET NOCOUNT ON               
  SELECT  @NumeroDocumento = NumeroDocumento               
  FROM CLIENTE C INNER JOIN PROCESO P               
    ON (C.Codigo_Cliente = P.Codigo_Cliente)              
  WHERE Codigo_proceso = @Codigo_proceso              
               
 --CREATE TABLE #TMP ( IDE AS INT IDENTITY (1, 1 ) , DATA AS CHAR(108)               
            
       
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
             
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))               
 WHERE [Codigo_proceso] = @Codigo_proceso              
  and DLST ='N' 
 AND DLIC >= 0             
               
 SET IDENTITY_INSERT #TMP ON               
 INSERT INTO #TMP ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP ORDER BY ORDEN   
  
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
                 
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP2              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))    
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 WHERE cc.[Codigo_proceso] = @Codigo_proceso              
  and DLST ='N'            
 AND DLIC >= 0  
               
 SET IDENTITY_INSERT #TMP2 ON               
 INSERT INTO #TMP2 ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP2)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP2 ORDER BY ORDEN            
    
  
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE  DLIC >= 0   GROUP BY CR.DLACC  
  
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
                 
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP3              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))    
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
 WHERE cc.[Codigo_proceso] = @Codigo_proceso              
  and DLST ='N'
 AND DLIC >= 0             
               
 SET IDENTITY_INSERT #TMP3 ON               
 INSERT INTO #TMP3 ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP3)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP3 ORDER BY ORDEN            
    
  
DROP TABLE #TEMPO   
   
END  
  
end  
  

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoFormatoDBFActivosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
  
    
    
      
      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoFormatoDBFActivosText]        
@codigo_proceso as varchar(36),        
@SituacionTrabajador  as char ( 1 ) = '-'        
AS        
BEGIN        
      
       
          
            
DECLARE @CODIGO_CLIENTE_IBS AS INT             
DECLARE @TIPO_CUOTA AS INT            
            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso            
GROUP BY DLCC            
            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS            
            
    
    
IF @TIPO_CUOTA = 1            
BEGIN     
  SELECT Depe_id = CAST ( 2 AS NUMERIC ( 1 ) ),        
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,        
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,        
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),        
 SitLaboral =  CAST(1 AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),        
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),        
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),        
 Monto = cast ( DLIC as numeric ( 10, 2)),        
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,        
 Ncuota = isnull (         
   (SELECT MIN ( DLNCT )           
   FROM HistoricoDLCCR WHERE DLACC = DLNP        
   and Codigo_proceso =@codigo_proceso), 0 ),        
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END   --cast ( dlcnc1 as numeric ( 2 )) --+ 1         
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )        
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)        
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )        
 WHERE CODIGO_PROCESO = @codigo_proceso  
 AND DLIC >= 0  
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'        
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST        
    ELSE @situacionTrabajador END*/        
  --and DLST ='A'        
    
END    
ELSE IF  @TIPO_CUOTA = 2        
BEGIN       
    
 SELECT Depe_id = CAST ( 2 AS NUMERIC ( 1 ) ),        
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,        
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,        
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),        
 SitLaboral =  CAST(1 AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),        
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),        
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),        
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),        
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,        
 Ncuota = isnull (         
   (SELECT MIN ( DLNCT )           
   FROM HistoricoDLCCR WHERE DLACC = DLNP        
   and Codigo_proceso =@codigo_proceso), 0 ),        
        
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END   --cast ( dlcnc1 as numeric ( 2 )) --+ 1         
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )        
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)        
  INNER JOIN HISTORICODLCCR CR ON (CR.CODIGO_PROCESO = CC.CODIGO_PROCESO AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                      
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )        
 WHERE cc.CODIGO_PROCESO = @codigo_proceso  
 AND DLIC >= 0  
  --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'        
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST        
    ELSE @situacionTrabajador END*/        
  --and DLST ='A'        
    
END    
    
ELSE IF  @TIPO_CUOTA = 3        
BEGIN      
       
    
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'    
    INTO #TEMPO    
 FROM ClienteCuota CC    
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)    
 INNER JOIN HISTORICODLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso     
       AND CC.CODIGO_PROCESO = CR.CODIGO_PROCESO    
       AND CC.DLNP = CR.DLACC    
       AND(CONVERT(INT,    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +     
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +     
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )     
        <     
        CONVERT(INT,    
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +     
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +     
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END    
        )    
        OR    
            
        CONVERT(INT,    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +     
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END    
        )    
        =    
        CONVERT(INT,    
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +     
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END     
        )    
      )    
 )    
 WHERE DLIC >= 0  
 GROUP BY CR.DLACC    
    
    
  SELECT Depe_id = CAST ( 2 AS NUMERIC ( 1 ) ),        
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,        
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,        
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),        
 SitLaboral =  CAST(1 AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),        
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),        
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),        
 Monto = cast ( T.CUOTA as numeric ( 10, 2)),        
 -- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,        
 Ncuota = isnull (         
   (SELECT MIN ( DLNCT )           
 FROM HistoricoDLCCR WHERE DLACC = DLNP        
 and Codigo_proceso =@codigo_proceso), 0 ),        
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END   --cast ( dlcnc1 as numeric ( 2 )) --+ 1         
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )        
 inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)        
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)    
 --NNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                      
 ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )        
 WHERE cc.CODIGO_PROCESO = @codigo_proceso  
 AND DLIC >= 0   
--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'        
 /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST        
    ELSE @situacionTrabajador END*/        
 --and DLST ='A'        
    
 DROP TABLE #TEMPO    
    
END    
    
END    
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoGRArequipaSaludText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***********************************************************************************************
Nombre:		CronogramaFuturoGRArequipaSaludText
Objetivo:	Generar cronograma de cobranzas para Convenio Gob.Regional Arequipa Salud
Creador:	05/10/2016 NCA TI-EA2016-10681_Creación de nuevo formato de reporte.
***********************************************************************************************/  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoGRArequipaSaludText]    
@Codigo_proceso  as Uniqueidentifier,                      
@SituacionTrabajador  as char ( 1 )                      
AS                      
BEGIN                      
/*
	Variables                    
*/
DECLARE @CODIGO_CLIENTE_IBS AS INT                     
DECLARE @TIPO_CUOTA AS INT                    
DECLARE @CODIGO_INSTITUCION CHAR(4)
                    
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                    
GROUP BY DLCC                    
                    
--Obtener Tipo de Cuota
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                                

--Obtener codigo de institucion   "4 CARACTERES)                          
SELECT @CODIGO_INSTITUCION = RIGHT('0000'+ISNULL(CODIGO_INSTITUCION,''),4) from CLIENTE where CODIGO_IBS = @CODIGO_CLIENTE_IBS
            
IF @TIPO_CUOTA = 1                    
BEGIN             
 SELECT         
 @CODIGO_INSTITUCION + --codigo BanBif    
 REPLICATE('0',2 - LEN(ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end))))) + 
	CONVERT(VARCHAR,ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end)))) + 
	substring(ltrim(rtrim((case when cc.dlmp = 1 then (cc.dlap - 1) else cc.dlap end))), 3, 2) + --mes y año de descuento    
 convert(char(8), cre.DLDNI) + --DNI        
 convert(char(45), replace(cc.dlne, ',', '')) + --apellidos y nombres        
 REPLICATE('0',9 - LEN(ltrim(rtrim(convert(int, cc.DLIC * 100))))) + convert(varchar, ltrim(rtrim(convert(int, cc.DLIC * 100)))) --monto a descontar       
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                      
    left JOIN DLCRE CRE                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
   AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                       
 WHERE [Codigo_proceso] = @Codigo_proceso                      
   and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                      
  ELSE @situacionTrabajador END                      
  AND DLIC >= 0     
END            
ELSE IF  @TIPO_CUOTA = 2                
BEGIN               
 SELECT              
 @CODIGO_INSTITUCION + --codigo BanBif    
 REPLICATE('0',2 - LEN(ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end))))) + 
	CONVERT(VARCHAR,ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end)))) + 
	substring(ltrim(rtrim((case when cc.dlmp = 1 then (cc.dlap - 1) else cc.dlap end))), 3, 2) + --mes y año de descuento    
 convert(char(8), cre.DLDNI) + --DNI        
 convert(char(45), replace(cc.dlne, ',', '')) + --apellidos y nombres        
    REPLICATE('0',9 - LEN(ltrim(rtrim(convert(int, CR.DLIMC * 100))))) + convert(varchar, ltrim(rtrim(convert(int, CR.DLIMC * 100)))) --monto a descontar     
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                      
   left JOIN DLCRE CRE                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                              
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                      
    ELSE @situacionTrabajador END                      
 AND DLIC >= 0         
            
END            
            
ELSE IF  @TIPO_CUOTA = 3                
BEGIN                     
            
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'            
    INTO #TEMPO            
 FROM ClienteCuota CC            
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)         
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso             
       AND CC.DLNP = CR.DLACC            
       AND(CONVERT(INT,            
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +             
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +             
      CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )             
        <             
        CONVERT(INT,            
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +             
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +             
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END            
        )            
        OR            
                    
        CONVERT(INT,            
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +             
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END            
        )            
        =            
        CONVERT(INT,            
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +             
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END             
        )            
      )            
 )            
 WHERE DLIC >= 0                           
 GROUP BY CR.DLACC              
             
 SELECT         
 @CODIGO_INSTITUCION + --codigo BanBif    
 REPLICATE('0',2 - LEN(ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end))))) + 
	CONVERT(VARCHAR,ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end)))) + 
	substring(ltrim(rtrim((case when cc.dlmp = 1 then (cc.dlap - 1) else cc.dlap end))), 3, 2) + --mes y año de descuento    
 convert(char(8), cre.DLDNI) + --DNI        
 convert(char(45), replace(cc.dlne, ',', '')) + --apellidos y nombres         
    REPLICATE('0',9 - LEN(ltrim(rtrim(convert(int, T.CUOTA * 100))))) + convert(varchar, ltrim(rtrim(convert(int, T.CUOTA * 100)))) --monto a descontar       
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                      
   left JOIN DLCRE CRE                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                       
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                              
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)            
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                      
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                      
    ELSE @situacionTrabajador END                      
 AND DLIC >= 0             
     
 DROP TABLE #TEMPO            
            
END            
            
END       

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoGRASALUDText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

         
                    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoGRASALUDText]  
@Codigo_proceso  as Uniqueidentifier,                    
@SituacionTrabajador  as char ( 1 )                    
AS                    
BEGIN                    
--- INSTITUTO REGIONAL DE ENFERMEDADES NEOPLASICAS DEL SUR                
                  
DECLARE @CODIGO_CLIENTE_IBS AS INT                   
DECLARE @TIPO_CUOTA AS INT                  
                  
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                  
GROUP BY DLCC                  
                  
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                              
          
          
IF @TIPO_CUOTA = 1                  
BEGIN           
 SELECT       
 '2502' + --codigo BanBif  
 REPLICATE('0',2 - LEN(ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end))))) + CONVERT(VARCHAR,ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end)))) + substring(ltrim(rtrim((case when cc.dlmp = 1 then (cc.dlap - 1) else cc
.dlap end))), 3, 2) + --mes y año de descuento  
 convert(char(8), cre.DLDNI) + --DNI      
 convert(char(45), replace(cc.dlne, ',', '')) + --apellidos y nombres      
 REPLICATE('0',9 - LEN(ltrim(rtrim(convert(int, cc.DLIC * 100))))) + convert(varchar, ltrim(rtrim(convert(int, cc.DLIC * 100)))) --monto a descontar     
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
    left JOIN DLCRE CRE                     
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
   AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                     
 WHERE [Codigo_proceso] = @Codigo_proceso                    
   and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                    
  ELSE @situacionTrabajador END                    
  AND DLIC >= 0   
END          
ELSE IF  @TIPO_CUOTA = 2              
BEGIN             
 SELECT            
 '2502' + --codigo BanBif  
 REPLICATE('0',2 - LEN(ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end))))) + CONVERT(VARCHAR,ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end)))) + substring(ltrim(rtrim((case when cc.dlmp = 1 then (cc.dlap - 1) else cc
.dlap end))), 3, 2) + --mes y año de descuento  
 convert(char(8), cre.DLDNI) + --DNI      
 convert(char(45), replace(cc.dlne, ',', '')) + --apellidos y nombres      
    REPLICATE('0',9 - LEN(ltrim(rtrim(convert(int, CR.DLIMC * 100))))) + convert(varchar, ltrim(rtrim(convert(int, CR.DLIMC * 100)))) --monto a descontar   
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
   left JOIN DLCRE CRE                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))              
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                    
    ELSE @situacionTrabajador END                    
 AND DLIC >= 0       
          
END          
          
ELSE IF  @TIPO_CUOTA = 3              
BEGIN                   
          
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'          
    INTO #TEMPO          
 FROM ClienteCuota CC          
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)          
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso           
       AND CC.DLNP = CR.DLACC          
       AND(CONVERT(INT,          
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +           
      CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )           
        <           
        CONVERT(INT,          
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +           
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +           
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END          
        )          
        OR          
                  
        CONVERT(INT,          
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END          
        )          
        =          
        CONVERT(INT,          
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +           
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END           
        )          
      )          
 )          
 WHERE DLIC >= 0                         
 GROUP BY CR.DLACC            
           
 SELECT       
 '2502' + --codigo BanBif  
 REPLICATE('0',2 - LEN(ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end))))) + CONVERT(VARCHAR,ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end)))) + substring(ltrim(rtrim((case when cc.dlmp = 1 then (cc.dlap - 1) else cc
.dlap end))), 3, 2) + --mes y año de descuento  
 convert(char(8), cre.DLDNI) + --DNI      
 convert(char(45), replace(cc.dlne, ',', '')) + --apellidos y nombres       
    REPLICATE('0',9 - LEN(ltrim(rtrim(convert(int, T.CUOTA * 100))))) + convert(varchar, ltrim(rtrim(convert(int, T.CUOTA * 100)))) --monto a descontar     
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
   left JOIN DLCRE CRE                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                     
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                    
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                    
    ELSE @situacionTrabajador END                    
 AND DLIC >= 0           
   
 DROP TABLE #TEMPO          
          
END          
          
END     

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoGREENPERUXLS001Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--------------------------------------------------------------------------------
-- Creador		: Eduardo Chumpitaz
-- Referencia	: TI-EA2017-11133 
--				  Creación nuevo formato de reporte para aplicativo BIFCONVENIOS
-- Fecha		: 22/11/2017
--------------------------------------------------------------------------------

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoGREENPERUXLS001Text]                                      
                                   
 @codigo_proceso as uniqueidentifier, 
 @EstadoTrabajador char(2),                               
 @Documento as char(8) = '*',   --'*'                                 
 @DLNE as varchar(80) = '*', --   '*'                             
 @DLNP as decimal(12,0) = 0,     --  0                                -- '-'                           
 @ZonaUse VARCHAR(2) = 0   -- 0                             
        
AS        

BEGIN      
      
declare @estado char(2),                                            
        @CODIGO_CLIENTE_IBS as int,                                      
        @TIPO_CUOTA as int                                                                                
                                              
  select top 1 @CODIGO_CLIENTE_IBS = DLCC from CLIENTECUOTA where CODIGO_PROCESO = @Codigo_proceso                                                                      
  group by DLCC                                               
                                          
 select @estado = Estado from proceso where codigo_proceso = @codigo_proceso                                            
 SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                                           
        
                                         
 declare @codigo_cliente as int                                          
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso      
       
IF @TIPO_CUOTA = 1      
BEGIN      
      
      
        
   PRINT 'TIPO 1 - ENTR01'        
        
   SELECT DISTINCT        
     CodigoEmpresa = @codigo_cliente,                      
    Anio = [DLAP],  -- anio                          
    Mes =[DLMP],  -- mes                     
    NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare                    
    convert(char(10), FechaDesembolso, 103) as FechaDesembolso,                   
        
    TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                          
    'N'            
     ELSE               
    (SELECT CASE WHEN NroTipoCredito = 2 THEN              
    'R'              
      WHEN NroTipoCredito = 3 THEN              
    ' '              
     ELSE                  
    ' '              
    END)              
    END),                 
        
    -- DOI = '''' + cast(C.DLNP as varchar(12)),                                   
    DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),    
    SaldoCredito = cast(CRE.DLPRI as varchar (14)),     
    CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular                    
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                         
    Moneda =  cast ( DLMO as varchar(3)), -- moneda                   
    MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),                  
    NroCuotasPactadas =   ISNULL(CuotaPactadas,0),                   
    NroCuotasPagadas = ISNULL(CuotaPagadas,0),                      
    convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                             
    ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(DLIC,0)),                  
    CuotaDescontada = ''                       
                                                
    FROM         
     [ClienteCuota] c         
     LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                             
     left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC ) AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                               
     AND rtrim(C.DLCO) = rtrim(CRE.DLCOC ) AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                      
     LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP       
     LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP            
    WHERE C.[Codigo_proceso] = @codigo_proceso          
      AND (NroDocumento = @Documento OR @Documento = '*')                                   
      AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )             
      AND (DLNP  = @DLNP OR @DLNP = 0)                                      
      -- AND (st.idstatus = @EstadoTrabajador OR @EstadoTrabajador = '-')                                      
     AND (C.DLST = @EstadoTrabajador OR @EstadoTrabajador = '-')        
      AND (C.DLCR  LIKE @ZonaUse + '%'  OR @ZonaUse = '0')                                              
      AND DLIC >= 0                                                              
   ORDER BY  NombreTrabajador      
      
END      
ELSE IF  @TIPO_CUOTA = 2      
BEGIN      
       
   PRINT 'TIPO 2 - ENTR01'        
        
    SELECT DISTINCT                                           
    CodigoEmpresa = @codigo_cliente,                      
    Anio = [DLAP],  -- anio                          
    Mes =[DLMP],  -- mes                     
    NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare                    
    convert(char(10), FechaDesembolso, 103) as FechaDesembolso,                   
        
    TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                          
    'N'            
    ELSE               
    (SELECT CASE WHEN NroTipoCredito = 2 THEN              
    'R'              
    WHEN NroTipoCredito = 3 THEN              
    ' '              
    ELSE                  
    ' '              
    END)              
    END),                 
        
    -- DOI = '''' + cast(C.DLNP as varchar(12)),                                   
    DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),    
    SaldoCredito = cast(CRE.DLPRI as varchar (14)),     
    CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular                    
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                         
    Moneda =  cast ( DLMO as varchar(3)), -- moneda                   
    MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),                  
    NroCuotasPactadas =   ISNULL(CuotaPactadas,0),                   
    NroCuotasPagadas = ISNULL(CuotaPagadas,0),                      
    convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                             
    ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(CR.DLIMC,0)),                  
    CuotaDescontada = ''                       
                                                
    FROM         
    [ClienteCuota] c             
    LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                             
    left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                                
    AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                                
    AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                          
    AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                      
    INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP )              
    LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP        
    LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP        
    WHERE C.[Codigo_proceso] = @codigo_proceso                                            
     AND (NroDocumento = @Documento OR @Documento = '*')                                      
     AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                                      
     AND (DLNP  = @DLNP OR @DLNP = 0)                                      
     -- AND (st.idstatus = @EstadoTrabajador OR @EstadoTrabajador = '-')                                      
    AND C.DLST =case when rtrim( @EstadoTrabajador ) = '-' then C.DLST  ELSE @EstadoTrabajador END                   
     AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')        
     AND DLIC >= 0                                               
   ORDER BY NombreTrabajador                                            
      
                      
END      
ELSE      
BEGIN      
      
SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                            
    INTO #TEMPO                            
 FROM ClienteCuota CC                            
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                            
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                             
    AND CC.Codigo_proceso = CR.Codigo_proceso                    
    AND CC.DLNP = CR.DLACC                            
    AND(CONVERT(INT,                            
    CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                             
    CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                             
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                             
        <                             
        CONVERT(INT,                            
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                             
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                             
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                            
        )                            
        OR                            
                                    
        CONVERT(INT,                            
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                             
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                            
        )                            
        =                            
        CONVERT(INT,                            
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                             
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                             
        )                            
      )                        
  )                            
    WHERE DLIC >= 0                            
 GROUP BY CR.DLACC      
      
      
  PRINT 'TIPO 3 - ENTR01'         
        
  SELECT DISTINCT                                          
   CodigoEmpresa = @codigo_cliente,                      
   Anio = [DLAP],  -- anio                          
   Mes =[DLMP],  -- mes                     
   NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare                    
   convert(char(10), FechaDesembolso, 103) as FechaDesembolso,                   
        
   TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                          
   'N'            
   ELSE               
   (SELECT CASE WHEN NroTipoCredito = 2 THEN              
   'R'              
   WHEN NroTipoCredito = 3 THEN              
   ' '              
   ELSE                  
   ' '              
   END)              
   END),                 
        
   -- DOI = '''' + cast(C.DLNP as varchar(12)),                                   
   DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),    
   SaldoCredito = cast(CRE.DLPRI as varchar (14)),     
   CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular                    
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                         
   Moneda =  cast ( DLMO as varchar(3)), -- moneda                   
   MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),                  
   NroCuotasPactadas =   ISNULL(CuotaPactadas,0),                   
   NroCuotasPagadas = ISNULL(CuotaPagadas,0),                      
   convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                             
   ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(T.CUOTA,0)),                  
   CuotaDescontada = ''                       
                                                 
   FROM         
     [ClienteCuota] c         
     LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                             
     left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                                
     AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                                
     AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                                
     AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                      
     INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)                            
      LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP        
     LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP        
     WHERE C.[Codigo_proceso] = @codigo_proceso                                            
      AND (NroDocumento = @Documento OR @Documento = '*')                                      
      AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                                      
      AND (DLNP  = @DLNP OR @DLNP = 0)                                      
         AND C.DLST =case when rtrim( @EstadoTrabajador ) = '-' then DLST ELSE @EstadoTrabajador END         
      AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                            
      AND DLIC >= 0                                                              
  ORDER BY NombreTrabajador      
      
END      
END;

INSERT INTO FormatoArchivoCliente (Codigo_Cliente, DescripcionFormatoArchivo, FormatoArchivo, TipoFormatoArchivo, ValorAsociado)
VALUES (190828011,'Formato 001 (.xls)','GREENPERUXLS001', 'xls2',NULL);
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoGRLLActivosCesantesText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
/****************************************/    
/* Aqui creamos el nuevo formato */    
/****************************************/    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoGRLLActivosCesantesText]    
@Codigo_proceso as uniqueidentifier,    
@situacionTrabajador as char ( 1 )     
AS    
BEGIN    
        
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        


IF @TIPO_CUOTA = 1        
BEGIN 
	
	SELECT CodigoBanco   = cast ('BIF' as varchar(12)),     
  Moneda    =  cast ( DLMO as varchar(3)),    
  NumeroPagare   = ''''+cast([DLNP] as varchar(12)),    
  CodigoModular   = ''''+cast([DLCM] as varchar(20)),    
  NombreTrabajador  = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),    
  CodigoReferencia  = cast ( [DLCR] as varchar(20)),    
  Anio    = cast ( [DLAP] as varchar(4)),    
  Mes    = cast ( [DLMP] as varchar(2)),    
  Cuota    = DLIC,    
  SituacionLaboral  = cast ( [DLST] as varchar(2)),    
  MontoDescuento   = cast ( 0 as varchar(14)),    
  SaldoCredito  = cast(CRE.DLPRI as varchar (14))     
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
 WHERE [Codigo_proceso] = @Codigo_proceso    
  and DLST IN ('A','C')
  AND DLIC >= 0    
 ORDER BY DLMO, [DLNE]    
 

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

SELECT CodigoBanco   = cast ('BIF' as varchar(12)),     
  Moneda    =  cast ( DLMO as varchar(3)),    
  NumeroPagare   = ''''+cast([DLNP] as varchar(12)),    
  CodigoModular   = ''''+cast([DLCM] as varchar(20)),    
  NombreTrabajador  = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),    
  CodigoReferencia  = cast ( [DLCR] as varchar(20)),    
  Anio    = cast ( [DLAP] as varchar(4)),    
  Mes    = cast ( [DLMP] as varchar(2)),    
  Cuota    = CR.DLIMC,    
  SituacionLaboral  = cast ( [DLST] as varchar(2)),    
  MontoDescuento   = cast ( 0 as varchar(14)),    
  SaldoCredito  = cast(CRE.DLPRI as varchar (14))     
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE CC.[Codigo_proceso] = @Codigo_proceso    
  and DLST IN ('A','C')
  AND DLIC >= 0    
 ORDER BY DLMO, [DLNE]    
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC


	SELECT CodigoBanco   = cast ('BIF' as varchar(12)),     
  Moneda    =  cast ( DLMO as varchar(3)),    
  NumeroPagare   = ''''+cast([DLNP] as varchar(12)),    
  CodigoModular   = ''''+cast([DLCM] as varchar(20)),    
  NombreTrabajador  = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),    
  CodigoReferencia  = cast ( [DLCR] as varchar(20)),    
  Anio    = cast ( [DLAP] as varchar(4)),    
  Mes    = cast ( [DLMP] as varchar(2)),    
  Cuota    = T.CUOTA,    
  SituacionLaboral  = cast ( [DLST] as varchar(2)),    
  MontoDescuento   = cast ( 0 as varchar(14)),    
  SaldoCredito  = cast(CRE.DLPRI as varchar (14))     
	FROM [ClienteCuota] cc  left JOIN DLCRE CRE     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )    
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)    
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)    
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )    
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))     
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE CC.[Codigo_proceso] = @Codigo_proceso    
	and DLST IN ('A','C')
	AND DLIC >= 0    
	ORDER BY DLMO, [DLNE]    

	
	DROP TABLE #TEMPO

END

END

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoHEMERGENCIASJCASIMIROULLOATXT001Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/  
/* Creado     : BANBIF(ENCT)                                            */  
/* Fecha      : 16/01/2018                                              */
/************************************************************************/  

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoHEMERGENCIASJCASIMIROULLOATXT001Text]  
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )       
AS      
BEGIN      
            
DECLARE @CODIGO_CLIENTE_IBS  AS INT             
DECLARE @TIPO_CUOTA   AS INT      
DECLARE  @MES_PROCESO CHAR(2)  
DECLARE  @ANIO_PROCESO CHAR(2)       
            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC   
FROM  CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso            
GROUP BY DLCC           

SELECT @MES_PROCESO = RIGHT('00'+LTRIM(RTRIM(CAST(MES_PERIODO AS VARCHAR(2)))),2), @ANIO_PROCESO = CAST(SUBSTRING(ANIO_PERIODO,3,2) AS VARCHAR(2))	
FROM PROCESO WHERE codigo_proceso = @Codigo_proceso 
            
SELECT @TIPO_CUOTA = TIPO_CUOTA   
FROM  MANTENIMIENTO_CUOTA   
WHERE  DLECUN = @CODIGO_CLIENTE_IBS            
            
IF @TIPO_CUOTA = 1          
BEGIN
   
 SELECT 
	CodPlanilla = CAST('2132' AS VARCHAR(4)),
	MesAnio = RIGHT('0000'+@MES_PROCESO,2) + @ANIO_PROCESO,
	DOI = LEFT(LTRIM(RTRIM(CAST(ISNULL(DLDNI,'') AS VARCHAR(8))))+'        ',8),
	NombresClie = LEFT(LTRIM(RTRIM(CAST(C.DLPA + ' ' + C.DLMA + ', ' + C.DLMN AS VARCHAR(47))))+'                                                  ',47),
	ImporteCuota = RIGHT('         '+LTRIM(RTRIM(REPLACE(CAST(CONVERT(DECIMAL(9,2),ISNULL(C.DLIC,0)) AS VARCHAR(9)),'.',''))),7)
	FROM CLIENTECUOTA C
	LEFT JOIN DLCRE CRE ON (C.DLNP = CRE.DLACC)
	WHERE C.CODIGO_PROCESO = @CODIGO_PROCESO and C.dlst = case when rtrim( @situacionTrabajador ) = '-' then DLST  ELSE @situacionTrabajador END
	and CRE.DLCUS ='RE'
	order by NombresClie      
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
 SELECT 
	CodPlanilla = CAST('2132' AS VARCHAR(4)),
	MesAnio = RIGHT('0000'+@MES_PROCESO,2) + @ANIO_PROCESO,
	DOI = LEFT(LTRIM(RTRIM(CAST(ISNULL(DLDNI,'') AS VARCHAR(8))))+'        ',8),
	NombresClie = LEFT(LTRIM(RTRIM(CAST(C.DLPA + ' ' + C.DLMA + ', ' + C.DLMN AS VARCHAR(47))))+'                                                  ',47),
    ImporteCuota = RIGHT('         '+ LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS VARCHAR(9)),'.',''))), 7)   
 FROM CLIENTECUOTA C   
 INNER JOIN DLCRE CRE ON ( DLNP  = DLACC )      
     INNER JOIN dlcnt cnt  ON ( C.dlnp  = cnt.DLCACC)      
     INNER JOIN DLCCR CR ON (CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP )                    
  WHERE  C.CODIGO_PROCESO = @codigo_proceso AND      
    DLST   = CASE WHEN RTRIM(@situacionTrabajador ) = '-' THEN DLST      
         ELSE @situacionTrabajador       
   END AND   
  DLIC >=0 and CRE.DLCUS ='RE'
  order by NombresClie    
   
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
 SELECT  CR.DLACC     'PAGARE',   
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF)  'CUOTA'  
 INTO  #TEMPO  
 FROM  ClienteCuota C  
 INNER JOIN PROCESO  P  ON (C.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR  CR  ON (C.CODIGO_PROCESO = @Codigo_proceso   
       AND C.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE DLIC >=0  
 GROUP BY CR.DLACC  
  
SELECT 
CodPlanilla = CAST('2132' AS VARCHAR(4)),
MesAnio = RIGHT('0000'+@MES_PROCESO,2) + @ANIO_PROCESO,
DOI = LEFT(LTRIM(RTRIM(CAST(ISNULL(DLDNI,'') AS VARCHAR(8))))+'        ',8),
NombresClie = LEFT(LTRIM(RTRIM(CAST(C.DLPA + ' ' + C.DLMA + ', ' + C.DLMN AS VARCHAR(47))))+'                                                  ',47),
ImporteCuota = RIGHT('         '+ LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS VARCHAR(9)),'.',''))), 7)   
 FROM CLIENTECUOTA C INNER JOIN DLCRE  ON ( DLNP  = DLACC )      
 INNER JOIN dlcnt cnt  ON ( C.dlnp  = cnt.DLCACC)      
 INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)  
 LEFT JOIN DLCRE CRE ON (C.DLNP = CRE.DLACC)
 WHERE  C.CODIGO_PROCESO = @codigo_proceso AND      
  DLST = CASE WHEN RTRIM(@situacionTrabajador ) = '-' THEN DLST      
       ELSE @situacionTrabajador       
   END AND   
  DLIC >=0 and CRE.DLCUS ='RE'
  order by NombresClie 
 DROP TABLE #TEMPO  
  
END  
  
END  

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoHEMERGENCIASJCASIMIROULLOATXT002Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/  
/* Creado     : BANBIF(ENCT)                                            */  
/* Fecha      : 16/01/2018                                              */
/************************************************************************/  

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoHEMERGENCIASJCASIMIROULLOATXT002Text]  
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )       
AS      
BEGIN      
            
DECLARE @CODIGO_CLIENTE_IBS  AS INT             
DECLARE @TIPO_CUOTA   AS INT      
DECLARE  @MES_PROCESO CHAR(2)  
DECLARE  @ANIO_PROCESO CHAR(2)       
            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC   
FROM  CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso            
GROUP BY DLCC           

SELECT @MES_PROCESO = RIGHT('00'+LTRIM(RTRIM(CAST(MES_PERIODO AS VARCHAR(2)))),2), @ANIO_PROCESO = CAST(SUBSTRING(ANIO_PERIODO,3,2) AS VARCHAR(2))	
FROM PROCESO WHERE codigo_proceso = @Codigo_proceso 
            
SELECT @TIPO_CUOTA = TIPO_CUOTA   
FROM  MANTENIMIENTO_CUOTA   
WHERE  DLECUN = @CODIGO_CLIENTE_IBS            
            
IF @TIPO_CUOTA = 1          
BEGIN
   
 SELECT 
	CodPlanilla = CAST('2132' AS VARCHAR(4)),
	MesAnio = RIGHT('0000'+@MES_PROCESO,2) + @ANIO_PROCESO,
	DOI = LEFT(LTRIM(RTRIM(CAST(ISNULL(DLDNI,'') AS VARCHAR(8))))+'        ',8),
	NombresClie = LEFT(LTRIM(RTRIM(CAST(C.DLPA + ' ' + C.DLMA + ', ' + C.DLMN AS VARCHAR(47))))+'                                                  ',47),
	ImporteCuota = RIGHT('         '+LTRIM(RTRIM(REPLACE(CAST(CONVERT(DECIMAL(9,2),ISNULL(C.DLIC,0)) AS VARCHAR(9)),'.',''))),7)
	FROM CLIENTECUOTA C
	LEFT JOIN DLCRE CRE ON (C.DLNP = CRE.DLACC)
	WHERE C.CODIGO_PROCESO = @CODIGO_PROCESO and C.dlst = case when rtrim( @situacionTrabajador ) = '-' then DLST  ELSE @situacionTrabajador END
	and CRE.DLCUS ='IN'
	order by NombresClie      
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
 SELECT 
	CodPlanilla = CAST('2132' AS VARCHAR(4)),
	MesAnio = RIGHT('0000'+@MES_PROCESO,2) + @ANIO_PROCESO,
	DOI = LEFT(LTRIM(RTRIM(CAST(ISNULL(DLDNI,'') AS VARCHAR(8))))+'        ',8),
	NombresClie = LEFT(LTRIM(RTRIM(CAST(C.DLPA + ' ' + C.DLMA + ', ' + C.DLMN AS VARCHAR(47))))+'                                                  ',47),
    ImporteCuota = RIGHT('         '+ LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS VARCHAR(9)),'.',''))), 7)   
 FROM CLIENTECUOTA C   
 INNER JOIN DLCRE CRE ON ( DLNP  = DLACC )      
     INNER JOIN dlcnt cnt  ON ( C.dlnp  = cnt.DLCACC)      
     INNER JOIN DLCCR CR ON (CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP )                    
  WHERE  C.CODIGO_PROCESO = @codigo_proceso AND      
    DLST   = CASE WHEN RTRIM(@situacionTrabajador ) = '-' THEN DLST      
         ELSE @situacionTrabajador       
   END AND   
  DLIC >=0 and CRE.DLCUS ='IN'
  order by NombresClie    
   
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
 SELECT  CR.DLACC     'PAGARE',   
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF)  'CUOTA'  
 INTO  #TEMPO  
 FROM  ClienteCuota C  
 INNER JOIN PROCESO  P  ON (C.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR  CR  ON (C.CODIGO_PROCESO = @Codigo_proceso   
       AND C.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE DLIC >=0  
 GROUP BY CR.DLACC  
  
SELECT 
CodPlanilla = CAST('2132' AS VARCHAR(4)),
MesAnio = RIGHT('0000'+@MES_PROCESO,2) + @ANIO_PROCESO,
DOI = LEFT(LTRIM(RTRIM(CAST(ISNULL(DLDNI,'') AS VARCHAR(8))))+'        ',8),
NombresClie = LEFT(LTRIM(RTRIM(CAST(C.DLPA + ' ' + C.DLMA + ', ' + C.DLMN AS VARCHAR(47))))+'                                                  ',47),
ImporteCuota = RIGHT('         '+ LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS VARCHAR(9)),'.',''))), 7)   
 FROM CLIENTECUOTA C INNER JOIN DLCRE  ON ( DLNP  = DLACC )      
 INNER JOIN dlcnt cnt  ON ( C.dlnp  = cnt.DLCACC)      
 INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)  
 LEFT JOIN DLCRE CRE ON (C.DLNP = CRE.DLACC)
 WHERE  C.CODIGO_PROCESO = @codigo_proceso AND      
  DLST = CASE WHEN RTRIM(@situacionTrabajador ) = '-' THEN DLST      
       ELSE @situacionTrabajador       
   END AND   
  DLIC >=0 and CRE.DLCUS ='IN'
  order by NombresClie 
 DROP TABLE #TEMPO  
  
END  
  
END  

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoINDECOText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoINDECOText]                                

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
                      
    SELECT                                      
  Codigo_Personal= ''+cast([DLCM] as varchar(20)),                              
  Pagare = cast([DLNP] as varchar(12)),                                      
                              
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
  CuotaMensual =  dlic ,
 DNI = cre.dldni
                                        
                                   
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
 WHERE [Codigo_proceso] = @Codigo_proceso                                    
 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
    ELSE @situacionTrabajador END                                      
    AND DLIC >= 0                   
 ORDER BY DLMO, [DLNE]                       
           
END  --- FIN 1                      
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN                         
                       
                        
                              
  SELECT                                      
    Codigo_Personal = ''+cast([DLCM] as varchar(20)),                              
  Pagare = cast([DLNP] as varchar(12)),                                      
                              
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
  CuotaMensual =  CR.DLIMC  ,
  DNI= cre.dldni
                                  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0                                      
  ORDER BY DLMO, [DLNE]                                      
                        

                         
                      
END                      
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      
 
  BEGIN   -- 1                             
                              
  SELECT 

    Codigo_Personal = ''+cast([DLCM] as varchar(20)),                              
  Pagare = cast([DLNP] as varchar(12)),                                      
                              
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
CuotaMensual =  T.CUOTA ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
                                      
 DNI= cre.dldni
                
  
                                    
                                    
  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0                                     
  ORDER BY DLMO, [DLNE]                                      
              
 
 END -- FIN 2                           
                      
                      
 DROP TABLE #TEMPO                      
                      
END                      
                      
END



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoIRENSURText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
         
                    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoIRENSURText]  
@Codigo_proceso  as Uniqueidentifier,                    
@SituacionTrabajador  as char ( 1 )                    
AS                    
BEGIN                    
--- INSTITUTO REGIONAL DE ENFERMEDADES NEOPLASICAS DEL SUR                
                  
DECLARE @CODIGO_CLIENTE_IBS AS INT                   
DECLARE @TIPO_CUOTA AS INT                  
                  
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                  
GROUP BY DLCC                  
                  
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                              
          
          
IF @TIPO_CUOTA = 1                  
BEGIN           
 SELECT       
 '2503' + --codigo BanBif  
 REPLICATE('0',2 - LEN(ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end))))) + CONVERT(VARCHAR,ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end)))) + substring(ltrim(rtrim((case when cc.dlmp = 1 then (cc.dlap - 1) else cc
.dlap end))), 3, 2) + --mes y año de descuento  
 convert(char(8), cre.DLDNI) + --DNI      
 convert(char(45), replace(cc.dlne, ',', '')) + --apellidos y nombres      
 REPLICATE(' ',9 - LEN(ltrim(rtrim(convert(int, cc.DLIC * 100))))) + convert(varchar, ltrim(rtrim(convert(int, cc.DLIC * 100)))) --monto a descontar     
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
    left JOIN DLCRE CRE                     
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
   AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                     
 WHERE [Codigo_proceso] = @Codigo_proceso                    
   and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                    
  ELSE @situacionTrabajador END                    
  AND DLIC >= 0   
END          
ELSE IF  @TIPO_CUOTA = 2              
BEGIN             
 SELECT            
 '2503' + --codigo BanBif  
 REPLICATE('0',2 - LEN(ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end))))) + CONVERT(VARCHAR,ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end)))) + substring(ltrim(rtrim((case when cc.dlmp = 1 then (cc.dlap - 1) else cc
.dlap end))), 3, 2) + --mes y año de descuento  
 convert(char(8), cre.DLDNI) + --DNI      
 convert(char(45), replace(cc.dlne, ',', '')) + --apellidos y nombres      
    REPLICATE(' ',9 - LEN(ltrim(rtrim(convert(int, CR.DLIMC * 100))))) + convert(varchar, ltrim(rtrim(convert(int, CR.DLIMC * 100)))) --monto a descontar   
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
   left JOIN DLCRE CRE                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))              
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                    
    ELSE @situacionTrabajador END                    
 AND DLIC >= 0       
          
END          
          
ELSE IF  @TIPO_CUOTA = 3              
BEGIN                   
          
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'          
    INTO #TEMPO          
 FROM ClienteCuota CC          
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)          
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso           
       AND CC.DLNP = CR.DLACC          
       AND(CONVERT(INT,          
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +           
      CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )           
        <           
        CONVERT(INT,          
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +           
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +           
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END          
        )          
        OR          
                  
        CONVERT(INT,          
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END          
        )          
        =          
        CONVERT(INT,          
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +           
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END           
        )          
      )          
 )          
 WHERE DLIC >= 0                         
 GROUP BY CR.DLACC            
           
 SELECT       
 '2503' + --codigo BanBif  
 REPLICATE('0',2 - LEN(ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end))))) + CONVERT(VARCHAR,ltrim(rtrim((case when cc.dlmp = 1 then 12 else (cc.dlmp - 1) end)))) + substring(ltrim(rtrim((case when cc.dlmp = 1 then (cc.dlap - 1) else cc
.dlap end))), 3, 2) + --mes y año de descuento  
 convert(char(8), cre.DLDNI) + --DNI      
 convert(char(45), replace(cc.dlne, ',', '')) + --apellidos y nombres       
    REPLICATE(' ',9 - LEN(ltrim(rtrim(convert(int, T.CUOTA * 100))))) + convert(varchar, ltrim(rtrim(convert(int, T.CUOTA * 100)))) --monto a descontar     
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
   left JOIN DLCRE CRE                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                     
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                    
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                    
    ELSE @situacionTrabajador END                    
 AND DLIC >= 0           
   
 DROP TABLE #TEMPO          
          
END          
          
END     
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoMDGPEXCELACTIVOSText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoMDGPEXCELACTIVOSText]      
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )       
AS      
BEGIN  
	WITH PLPDWH2 AS (SELECT DISTINCT * FROM PLPDWH)    
	SELECT 
	 ROW_NUMBER() OVER( ORDER BY GETDATE()) AS Nº,
	RIGHT(REPLICATE('0',8)+CC.DLCM,8) AS CIP,
	RE.DLDNI AS DNI,
	RE.DLAPP+' '+RE.DLAPM+' '+RE.DLPRN+' '+RE.DLSGN AS [APELLIDOS Y NOMBRES],	
	--CC.DLIC AS [CUOTA MENSUAL],
	CR.DLIMC AS [CUOTA MENSUAL],
	RIGHT(SPACE(2)+CAST(CC.CuotaPactadas AS VARCHAR),2)	AS [NUMERO DE CUOTAS PACTADAS],
	RIGHT(SPACE(2)+CAST(CC.CuotaPagadas AS VARCHAR),2)	AS [NUMERO DE CUOTAS PAGADAS],
	CC.MontoOriginal AS [MONTO OTORGADO],
	FORMAT(CC.FechaDesembolso,'ddMMyyyy') AS [FECHA DESEMBOLSO],
	CASE WHEN CR.DLMOD!='N' OR CR.DLMOD IS NULL THEN 'G'
		 WHEN PL.PDWPACC=NULL THEN 'G'
		 WHEN CR.DLMOD='N' THEN
			CASE WHEN PL.PDWCOMPD='SI' THEN 'C' 
				 WHEN PL.PDWCOMPD='NO' THEN 
					CASE WHEN PL.PDWNOV='SI' THEN 'A' 
						 WHEN PL.PDWNOV='NO' THEN 'N'
					END 
		    END
	END 
	AS [TIPO SOLICITUD]
	FROM [ClienteCuota] CC
	INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP) 
	INNER JOIN CLIENTE CLI ON CLI.CODIGO_IBS=CC.DLCC
	INNER JOIN DLCRE RE ON RE.DLACC=CC.DLNP
	--INNER JOIN DLCND ND ON ND.DEAACC=RE.DLACC
	LEFT JOIN DLCND ND ON ND.DEAACC=RE.DLACC
	LEFT JOIN PLPDWH2 PL ON PL.PDWPACC=RE.DLACC
	WHERE  CC.[Codigo_proceso] =@Codigo_proceso
	AND (CC.DLST='A' OR CC.DLST='')
	ORDER BY RE.DLAPP ASC --[TIPO SOLICITUD] ASC--RE.DLAPP ASC -- 
	--AND CLI.CODIGO_INSTITUCION IS NOT NULL AND LEN (CLI.CODIGO_INSTITUCION)>0 
END 
-- [dbo].[CronogramaFuturoMDGPEXCELACTIVOSText] -- FIN

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoMDGPEXCELCESANTESText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoMDGPEXCELCESANTESText]      
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )       
AS      
BEGIN  
	    
	SELECT 
	ROW_NUMBER() OVER( ORDER BY GETDATE()) AS Nº,
	RIGHT(REPLICATE('0',10)+CC.DLCM,10) AS CIP,
	RE.DLDNI AS DNI,
	RE.DLAPP+' '+RE.DLAPM+' '+RE.DLPRN+' '+RE.DLSGN AS [APELLIDOS Y NOMBRES],	
	--CC.DLIC AS [CUOTA MENSUAL],
	CR.DLIMC AS [CUOTA MENSUAL],
	RIGHT(SPACE(2)+CAST(CC.CuotaPactadas AS VARCHAR),2)	AS [NUMERO DE CUOTAS PACTADAS],
	RIGHT(SPACE(2)+CAST(CC.CuotaPagadas AS VARCHAR),2)	AS [NUMERO DE CUOTAS PAGADAS],
	CC.MontoOriginal AS [MONTO OTORGADO],
	FORMAT(CC.FechaDesembolso,'ddMMyyyy') AS [FECHA DESEMBOLSO],
	--CASE WHEN ND.CDGTSOL IS NULL OR LEN(ISNULL(ND.CDGTSOL,''))=0  THEN 'G' ELSE ND.CDGTSOL END AS [TIPO SOLICITUD]
	'G' [TIPO SOLICITUD]

	FROM [ClienteCuota] CC
	INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP) 
	INNER JOIN CLIENTE CLI ON CLI.CODIGO_IBS=CC.DLCC
	INNER JOIN DLCRE RE ON RE.DLACC=CC.DLNP
	--INNER JOIN DLCND ND ON ND.DEAACC=RE.DLACC
	LEFT JOIN DLCND ND ON ND.DEAACC=RE.DLACC
	LEFT JOIN PLPDWH PL ON PL.PDWPACC=RE.DLACC
	WHERE  CC.[Codigo_proceso] =@Codigo_proceso
	AND CC.DLST='C'
	ORDER BY RE.DLAPP ASC
	--AND CLI.CODIGO_INSTITUCION IS NOT NULL AND LEN (CLI.CODIGO_INSTITUCION)>0 
END 
-- [dbo].[CronogramaFuturoMDGPEXCELCESANTESText] -- FIN

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoMDGPTXTACTIVOSText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoMDGPTXTACTIVOSText]  
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )     
AS        
BEGIN  
  
--CREATE NONCLUSTERED INDEX  HistoricoDLCCR_INDX01 ON  HistoricoDLCCR (CODIGO_PROCESO) INCLUDE(DLACC,DLVCA,DLVCM,DLIMC)   
  
  
--UPDATE STATISTICS HistoricoDLCCR  
  
  
DECLARE @TBL_HistoricoDLCCR as table (  
 [Codigo_proceso] [uniqueidentifier] NOT NULL,  
 [DLACC] [decimal](12, 0) NOT NULL,  
 [DLCCY] [varchar](3) NOT NULL,  
 [DLVCA] [decimal](2, 0) NOT NULL,  
 [DLVCM] [decimal](2, 0) NOT NULL,  
 [DLVCD] [decimal](2, 0) NOT NULL,  
 [DLNCT] [decimal](3, 0) NOT NULL,  
 [DLIMC] [decimal](15, 2) NOT NULL,  
 [DLIPC] [decimal](15, 2) NOT NULL,  
 [DLITF] [decimal](18, 2) NOT NULL,  
 [DLSTS] [varchar](1) NOT NULL,  
 [DLMOD] [varchar](1) NULL,  
 [FECHA_PREPA] [varchar](10) NULL  
)   
--CREATE NONCLUSTERED INDEX  HistoricoDLCCR_INDX01 ON  HistoricoDLCCR (CODIGO_PROCESO) INCLUDE(DLACC,DLVCA,DLVCM,DLIMC)   
--CREATE NONCLUSTERED INDEX  HistoricoDLCCR_INDX02 ON  HistoricoDLCCR (CODIGO_PROCESO) INCLUDE(DLACC,DLCCY,DLVCA,DLVCM,DLVCD,DLNCT,DLIMC,DLIPC,DLITF,DLSTS,DLMOD,FECHA_PREPA)   
--CREATE NONCLUSTERED INDEX  CLIENTE_INDX01 ON CLIENTE (CODIGO_IBS)   
--CREATE NONCLUSTERED INDEX  CLCND_INDX01 ON DLCND (DEAACC)   
  
  
 insert @TBL_HistoricoDLCCR  
 select [Codigo_proceso],  
   
 [DLACC],  
 [DLCCY],  
 [DLVCA],  
 [DLVCM],  
 [DLVCD],  
 [DLNCT],  
 [DLIMC],  
 [DLIPC],  
 [DLITF],  
 [DLSTS],  
 [DLMOD],  
 [FECHA_PREPA]   
  from HistoricoDLCCR where Codigo_proceso  = @Codigo_proceso  
  
 --select count(1) from @TBL_HistoricoDLCCR  
   
 DECLARE @SUMATOTAL VARCHAR(10)  
  
 SELECT @SUMATOTAL=RIGHT(REPLICATE('0',10)+REPLACE(CAST(SUM(CR.DLIMC) AS VARCHAR),'.',''),10)   
 FROM [ClienteCuota] CC  
 --INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)   
 INNER JOIN @TBL_HistoricoDLCCR CR ON ( CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)   
 INNER JOIN CLIENTE CLI ON CLI.CODIGO_IBS=CC.DLCC  
 INNER JOIN DLCRE RE ON RE.DLACC=CC.DLNP  
 LEFT JOIN DLCND ND ON ND.DEAACC=RE.DLACC  
 WHERE  CC.[Codigo_proceso] =@Codigo_proceso  
 AND (CC.DLST='A' OR CC.DLST='')  
 
 and ( CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP) 
 and CLI.CODIGO_IBS=CC.DLCC 
 and RE.DLACC=CC.DLNP  
 ;  
          
 WITH PLPDWH2 AS (SELECT DISTINCT * FROM PLPDWH)    
 SELECT 'V0'  AS CaracterSistema,  
   '304'  AS CodigoUsuario,  
   '9403'  AS CodigoDescuento,  
   @SUMATOTAL AS Sumatorio,  
   '','','' AS [TIPO SOLICITUD]  
  
 UNION ALL  
  
 SELECT   
 RIGHT(CC.DLCM,8) AS CIP,  
 'XX' AS Valor1,  
 --RIGHT(REPLICATE('0',8)+REPLACE(CAST(CC.DLIC AS VARCHAR),'.',''),8) AS MontoCuota,  
 RIGHT(REPLICATE('0',8)+REPLACE(CAST(CR.DLIMC AS VARCHAR),'.',''),8) AS MontoCuota,  
 REPLICATE('0',8) AS Cero,  
 'M' AS Valor2,  
 FORMAT(CC.FechaDesembolso,'ddMMyyyy') AS FechaDesembolso,  
 CASE WHEN CR.DLMOD!='N' OR CR.DLMOD IS NULL THEN 'G'  
   WHEN PL.PDWPACC=NULL THEN 'G'  
   WHEN CR.DLMOD='N' THEN  
   CASE WHEN PL.PDWCOMPD='SI' THEN 'C'   
     WHEN PL.PDWCOMPD='NO' THEN   
     CASE WHEN PL.PDWNOV='SI' THEN 'A'   
       WHEN PL.PDWNOV='NO' THEN 'N'  
     END   
      END  
 END   
 AS [TIPO SOLICITUD]  
 FROM [ClienteCuota] CC  
 --INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)   
 INNER JOIN @TBL_HistoricoDLCCR CR ON ( CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)   
 INNER JOIN CLIENTE CLI ON CLI.CODIGO_IBS=CC.DLCC  
 INNER JOIN DLCRE RE ON RE.DLACC=CC.DLNP  
 LEFT JOIN DLCND ND ON ND.DEAACC=RE.DLACC   
 LEFT JOIN PLPDWH2 PL ON PL.PDWPACC=RE.DLACC  
 
 WHERE  CC.[Codigo_proceso] =@Codigo_proceso  
 AND (CC.DLST='A' OR CC.DLST='')  

 and  CLI.CODIGO_IBS=CC.DLCC 
 and  ( CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)  
 and RE.DLACC=CC.DLNP 
 and ND.DEAACC=RE.DLACC



 ORDER BY [TIPO SOLICITUD]  
 --AND CLI.CODIGO_INSTITUCION IS NOT NULL AND LEN (CLI.CODIGO_INSTITUCION)>0   
  
  
   
END   
-- [dbo].[CronogramaFuturoMDGPTXTACTIVOSText] -- FIN  

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoMDGPTXTCESANTESText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoMDGPTXTCESANTESText]    
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )       
AS      
BEGIN      
	DECLARE @SUMATOTAL VARCHAR(10)

	SELECT @SUMATOTAL=RIGHT(REPLICATE('0',10)+REPLACE(CAST(SUM(CR.DLIMC) AS VARCHAR),'.',''),10) 
	FROM [ClienteCuota] CC
	INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP) 
	INNER JOIN CLIENTE CLI ON CLI.CODIGO_IBS=CC.DLCC
	INNER JOIN DLCRE RE ON RE.DLACC=CC.DLNP
	LEFT JOIN DLCND ND ON ND.DEAACC=RE.DLACC
	WHERE  CC.[Codigo_proceso] =@Codigo_proceso
	AND CC.DLST='C'

	      
	SELECT	'V0'		AS CaracterSistema,
			'304'		AS CodigoUsuario,
			'9403'		AS CodigoDescuento,
			@SUMATOTAL	AS Sumatorio,
			'',''--,''
	UNION ALL
	SELECT 
	RIGHT(CC.DLCM,10) AS CIP,
	--'XX' AS Valor1,
	--RIGHT(REPLICATE('0',8)+REPLACE(CAST(CC.DLIC AS VARCHAR),'.',''),8) AS MontoCuota,
	RIGHT(REPLICATE('0',8)+REPLACE(CAST(CR.DLIMC AS VARCHAR),'.',''),8) AS MontoCuota,

	REPLICATE('0',8) AS Cero,
	'M' AS Valor2,
	FORMAT(CC.FechaDesembolso,'ddMMyyyy') AS FechaDesembolso,
	'G' AS [TIPO SOLICITUD]

	FROM [ClienteCuota] CC
	INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP) 
	INNER JOIN CLIENTE CLI ON CLI.CODIGO_IBS=CC.DLCC
	INNER JOIN DLCRE RE ON RE.DLACC=CC.DLNP
	--INNER JOIN DLCND ND ON ND.DEAACC=RE.DLACC
	LEFT JOIN DLCND ND ON ND.DEAACC=RE.DLACC
	
	LEFT JOIN PLPDWH PL ON PL.PDWPACC=RE.DLACC
	WHERE  CC.[Codigo_proceso] =@Codigo_proceso
	AND CC.DLST='C'
	--AND CLI.CODIGO_INSTITUCION IS NOT NULL AND LEN (CLI.CODIGO_INSTITUCION)>0 
END 
-- [dbo].[CronogramaFuturoMDGPTXTCESANTESText] --FIN

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoMINSA]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoMINSA]      
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )       
AS      
BEGIN     
  
  
DECLARE @NumeroDocumento AS nvarchar(12)      
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
 SET NOCOUNT ON       
  
  
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 
	  SELECT @NumeroDocumento = NumeroDocumento       
  FROM CLIENTE C INNER JOIN PROCESO P       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)      
  WHERE Codigo_proceso = @Codigo_proceso      
 SET NOCOUNT OFF      
      
 SELECT CodigoBanco = cast (      
    CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD      
     '2024'--'2272'      
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN      
     '2028'      
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4      
     '2024'      
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5      
     '2024'      
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO      
     '2024'--'2211'      
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL      
     '2180'--'2023'      
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6      
     --'2024'      
     CASE WHEN [DLST] = 'A' THEN      
      '2184'      
     WHEN [DLST] = 'C' THEN       
      '2234'      
     ELSE       
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)      
     END      
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8      
     '2024'      
     
    ELSE      
     'BIF'       
    END      
    as varchar(4)),       
      
  Mes = SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ),      
  Anio = SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 ),      
  RTRIM(LTRIM(DLDNI)),      
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(45)),      
  Cuota = DLIC      
       
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))       
 WHERE [Codigo_proceso] = @Codigo_proceso      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END 
	AND DLIC >= 0     
 ORDER BY DLMO, [DLNE]      
  

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT @NumeroDocumento = NumeroDocumento       
  FROM CLIENTE C INNER JOIN PROCESO P       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)      
  WHERE Codigo_proceso = @Codigo_proceso      
 SET NOCOUNT OFF      
      
 SELECT CodigoBanco = cast (      
    CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD      
     '2024'--'2272'      
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN      
     '2028'      
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4      
     '2024'      
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5      
     '2024'      
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO      
     '2024'--'2211'      
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL      
     '2180'--'2023'      
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6      
     --'2024'      
     CASE WHEN [DLST] = 'A' THEN      
      '2184'      
     WHEN [DLST] = 'C' THEN       
      '2234'      
     ELSE       
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)      
     END      
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8      
     '2024'      
       
      
    ELSE      
     'BIF'       
    END      
    as varchar(4)),       
      
  Mes = SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ),      
  Anio = SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 ),      
  RTRIM(LTRIM(DLDNI)),      
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(45)),      
  Cuota = CR.DLIMC      
       
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))       
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE cc.[Codigo_proceso] = @Codigo_proceso      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END 
  AND DLIC >= 0     
 ORDER BY DLMO, [DLNE]      
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	SELECT @NumeroDocumento = NumeroDocumento       
  FROM CLIENTE C INNER JOIN PROCESO P       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)      
  WHERE Codigo_proceso = @Codigo_proceso      
 SET NOCOUNT OFF      
      
 SELECT CodigoBanco = cast (      
    CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD      
     '2024'--'2272'      
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN      
     '2028'      
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4      
     '2024'      
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5      
     '2024'      
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO      
     '2024'--'2211'      
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL      
     '2180'--'2023'      
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6      
     --'2024'      
     CASE WHEN [DLST] = 'A' THEN      
      '2184'      
     WHEN [DLST] = 'C' THEN       
      '2234'      
     ELSE       
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)      
     END      
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8      
     '2024'      
       
      
    ELSE      
     'BIF'       
    END      
    as varchar(4)),       
      
  Mes = SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ),      
  Anio = SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 ),      
  RTRIM(LTRIM(DLDNI)),      
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(45)),      
  Cuota = T.CUOTA      
       
	FROM [ClienteCuota] cc  left JOIN DLCRE CRE       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))       
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE cc.[Codigo_proceso] = @Codigo_proceso      
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END      
	AND DLIC >= 0
	ORDER BY DLMO, [DLNE]      
	

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[cronogramafuturoMINSA_Activos20291109Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

 CREATE OR ALTER PROCEDURE [dbo].[cronogramafuturoMINSA_Activos20291109Text]          
@Codigo_proceso as uniqueidentifier,                  
@situacionTrabajador as char ( 1 )                   
AS BEGIN                  
/********************************************************************************/                  
/* Modificado por: AHSP        */                  
/* Fecha Modif  : 2008/05/05       */                  
/* Detalle  : Se necesita que el Mes sea el del periodo anterior y  */                  
/*     modificar para el Hosp. Belen trujillo su Codigo a 2501 */                  
/********************************************************************************/                  
DECLARE @NumeroDocumento AS nvarchar(12)                  
--Envio de la informacion del cronograma futuro en formato CSV                  
 SET NOCOUNT ON                   
  SELECT  @NumeroDocumento = NumeroDocumento                   
  FROM CLIENTE C INNER JOIN PROCESO P                   
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                  
  WHERE Codigo_proceso = @Codigo_proceso                  
                   
 --CREATE TABLE #TMP ( IDE AS INT IDENTITY (1, 1 ) , DATA AS CHAR(108)                   
                
      

        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        
IF @TIPO_CUOTA = 1        
BEGIN  --BEGIN IF CUOTA      
  
 SELECT cast (--CASE                 
--    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL                  
     CASE WHEN [DLST] = 'A' THEN                  
      '2029'                  
     WHEN [DLST] = 'C' THEN                   
      '2009'                  
     ELSE                   
      '2180'--'2023'             
     END                 
                
    as varchar(4) )                   
                  
  + CASE when @NumeroDocumento = '20223149635' then            
      CASE                   
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)                  
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)                  
       END             
    ELSE            
      CASE                   
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)                  
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)                  
       END                  
    END            
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )                  
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )                  
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))                  
  + cast ( REPLACE ([DLNE], ',', '') as char(45))                  
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )                  
  CASE WHEN @NumeroDocumento = '20223149635' then            
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )                
  ELSE            
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )                  
  END            
  AS DATA ,                  
  ORDEN = IDENTITY(int, 1, 1)                  
 INTO #TMP                  
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                   
 WHERE [Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END         
 and DLST = 'A'         
 AND DLIC >= 0          
  
                   
 SET IDENTITY_INSERT #TMP ON                   
 INSERT INTO #TMP ( DATA , ORDEN )                   
                  
    select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP)          
           
 SET NOCOUNT OFF          
 --ORDER BY DLMO, [DLNE]          
 SELECT DATA FROM #TMP ORDER BY ORDEN          
  
END   
ELSE  
BEGIN  
  
 SELECT cast (--CASE                 
--    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL                  
     CASE WHEN [DLST] = 'A' THEN                  
      '2029'                  
     WHEN [DLST] = 'C' THEN                   
      '2009'                  
     ELSE                   
      '2180'--'2023'             
     END                 
                
    as varchar(4) )                   
                  
  + CASE when @NumeroDocumento = '20223149635' then            
      CASE                   
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)                  
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)                  
       END             
    ELSE            
      CASE                   
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)                  
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)                  
       END                  
    END            
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )                  
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )                  
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))                  
  + cast ( REPLACE ([DLNE], ',', '') as char(45))                  
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )                  
  CASE WHEN @NumeroDocumento = '20223149635' then            
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 )                
  ELSE            
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 )                  
  END            
  AS DATA ,                  
  ORDEN = IDENTITY(int, 1, 1)                  
 INTO #TMP2                  
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                   
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                  
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                  
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                  
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                  
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))   
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                  
 WHERE cc.[Codigo_proceso] = @Codigo_proceso                  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador END         
 and DLST = 'A'                 
 AND DLIC >= 0                  
   
 SET IDENTITY_INSERT #TMP2 ON                   
 INSERT INTO #TMP2( DATA , ORDEN )                   
                  
    select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP2)          
           
 SET NOCOUNT OFF          
 --ORDER BY DLMO, [DLNE]          
 SELECT DATA FROM #TMP2 ORDER BY ORDEN          
  
  
END  
  
      
  
END          
    
    

GO
/****** Object:  StoredProcedure [dbo].[cronogramafuturoMINSA_Cesantes20091109Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE OR ALTER PROCEDURE [dbo].[cronogramafuturoMINSA_Cesantes20091109Text]  
@Codigo_proceso as uniqueidentifier,              
@situacionTrabajador as char ( 1 )               
AS BEGIN              
/********************************************************************************/              
/* Modificado por: AHSP        */              
/* Fecha Modif  : 2008/05/05       */              
/* Detalle  : Se necesita que el Mes sea el del periodo anterior y  */              
/*     modificar para el Hosp. Belen trujillo su Codigo a 2501 */              
/********************************************************************************/              
DECLARE @NumeroDocumento AS nvarchar(12)              
--Envio de la informacion del cronograma futuro en formato CSV              
 SET NOCOUNT ON               
  SELECT  @NumeroDocumento = NumeroDocumento               
  FROM CLIENTE C INNER JOIN PROCESO P               
    ON (C.Codigo_Cliente = P.Codigo_Cliente)              
  WHERE Codigo_proceso = @Codigo_proceso              
               
 --CREATE TABLE #TMP ( IDE AS INT IDENTITY (1, 1 ) , DATA AS CHAR(108)               
                
 SELECT cast (--CASE             
--    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
            
    as varchar(4) )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     --WHEN DLMP = 1 THEN  '12' +  RIGHT('0' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
       WHEN DLMP = 1 THEN  '12' +  RIGHT(RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE  -- RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
	   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT(RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT(RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)               --RIGHT('0' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE  -- RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
	  RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT(RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 ) --+ '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))               
 WHERE [Codigo_proceso] = @Codigo_proceso              
  --and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST              
  --  ELSE @situacionTrabajador END     
 and DLST = 'C'             
               
 SET IDENTITY_INSERT #TMP ON               
 INSERT INTO #TMP ( DATA , ORDEN )               
              
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP)        
         
 SET NOCOUNT OFF        
 --ORDER BY DLMO, [DLNE]        
 SELECT DATA FROM #TMP ORDER BY ORDEN        
END    
  
  
  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoMINSA2Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
            
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoMINSA2Text]                   
@Codigo_proceso as uniqueidentifier,                      
@situacionTrabajador as char ( 1 )                       
AS BEGIN                      
/********************************************************************************/                      
/* Creado por: Christian Rivera */                      
/* Fecha: 07-05-2015 */                      
/* Detalle  : Nueva escructura de archivos solicitada por el MINSA con fecha 05-05-2015  */               
/********************************************************************************/  

/********************************************************************************/                      
/* Modificado por: Miriam Flores */                      
/* Fecha: 04-08-2015 */                      
/* Detalle  : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx */               
/********************************************************************************/  

DECLARE @NumeroDocumento AS nvarchar(12)                      
--Envio de la informacion del cronograma futuro en formato CSV                      
 SET NOCOUNT ON                       
  SELECT  @NumeroDocumento = NumeroDocumento                       
  FROM CLIENTE C INNER JOIN PROCESO P                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                      
  WHERE Codigo_proceso = @Codigo_proceso                      
                       
DECLARE @CODIGO_CLIENTE_IBS AS INT                   
DECLARE @TIPO_CUOTA AS INT   

/* --modificado por estefani hghg-------
declare @DLMP INT,  @DLAP INT, @fecOrinigal char(8)
--declare @DLMP char(2),  @DLAP char(4), @fecOrinigal char(8)
--set @DLMP = SUBSTRING('00' + LTRIM(RTRIM(dlmp)) , LEN(LTRIM(RTRIM(dlmp))) + 1, 2 )
--set @DLAP = CONVERT(CHAR,dlap)
--select @fecOrinigal = @DLAP+ @DLMP+ '01' 

declare @DLMP_nuevo char(2)
declare @DLAP_nuevo char(4)
declare @fecha datetime
select @fecha = dateadd(month,-1,@fecOrinigal)
set @DLAP_nuevo = year(@fecha)
set @DLMP_nuevo = month(@fecha)*/

--fin modificacion                    
                  
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                  
GROUP BY DLCC                  
                  
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                  
            
          
IF @TIPO_CUOTA = 1                  
BEGIN              
  SELECT cast (    
 CASE WHEN @NumeroDocumento = '20483721553' THEN -- UNIDAD EJECUTORA 403 SALUD MORROPON CHULUCANA    
     '2525'    
    WHEN  @NumeroDocumento = '20483997541' THEN -- HOSPITAL DE APOYO DE CHULUCANAS    
     '2153'    
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN TRUJILLO  
          --'2024'    
       '2501'     
    END                      
    as varchar(4)                      
    )                       

+
(CASE WHEN @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN TRUJILLO  
--modifico Estefani Flores
	SUBSTRING('00' + LTRIM(RTRIM(dbo.F_Fecha_Mes_Anterior(DLAP,DLMP))) , LEN(LTRIM(RTRIM(dbo.F_Fecha_Mes_Anterior(DLAP,DLMP)))) + 1, 2 )                      
  + SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST (dbo.F_Fecha_Anio_Anterior(DLAP,DLMP) AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( dbo.F_Fecha_Anio_Anterior(DLAP,DLMP) AS VARCHAR(4)), 3, 2 )))) + 1, 2 )                      
   ELSE 
	SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )                      
  + SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )                      
  
END)



  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))                      
  + cast ( REPLACE ([DLNE], ',', '') as char(45))                        
  + cast (SUBSTRING(FINICRE,1,4) as char(4)) + '/' + cast (SUBSTRING(FINICRE,5,2) as char(2)) + '/' + cast (SUBSTRING(FINICRE,7,2) as char(2))    
  + SUBSTRING('   ' + LTRIM(RTRIM(CR.DLNCT)) , LEN(LTRIM(RTRIM(CR.DLNCT))) + 1 ,3 )                      
  + SUBSTRING('   ' + LTRIM(RTRIM(CNT.DLCNC1)) , LEN(LTRIM(RTRIM(CNT.DLCNC1))) + 1 ,3 )                 
  + SUBSTRING('         ' + LTRIM(RTRIM(DLIC)) , LEN(LTRIM(RTRIM(DLIC))) + 1 ,9 )                      
  + SUBSTRING('         ' + '0.00' , LEN('0.00') + 1 ,9 )     
  + RIGHT(LTRIM(RTRIM(CC.DLNP)),8)    
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                       
  INNER JOIN DLCNT CNT ON (CNT.DLCACC = CC.DLNP)                                                            
  left JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP AND CR.Codigo_proceso = cc.Codigo_proceso)    
 WHERE cc.Codigo_proceso = @Codigo_proceso                      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                      
    ELSE @situacionTrabajador END           
 AND DLIC >= 0                                      
 ORDER BY DLMO, [DLNE]       
          
END        
      
ELSE IF  @TIPO_CUOTA = 2                    
BEGIN        
  SELECT cast (    
 CASE WHEN @NumeroDocumento = '20483721553' THEN -- UNIDAD EJECUTORA 403 SALUD MORROPON CHULUCANA    
     '2525'    
    WHEN  @NumeroDocumento = '20483997541' THEN -- HOSPITAL DE APOYO DE CHULUCANAS    
    '2153'    
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN TRUJILLO  
     --'2024'    
       '2501'    
    END                      
    as varchar(4)                      
    )                       
 +
(CASE WHEN @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN TRUJILLO  
--modifico Estefani Flores
	SUBSTRING('00' + LTRIM(RTRIM(dbo.F_Fecha_Mes_Anterior(DLAP,DLMP))) , LEN(LTRIM(RTRIM(dbo.F_Fecha_Mes_Anterior(DLAP,DLMP)))) + 1, 2 )                      
  + SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST (dbo.F_Fecha_Anio_Anterior(DLAP,DLMP) AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( dbo.F_Fecha_Anio_Anterior(DLAP,DLMP) AS VARCHAR(4)), 3, 2 )))) + 1, 2 )                      
   ELSE 
	SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )                      
  + SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )                      
  
END)
           
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))                      
  + cast ( REPLACE ([DLNE], ',', '') as char(45))                        
  + cast (SUBSTRING(FINICRE,1,4) as char(4)) + '/' + cast (SUBSTRING(FINICRE,5,2) as char(2)) + '/' + cast (SUBSTRING(FINICRE,7,2) as char(2))    
  + SUBSTRING('   ' + LTRIM(RTRIM(CR.DLNCT)) , LEN(LTRIM(RTRIM(CR.DLNCT))) + 1 ,3 )                      
  + SUBSTRING('   ' + LTRIM(RTRIM(CNT.DLCNC1)) , LEN(LTRIM(RTRIM(CNT.DLCNC1))) + 1 ,3 )                 
  + SUBSTRING('         ' + LTRIM(RTRIM(CR.DLIMC)) , LEN(LTRIM(RTRIM(CR.DLIMC))) + 1 ,9 )                      
  + SUBSTRING('         ' + '0.00' , LEN('0.00') + 1 ,9 )     
  + RIGHT(LTRIM(RTRIM(CC.DLNP)),8)    
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                       
  INNER JOIN DLCNT CNT ON (CNT.DLCACC = CC.DLNP)                                                            
  INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP AND CR.Codigo_proceso = cc.Codigo_proceso)    
 WHERE cc.Codigo_proceso = @Codigo_proceso                      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                      
    ELSE @situacionTrabajador END           
 AND DLIC >= 0                                      
 ORDER BY DLMO, [DLNE]        
                       
END          
          
ELSE IF  @TIPO_CUOTA = 3              
BEGIN            
             
          
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'          
    INTO #TEMPO          
 FROM ClienteCuota CC          
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)          
 INNER JOIN HISTORICODLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso           
       AND CC.DLNP = CR.DLACC          
       AND(CONVERT(INT,          
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +           
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )           
        <           
        CONVERT(INT,          
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +           
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +           
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END          
        )          
        OR          
                  
        CONVERT(INT,          
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END          
        )          
        =    
        CONVERT(INT,          
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +           
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END           
        )          
      )          
 )          
 WHERE  DLIC >= 0   GROUP BY CR.DLACC          
    
  SELECT cast (    
 CASE WHEN @NumeroDocumento = '20483721553' THEN -- UNIDAD EJECUTORA 403 SALUD MORROPON CHULUCANA    
     '2525'    
    WHEN  @NumeroDocumento = '20483997541' THEN -- HOSPITAL DE APOYO DE CHULUCANAS    
     '2153'    
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN TRUJILLO  
         --'2024'    
       '2501'     
    END                      
    as varchar(4)                      
    )                       
 -- + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )                      
 -- + SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )                      
  +
(CASE WHEN @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN TRUJILLO  
--modifico Estefani Flores
	SUBSTRING('00' + LTRIM(RTRIM(dbo.F_Fecha_Mes_Anterior(DLAP,DLMP))) , LEN(LTRIM(RTRIM(dbo.F_Fecha_Mes_Anterior(DLAP,DLMP)))) + 1, 2 )                      
  + SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST (dbo.F_Fecha_Anio_Anterior(DLAP,DLMP) AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( dbo.F_Fecha_Anio_Anterior(DLAP,DLMP) AS VARCHAR(4)), 3, 2 )))) + 1, 2 )                      
   ELSE 
	SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )                      
  + SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )                      
  
END)

  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))                      
  + cast ( REPLACE ([DLNE], ',', '') as char(45))                        
  + cast (SUBSTRING(FINICRE,1,4) as char(4)) + '/' + cast (SUBSTRING(FINICRE,5,2) as char(2)) + '/' + cast (SUBSTRING(FINICRE,7,2) as char(2))    
  + SUBSTRING('   ' + LTRIM(RTRIM(CR.DLNCT)) , LEN(LTRIM(RTRIM(CR.DLNCT))) + 1 ,3 )                      
  + SUBSTRING('   ' + LTRIM(RTRIM(CNT.DLCNC1)) , LEN(LTRIM(RTRIM(CNT.DLCNC1))) + 1 ,3 )                 
  + SUBSTRING('         ' + LTRIM(RTRIM(T.CUOTA)) , LEN(LTRIM(RTRIM(T.CUOTA))) + 1 ,9 )                      
  + SUBSTRING('         ' + '0.00' , LEN('0.00') + 1 ,9 )     
  + RIGHT(LTRIM(RTRIM(CC.DLNP)),8)    
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                      
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                      
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                       
  INNER JOIN DLCNT CNT ON (CNT.DLCACC = CC.DLNP)                                                            
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)          
  LEFT JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP AND CR.Codigo_proceso = cc.Codigo_proceso)    
 WHERE cc.Codigo_proceso = @Codigo_proceso                      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                      
    ELSE @situacionTrabajador END           
 AND DLIC >= 0                                      
 ORDER BY DLMO, [DLNE]                                   
                       
DROP TABLE #TEMPO           
           
END          
          
END

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoMINSAText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

  
  
    
    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoMINSAText]           
@Codigo_proceso as uniqueidentifier,              
@situacionTrabajador as char ( 1 )               
AS BEGIN              
/********************************************************************************/              
/* Modificado por: AHSP        */              
/* Fecha Modif  : 2008/05/05       */              
/* Detalle  : Se necesita que el Mes sea el del periodo anterior y  */              
/*     modificar para el Hosp. Belen trujillo su Codigo a 2501 */              
/********************************************************************************/              
DECLARE @NumeroDocumento AS nvarchar(12)              
--Envio de la informacion del cronograma futuro en formato CSV              
 SET NOCOUNT ON               
  SELECT  @NumeroDocumento = NumeroDocumento               
  FROM CLIENTE C INNER JOIN PROCESO P               
    ON (C.Codigo_Cliente = P.Codigo_Cliente)              
  WHERE Codigo_proceso = @Codigo_proceso              
               
 --CREATE TABLE #TMP ( IDE AS INT IDENTITY (1, 1 ) , DATA AS CHAR(108)               
            
       
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
             
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))               
 WHERE [Codigo_proceso] = @Codigo_proceso              
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST              
    ELSE @situacionTrabajador END   
 AND DLIC >= 0             
               
 SET IDENTITY_INSERT #TMP ON               
 INSERT INTO #TMP ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP ORDER BY ORDEN   
  
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
                 
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP2              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))    
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 WHERE cc.[Codigo_proceso] = @Codigo_proceso              
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST              
    ELSE @situacionTrabajador END              
 AND DLIC >= 0  
               
 SET IDENTITY_INSERT #TMP2 ON               
 INSERT INTO #TMP2 ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP2)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP2 ORDER BY ORDEN            
    
  
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE  DLIC >= 0   GROUP BY CR.DLACC  
  
  
  SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD              
     '2024'--'2272'              
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN              
     '2028'          
    WHEN @NumeroDocumento = '20397867961' THEN -- utes 07 hOSPITAL DE aPOYO santiago de chuco          
     '2029'              
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4              
     '2024'              
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5              
     '2024'              
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO              
     '2501' --'2024'--'2211'              
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL              
     CASE WHEN [DLST] = 'A' THEN              
      '2029'              
     WHEN [DLST] = 'C' THEN               
      '2009'              
     ELSE               
      '2180'--'2023'         
     END             
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6              
     --'2024'              
     CASE WHEN [DLST] = 'A' THEN              
      '2184'              
     WHEN [DLST] = 'C' THEN               
      '2234'              
     ELSE               
      '2184' --TODO:VERIFICAR EL CASO CUANDO NO SON AMBOS (ACTIVOS Y CESANTES)              
     END              
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8              
     '2024'              
                 
              
    ELSE              
     'BIF'               
    END              
    as varchar(4)              
    )               
              
  + CASE when @NumeroDocumento = '20223149635' then        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 3)              
       END         
    ELSE        
      CASE               
     WHEN DLMP = 1 THEN  '12' +  RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1)), 2), 2)              
  ELSE   RIGHT('00'+ CONVERT(VARCHAR,DLMP - 1), 2) + RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR,DLAP)), 2), 2)              
       END              
    END        
  --+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )              
  --+ SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )              
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))              
  + --SUBSTRING('000000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  CASE WHEN @NumeroDocumento = '20223149635' then        
   SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 ) + '71'             
  ELSE        
  SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 )              
  END        
  AS DATA ,              
  ORDEN = IDENTITY(int, 1, 1)              
 INTO #TMP3              
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE               
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )              
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)              
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)              
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )              
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))    
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
 WHERE cc.[Codigo_proceso] = @Codigo_proceso              
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST              
    ELSE @situacionTrabajador END   
 AND DLIC >= 0             
               
 SET IDENTITY_INSERT #TMP3 ON               
 INSERT INTO #TMP3 ( DATA , ORDEN )               
               
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP3)            
             
 SET NOCOUNT OFF            
 --ORDER BY DLMO, [DLNE]            
 SELECT DATA FROM #TMP3 ORDER BY ORDEN            
    
  
DROP TABLE #TEMPO   
   
END  
  
end  
  

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoMUNLIMAText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20121119				*/
/* Observacion	: Cronograma para la Municipalidad de Lima		*/
/*     		: 			 				*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoMUNLIMAText]          
@Codigo_proceso		AS UNIQUEIDENTIFIER,
@SituacionTrabajador	AS CHAR(2)
AS                
BEGIN      

SET NOCOUNT ON

DECLARE	@NumeroDocumento	AS NVARCHAR(12)
DECLARE	@Codigo_Cliente		AS INT

SELECT	@NumeroDocumento= C.NumeroDocumento, 
	@Codigo_Cliente	= C.Codigo_Cliente  
FROM	Cliente C 
	INNER JOIN Proceso P ON (C.Codigo_Cliente = P.Codigo_Cliente) 
WHERE	P.Codigo_proceso = @Codigo_proceso

DECLARE @Codigo_Cliente_IBS	AS INT       
DECLARE @Tipo_Cuota		AS INT      
      
SELECT TOP 1 @Codigo_Cliente_IBS = DLCC FROM CLIENTECUOTA WHERE Codigo_proceso = @Codigo_proceso GROUP BY DLCC      
      
SELECT	@TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @Codigo_Cliente_IBS      

IF @TIPO_CUOTA = 1        
BEGIN

	SELECT 	DLNP		AS 'Pagare',
		DLDNI		AS 'DNI',
		CC.DLNE		AS 'Nombre',
		CC.DLST		AS 'Estado',
		RTRIM(CC.DLMO)  AS 'Moneda',
		CRE.DLOAM	AS 'Monto_Original',
		CNT.DLCNC1	AS 'Plazo',
		CC.DLIC		AS 'Cuota',
		FechaCargoCuenta = MIN(RIGHT('00' + CONVERT(VARCHAR, DLVCD), 2) + '/' + RIGHT('00' + CONVERT(VARCHAR, DLVCM), 2) + '/' + CONVERT(VARCHAR(4),2000 + DLVCA))
	FROM	CLIENTECUOTA CC
	INNER JOIN DLCRE CRE ON (CC.DLCC =  CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)
	INNER JOIN DLCNT CNT ON (CNT.DLCACC = CC.DLNP)
	LEFT  JOIN HistoricoDLCCR HCCR ON (HCCR.DLACC = CC.DLNP AND HCCR.[Codigo_proceso] = cc.[Codigo_proceso] AND CNT.DLCACC = CC.DLNP)
	WHERE 	CC.[Codigo_proceso] =  @Codigo_proceso AND DLIC >= 0
	GROUP BY DLNP, CRE.DLCUN,CRE.DLCEM, CC.DLNE, CRE.DLOAM, CRE.DLPRI, CNT.DLCNC1,CC.DLCR,
		CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO  , CC.NUMCUOTAS,
		CC.DLST, CC.DLMO , CC.DLAG, CRE.DLCTA, CRE.DLDNI
	ORDER BY DLCTA, DLNE ,DLST

END
ELSE IF  @TIPO_CUOTA = 2
BEGIN
	SELECT	DLNP		AS 'Pagare',
		DLDNI		AS 'DNI',
		CC.DLNE		AS 'Nombre',
		CC.DLST		AS 'Estado',
		RTRIM(CC.DLMO) 	AS 'Moneda',
		CRE.DLOAM	AS 'Monto_Original',
		CNT.DLCNC1	AS 'Plazo',
		CR.DLIMC 	AS 'Cuota',
		FechaCargoCuenta = MIN(RIGHT('00' + CONVERT(VARCHAR, HCCR.DLVCD), 2) + '/' + RIGHT('00' + CONVERT(VARCHAR, CC.DLMP), 2) + '/' + CONVERT(VARCHAR, CC.DLAP))
	FROM	CLIENTECUOTA CC
	INNER JOIN DLCRE 	  CRE 	ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)
	INNER JOIN DLCNT 	  CNT 	ON (CNT.DLCACC = CC.DLNP)
	LEFT  JOIN HistoricoDLCCR HCCR 	ON (HCCR.DLACC = CC.DLNP AND HCCR.[Codigo_proceso] = CC.[Codigo_proceso] AND CNT.DLCACC = CC.DLNP)
	INNER JOIN DLCCR 	  CR 	ON (CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP )
	WHERE	CC.[Codigo_proceso] = @codigo_proceso AND DLIC >= 0
	GROUP BY DLNP, CRE.DLCUN,CRE.DLCEM, CC.DLNE, CRE.DLOAM, CRE.DLPRI,
		CNT.DLCNC1,CC.DLCR,CR.DLIMC, 
		CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO,   CC.NUMCUOTAS,
		CC.DLST, CC.DLMO , CC.DLAG, CRE.DLCTA, CRE.DLDNI
	ORDER BY DLCTA, DLNE ,DLST
		
END
ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   
	SELECT	CR.DLACC 'PAGARE',
		SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
	INTO	#TEMPO
	FROM	ClienteCuota CC
	INNER JOIN PROCESO P ON CC.CODIGO_PROCESO = P.CODIGO_PROCESO
	INNER JOIN DLCCR  CR ON CC.CODIGO_PROCESO = @Codigo_proceso AND CC.DLNP = CR.DLACC AND
				( 
				  (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCD), 2)) < CONVERT(VARCHAR(6), GETDATE(), 12)) OR
				  (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2)) = RIGHT(CONVERT(VARCHAR(6), GETDATE(), 12), 4))
				)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	SELECT	DLNP		AS 'Pagare',
		DLDNI		AS 'DNI',
		CC.DLNE		AS 'Nombre',
		CC.DLST		AS 'Estado',
		RTRIM(CC.DLMO)	AS 'Moneda',
		CRE.DLOAM	AS 'Monto_Original',
		CNT.DLCNC1	AS 'Plazo',
		T.CUOTA		AS 'Cuota',
		FechaCargoCuenta = MIN( RIGHT('00' + CONVERT(VARCHAR, HCCR.DLVCD), 2) + '/' + RIGHT('00' + CONVERT(VARCHAR, CC.DLMP), 2) + '/' + CONVERT(VARCHAR, CC.DLAP) )
	FROM	CLIENTECUOTA CC
	INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)
	INNER JOIN DLCNT CNT ON (CNT.DLCACC = CC.DLNP)
	LEFT  JOIN HistoricoDLCCR HCCR ON ( HCCR.DLACC = CC.DLNP AND HCCR.Codigo_proceso = CC.Codigo_proceso AND CNT.DLCACC = CC.DLNP)
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE CC.Codigo_proceso = @Codigo_proceso AND DLIC >= 0
	GROUP BY DLNP, CRE.DLCUN,CRE.DLCEM, CC.DLNE, CRE.DLOAM, CRE.DLPRI,
		CNT.DLCNC1,CC.DLCR, 
		CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO, CC.NUMCUOTAS,
		CC.DLST, CC.DLMO , CC.DLAG, CRE.DLCTA, CRE.DLDNI ,T.CUOTA
	ORDER BY GP, DLCTA, DLNE ,DLST

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoNUEVO1Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoNUEVO1Text]                                

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN  ---1                          
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN --2                      
                      
 SELECT 
								
								
DLNP AS PAGARE,
DLNE AS CLIENTE,
CASE
                         WHEN LEN(DLEDEN)=1 THEN '0' + CONVERT(VARCHAR,DLEDEN)
                        WHEN LEN(DLEDEN)=2 THEN CONVERT(VARCHAR,DLEDEN)
                        ELSE CONVERT(VARCHAR,DLEDEN)
            END + '/' +
            CASE  
                        WHEN LEN(DLMP)=1 THEN '0' + CONVERT(VARCHAR,DLMP)
                        WHEN LEN(DLMP)=2 THEN CONVERT(VARCHAR,DLMP)
                        ELSE CONVERT(VARCHAR,DLMP)
            END + '/' +
            CASE
                        WHEN LEN(DLAP)=1 THEN '0' + CONVERT(VARCHAR,DLAP)
                        WHEN LEN(DLAP)=2 THEN CONVERT(VARCHAR,DLAP)
                        ELSE CONVERT(VARCHAR,DLAP)
            END AS FECHAVENCIMIENTO,


CuotaPactadas AS NUMEROCUOTAS,
DLIC AS CUOTA,
CuotaPactadas*DLIC AS CAPITAL_INTERESES

  

 FROM CLIENTECUOTA CC LEFT JOIN DLCRE CRE 
 
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP)) LEFT JOIN DLEMP ON DLCC=DLECUN
 
WHERE CC.CODIGO_PROCESO= @CODIGO_PROCESO  AND DLST =CASE WHEN RTRIM( @SITUACIONTRABAJADOR ) = '-' THEN DLST    
    ELSE @SITUACIONTRABAJADOR END  AND NROTIPOCREDITO<> 1      
  END --2               
 
                    
                
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN  --3                       
                       
 
  SELECT 
								
DLNP AS PAGARE,
DLNE AS CLIENTE,
CASE
                        WHEN LEN(DLEDEN)=1 THEN '0' + CONVERT(VARCHAR,DLEDEN)
                        WHEN LEN(DLEDEN)=2 THEN CONVERT(VARCHAR,DLEDEN)
                        ELSE CONVERT(VARCHAR,DLEDEN)
            END + '/' +
            CASE  
                        WHEN LEN(DLMP)=1 THEN '0' + CONVERT(VARCHAR,DLMP)
                        WHEN LEN(DLMP)=2 THEN CONVERT(VARCHAR,DLMP)
                        ELSE CONVERT(VARCHAR,DLMP)
            END + '/' +
            CASE
                        WHEN LEN(DLAP)=1 THEN '0' + CONVERT(VARCHAR,DLAP)
                        WHEN LEN(DLAP)=2 THEN CONVERT(VARCHAR,DLAP)
                        ELSE CONVERT(VARCHAR,DLAP)
            END AS FECHAVENCIMIENTO,

CuotaPactadas AS NUMEROCUOTAS,

CR.DLIMC AS CUOTA,
CuotaPactadas*CR.DLIMC AS CAPITAL_INTERESES

  

FROM CLIENTECUOTA CC  LEFT JOIN DLCRE CRE 
 
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP)) 
   INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP ) 
 LEFT JOIN DLEMP ON DLCC=DLECUN
 
WHERE CC.CODIGO_PROCESO= @CODIGO_PROCESO  AND DLST =CASE WHEN RTRIM( @SITUACIONTRABAJADOR ) = '-' THEN DLST    
    ELSE @SITUACIONTRABAJADOR END AND NROTIPOCREDITO<> 1 
 
                    
   END--3
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN --4                       
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      

 
  BEGIN   -- 5                            
                              
  SELECT 
DLNP AS PAGARE,
DLNE AS CLIENTE,
CASE  
						WHEN LEN(DLEDEN)=1 THEN '0' + CONVERT(VARCHAR,DLEDEN)
                        WHEN LEN(DLEDEN)=2 THEN CONVERT(VARCHAR,DLEDEN)
                        ELSE CONVERT(VARCHAR,DLEDEN)
            END + '/' +
            CASE  
                        WHEN LEN(DLMP)=1 THEN '0' + CONVERT(VARCHAR,DLMP)
                        WHEN LEN(DLMP)=2 THEN CONVERT(VARCHAR,DLMP)
                        ELSE CONVERT(VARCHAR,DLMP)
            END + '/' +
            CASE
                        WHEN LEN(DLAP)=1 THEN '0' + CONVERT(VARCHAR,DLAP)
                        WHEN LEN(DLAP)=2 THEN CONVERT(VARCHAR,DLAP)
                        ELSE CONVERT(VARCHAR,DLAP)
            END AS FECHAVENCIMIENTO,

CuotaPactadas AS NUMEROCUOTAS,
 T.CUOTA  AS CUOTA,
CuotaPactadas * T.CUOTA AS CAPITAL_INTERESES

  


FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
   --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                       
   INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP) LEFT JOIN
   DLEMP ON DLCC=DLECUN                     
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)                                      
  WHERE Codigo_proceso = @Codigo_proceso)                      
   AND DLIC >= 0 AND NROTIPOCREDITO<> 1                             
   ORDER BY DLMO, [DLNE]     

 END--4   
  DROP TABLE #TEMPO                   
 END--5  
 
                      
                      

                    
END   --1  



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoNUEVO2Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoNUEVO2Text]                                

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN  ---1                          
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN --2                      
                      
 SELECT 
								
								
DLNP AS PAGARE,
DLNE AS CLIENTE,
CASE
                         WHEN LEN(DLEDEN)=1 THEN '0' + CONVERT(VARCHAR,DLEDEN)
                        WHEN LEN(DLEDEN)=2 THEN CONVERT(VARCHAR,DLEDEN)
                        ELSE CONVERT(VARCHAR,DLEDEN)
            END + '/' +
            CASE  
                        WHEN LEN(DLMP)=1 THEN '0' + CONVERT(VARCHAR,DLMP)
                        WHEN LEN(DLMP)=2 THEN CONVERT(VARCHAR,DLMP)
                        ELSE CONVERT(VARCHAR,DLMP)
            END + '/' +
            CASE
                        WHEN LEN(DLAP)=1 THEN '0' + CONVERT(VARCHAR,DLAP)
                        WHEN LEN(DLAP)=2 THEN CONVERT(VARCHAR,DLAP)
                        ELSE CONVERT(VARCHAR,DLAP)
            END AS FECHAVENCIMIENTO,


CuotaPactadas AS NUMEROCUOTAS,
DLIC AS CUOTA,
CuotaPactadas*DLIC AS CAPITAL_INTERESES

  

 FROM CLIENTECUOTA CC LEFT JOIN DLCRE CRE 
 
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP)) LEFT JOIN DLEMP ON DLCC=DLECUN
 
WHERE CC.CODIGO_PROCESO= @CODIGO_PROCESO  AND DLST =CASE WHEN RTRIM( @SITUACIONTRABAJADOR ) = '-' THEN DLST    
    ELSE @SITUACIONTRABAJADOR END  AND NROTIPOCREDITO= 1   
  END --2               
 
                    
                
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN  --3                       
                       
 
  SELECT 
								
DLNP AS PAGARE,
DLNE AS CLIENTE,
CASE
                        WHEN LEN(DLEDEN)=1 THEN '0' + CONVERT(VARCHAR,DLEDEN)
                        WHEN LEN(DLEDEN)=2 THEN CONVERT(VARCHAR,DLEDEN)
                        ELSE CONVERT(VARCHAR,DLEDEN)
            END + '/' +
            CASE  
                        WHEN LEN(DLMP)=1 THEN '0' + CONVERT(VARCHAR,DLMP)
                        WHEN LEN(DLMP)=2 THEN CONVERT(VARCHAR,DLMP)
                        ELSE CONVERT(VARCHAR,DLMP)
            END + '/' +
            CASE
                        WHEN LEN(DLAP)=1 THEN '0' + CONVERT(VARCHAR,DLAP)
                        WHEN LEN(DLAP)=2 THEN CONVERT(VARCHAR,DLAP)
                        ELSE CONVERT(VARCHAR,DLAP)
            END AS FECHAVENCIMIENTO,

CuotaPactadas AS NUMEROCUOTAS,

CR.DLIMC AS CUOTA,
CuotaPactadas*CR.DLIMC AS CAPITAL_INTERESES
  

FROM CLIENTECUOTA CC  LEFT JOIN DLCRE CRE 
 
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP)) 
   INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP ) 
 LEFT JOIN DLEMP ON DLCC=DLECUN
 
WHERE CC.CODIGO_PROCESO= @CODIGO_PROCESO  AND DLST =CASE WHEN RTRIM( @SITUACIONTRABAJADOR ) = '-' THEN DLST    
    ELSE @SITUACIONTRABAJADOR END AND NROTIPOCREDITO= 1   
 
                    
   END--3
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN --4                       
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      

 
  BEGIN   -- 5                            
                              
  SELECT 
DLNP AS PAGARE,
DLNE AS CLIENTE,
CASE  
						WHEN LEN(DLEDEN)=1 THEN '0' + CONVERT(VARCHAR,DLEDEN)
                        WHEN LEN(DLEDEN)=2 THEN CONVERT(VARCHAR,DLEDEN)
                        ELSE CONVERT(VARCHAR,DLEDEN)
            END + '/' +
            CASE  
                        WHEN LEN(DLMP)=1 THEN '0' + CONVERT(VARCHAR,DLMP)
                        WHEN LEN(DLMP)=2 THEN CONVERT(VARCHAR,DLMP)
                        ELSE CONVERT(VARCHAR,DLMP)
            END + '/' +
            CASE
                        WHEN LEN(DLAP)=1 THEN '0' + CONVERT(VARCHAR,DLAP)
                        WHEN LEN(DLAP)=2 THEN CONVERT(VARCHAR,DLAP)
                        ELSE CONVERT(VARCHAR,DLAP)
            END AS FECHAVENCIMIENTO,

CuotaPactadas AS NUMEROCUOTAS,
 T.CUOTA  AS CUOTA,
CuotaPactadas * T.CUOTA AS CAPITAL_INTERESES
  


FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
   --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                       
   INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP) LEFT JOIN
   DLEMP ON DLCC=DLECUN                     
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)                                      
  WHERE Codigo_proceso = @Codigo_proceso)                      
   AND DLIC >= 0   AND NROTIPOCREDITO = 1                              
   ORDER BY DLMO, [DLNE]     

 END--4   
  DROP TABLE #TEMPO                   
 END--5  
 
                      
                      

                    
END   --1  



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoNUEVOText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoNUEVOText]                                

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN  ---1                          
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN --2                      
                      
 SELECT 
								
DLNP AS PAGARE,
DLNE AS CLIENTE,
MONTOORIGINAL
, CRE.DLPRI AS SALDOACTUAL,
CUOTAPACTADAS AS NUMEROCUOTASPACTADAS,
CUOTAPAGADAS AS NUMEROCUOTASPAGADAS,
CUOTAPENDIENTES AS NUMEROCUOTASPENDIENTES
,convert(char(8),FECHACARGO,103) AS FECHACARGO,
DLIC AS CUOTA,
CASE WHEN NROTIPOCREDITO = 1 THEN -- TIPO CEDITO ES NUEVO                                  
				'NUEVO'    
				ELSE CASE WHEN      
				 NROTIPOCREDITO = 2 THEN      
				'RENOVADO'      
				 ELSE CASE WHEN  NROTIPOCREDITO = 3 THEN      
				' '      
				 ELSE          
				' '      
				END  END END AS OBSERVACION
  

 FROM CLIENTECUOTA CC LEFT JOIN DLCRE CRE 
 
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP)) 
WHERE CC.CODIGO_PROCESO= @CODIGO_PROCESO  AND DLST =CASE WHEN RTRIM( @SITUACIONTRABAJADOR ) = '-' THEN DLST    
    ELSE @SITUACIONTRABAJADOR END    
  END --2               
 
                    
                
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN  --3                       
                       
 
  SELECT 
								
DLNP AS PAGARE,
DLNE AS CLIENTE,
MONTOORIGINAL
, CRE.DLPRI AS SALDOACTUAL,
CUOTAPACTADAS AS NUMEROCUOTASPACTADAS,
CUOTAPAGADAS AS NUMEROCUOTASPAGADAS,
CUOTAPENDIENTES AS NUMEROCUOTASPENDIENTES
,convert(char(8),FECHACARGO,103) AS FECHACARGO,
CR.DLIMC AS CUOTA,
CASE WHEN NROTIPOCREDITO = 1 THEN -- TIPO CEDITO ES NUEVO                                  
				'NUEVO'    
				ELSE CASE WHEN      
				 NROTIPOCREDITO = 2 THEN      
				'RENOVADO'      
				 ELSE CASE WHEN  NROTIPOCREDITO = 3 THEN      
				' '      
				 ELSE          
				' '      
				END  END END AS OBSERVACION
FROM CLIENTECUOTA CC  LEFT JOIN DLCRE CRE 
 
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP)) 
   INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP ) 
 
 
WHERE CC.CODIGO_PROCESO= @CODIGO_PROCESO  AND DLST =CASE WHEN RTRIM( @SITUACIONTRABAJADOR ) = '-' THEN DLST    
    ELSE @SITUACIONTRABAJADOR END 
 
                    
   END--3
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN --4                       
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      

 
  BEGIN   -- 5                            
                              
  SELECT 
  DLNP AS PAGARE,
DLNE AS CLIENTE,
MONTOORIGINAL
, CRE.DLPRI AS SALDOACTUAL,
CUOTAPACTADAS AS NUMEROCUOTASPACTADAS,
CUOTAPAGADAS AS NUMEROCUOTASPAGADAS,
CUOTAPENDIENTES AS NUMEROCUOTASPENDIENTES
,convert(char(8),FECHACARGO,103) AS FECHACARGO,
 T.CUOTA  AS CUOTA,
  
CASE WHEN NROTIPOCREDITO = 1 THEN -- TIPO CEDITO ES NUEVO                                  
				'NUEVO'    
				ELSE CASE WHEN      
				 NROTIPOCREDITO = 2 THEN      
				'RENOVADO'      
				 ELSE CASE WHEN  NROTIPOCREDITO = 3 THEN      
				' '      
				 ELSE          
				' '      
				END  END END AS OBSERVACION

                                 
        
FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
   --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                       
   INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)                                      
  WHERE Codigo_proceso = @Codigo_proceso)                      
   AND DLIC >= 0                                 
   ORDER BY DLMO, [DLNE]     

 END--4   
  DROP TABLE #TEMPO                   
 END--5  
 
                      
                      

                    
END   --1  



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoPesqueraText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoPesqueraText]                                

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              

 BEGIN  -- 1                      
                                  
 SELECT                                       
                                  
 Pagare = ''''+cast([DLNP] as varchar(12)),                                      
 Nombre = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MontoCuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
 FechaVencimiento =  FORMAT(FechaCargo,'dd/MM/yyyy')                
                        
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
 WHERE [Codigo_proceso] = @Codigo_proceso                                    
 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
   ELSE @situacionTrabajador END                                      
    AND DLIC >= 0                   
 ORDER BY DLMO, [DLNE]                       
                          
                
END  --- FIN 1                      
                      
ELSE IF  @TIPO_CUOTA = 2                          

 BEGIN   -- 1                             
                              
  SELECT                                    
 
  Pagare = ''''+cast([DLNP] as varchar(12)),                                      
 Nombre = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MontoCuota = CR.DLIMC  ,                 
 FechaVencimiento =  FORMAT(FechaCargo,'dd/MM/yyyy')      
  
  
  
                                      
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] =@Codigo_proceso                                    
 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0                                      
  ORDER BY DLMO, [DLNE]                                      
                        
 END   -- FIN 1                               
                                    
              
                      
                    
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      
 
  BEGIN   -- 1                             
                              
  SELECT 
 Pagare = ''''+cast([DLNP] as varchar(12)),                                      
 Nombre = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MontoCuota =T.CUOTA  ,                 
 FechaVencimiento =  FORMAT(FechaCargo,'dd/MM/yyyy')      
		                
                                   
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
 ELSE @situacionTrabajador END                                      
  AND DLIC >= 0                                     
  ORDER BY DLMO, [DLNE]                                      
              
 END   -- FIN 1                               
                                    
        
                            
                          
                      
                      
 DROP TABLE #TEMPO                      
                      
END                      
                      
END

-- INSERTAR DATOS EN TABLA FORMATO CLIENTE
insert into [dbo].[FormatoArchivoCliente] ( Codigo_Cliente, DescripcionFormatoArchivo,FormatoArchivo
, TipoFormatoArchivo, ValorAsociado)
Values (190827943, 'FormatoNuevo1', 'Pesquera','xls2',NULL )
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoPETROPERUEmpleadosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

  
  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoPETROPERUEmpleadosText]    
@Codigo_proceso  as Uniqueidentifier,    
@SituacionTrabajador  as char ( 1 )    
AS    
BEGIN    
  
  
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        




IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT FICHA    = RIGHT('00000' + ISNULL(DLCM, ''), 5) ,    
	[NOMBRE Y APELLIDOS]  = DLNE    ,    
	ROL      = SUBSTRING ( DLCR, 1, 2 ) ,    
	[IMPORTE DE CUOTA] = DLIC    
	FROM ClienteCuota CC     
	WHERE [Codigo_proceso] = @Codigo_proceso    
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	AND DLIC >= 0     
	AND SUBSTRING ( DLCR, 1, 2 ) = '39' -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
    
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   
	SELECT FICHA    = RIGHT('00000' + ISNULL(DLCM, ''), 5) ,    
	[NOMBRE Y APELLIDOS]  = DLNE    ,    
	ROL      = SUBSTRING ( DLCR, 1, 2 ) ,    
	[IMPORTE DE CUOTA] = CR.DLIMC  
	FROM ClienteCuota CC     
	INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	WHERE cc.[Codigo_proceso] = @Codigo_proceso    
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	AND DLIC >= 0     
	AND SUBSTRING ( DLCR, 1, 2 ) = '39' -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
    
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	SELECT FICHA    = RIGHT('00000' + ISNULL(DLCM, ''), 5) ,    
	[NOMBRE Y APELLIDOS]  = DLNE    ,    
	ROL      = SUBSTRING ( DLCR, 1, 2 ) ,    
	[IMPORTE DE CUOTA] = T.CUOTA  
	FROM ClienteCuota CC     
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	WHERE cc.[Codigo_proceso] = @Codigo_proceso    
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	AND DLIC >= 0     
	AND SUBSTRING ( DLCR, 1, 2 ) = '39' -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    


	DROP TABLE #TEMPO

END

end



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoPETROPERULimaText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoPETROPERULimaText]     
@Codigo_proceso  as Uniqueidentifier,      
@SituacionTrabajador  as char ( 1 )      
AS      
BEGIN      
     
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 

   SELECT FICHA    = RIGHT('00000' + ISNULL(DLCM, ''), 5) ,      
   [NOMBRE Y APELLIDOS]  = DLNE    ,      
   ROL      = SUBSTRING ( DLCR, 1, 2 ) ,      
  [IMPORTE DE CUOTA] = DLIC      
 FROM ClienteCuota CC       
 WHERE [Codigo_proceso] = @Codigo_proceso      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END      
 AND DLIC >= 0       
 AND SUBSTRING ( DLCR, 1, 2 ) = '42'    
  

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT FICHA    = RIGHT('00000' + ISNULL(DLCM, ''), 5) ,      
   [NOMBRE Y APELLIDOS]  = DLNE    ,      
   ROL      = SUBSTRING ( DLCR, 1, 2 ) ,      
  [IMPORTE DE CUOTA] = CR.DLIMC  
 FROM ClienteCuota CC       
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE cc.[Codigo_proceso] = @Codigo_proceso      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END      
 AND DLIC >= 0       
 AND SUBSTRING ( DLCR, 1, 2 ) = '42'    
  
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	
	SELECT FICHA    = RIGHT('00000' + ISNULL(DLCM, ''), 5) ,      
	[NOMBRE Y APELLIDOS]  = DLNE    ,      
	ROL      = SUBSTRING ( DLCR, 1, 2 ) ,      
	[IMPORTE DE CUOTA] = T.CUOTA
	FROM ClienteCuota CC       
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE cc.[Codigo_proceso] = @Codigo_proceso      
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END      
	AND DLIC >= 0       
	AND SUBSTRING ( DLCR, 1, 2 ) = '42'    
  

	DROP TABLE #TEMPO

END

end
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoPETROPERUSupervisoresText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoPETROPERUSupervisoresText]    
@Codigo_proceso  as Uniqueidentifier,    
@SituacionTrabajador  as char ( 1 )    
AS    
BEGIN    
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 
	 SELECT FICHA    = RIGHT('00000' + ISNULL(DLCM, ''), 5) ,    
   [NOMBRE Y APELLIDOS]  = DLNE    ,    
   ROL      = SUBSTRING ( DLCR, 1, 2 ) ,    
  [IMPORTE DE CUOTA] = DLIC    
 FROM ClienteCuota CC     
 WHERE [Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
 AND DLIC >= 0     
 AND SUBSTRING ( DLCR, 1, 2 ) = '47' -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT FICHA    = RIGHT('00000' + ISNULL(DLCM, ''), 5) ,    
   [NOMBRE Y APELLIDOS]  = DLNE    ,    
   ROL      = SUBSTRING ( DLCR, 1, 2 ) ,    
  [IMPORTE DE CUOTA] = CR.DLIMC    
 FROM ClienteCuota CC     
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE cc.[Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
 AND DLIC >= 0     
 AND SUBSTRING ( DLCR, 1, 2 ) = '47' -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	SELECT FICHA    = RIGHT('00000' + ISNULL(DLCM, ''), 5) ,    
	[NOMBRE Y APELLIDOS]  = DLNE    ,    
	ROL      = SUBSTRING ( DLCR, 1, 2 ) ,    
	[IMPORTE DE CUOTA] = T.CUOTA
	FROM ClienteCuota CC     
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	WHERE cc.[Codigo_proceso] = @Codigo_proceso    
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	AND DLIC >= 0     
	AND SUBSTRING ( DLCR, 1, 2 ) = '47' -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    


	DROP TABLE #TEMPO

END

end
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoPETROPERUText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoPETROPERUText]    
@Codigo_proceso  as Uniqueidentifier,    
@SituacionTrabajador  as char ( 1 )    
AS    
BEGIN    
  
       
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        




IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT FICHA = RIGHT('00000' + ISNULL(DLCM, ''), 5),    
  [NOMBRE Y APELLIDOS] = DLNE,    
  ROL   = CASE WHEN LEN ( LTRIM(RTRIM(DLCR)) )>2  THEN    
   SUBSTRING ( DLCR, 1, 2 )    
  ELSE '' END,    
 [IMPORTE DE CUOTA] = DLIC    
 FROM ClienteCuota CC     
 WHERE [Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT FICHA = RIGHT('00000' + ISNULL(DLCM, ''), 5),    
  [NOMBRE Y APELLIDOS] = DLNE,    
  ROL   = CASE WHEN LEN ( LTRIM(RTRIM(DLCR)) )>2  THEN    
   SUBSTRING ( DLCR, 1, 2 )    
  ELSE '' END,    
 [IMPORTE DE CUOTA] = CR.DLIMC    
 FROM ClienteCuota CC     
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE cc.[Codigo_proceso] = @Codigo_proceso    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
 AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	SELECT FICHA = RIGHT('00000' + ISNULL(DLCM, ''), 5),    
	[NOMBRE Y APELLIDOS] = DLNE,    
	ROL   = CASE WHEN LEN ( LTRIM(RTRIM(DLCR)) )>2  THEN    
	SUBSTRING ( DLCR, 1, 2 )    
	ELSE '' END,    
	[IMPORTE DE CUOTA] = T.CUOTA    
	FROM ClienteCuota CC     
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE cc.[Codigo_proceso] = @Codigo_proceso    
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	AND DLIC >= 0 -- RESPINOZA 20070613 - DE ACUERDO A LO CONVERSADO CON PCHAVEZ LOS REGISTROS CON SOBREPAGO NO DEBEN DE IR    
  
  
	DROP TABLE #TEMPO

END


END
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoPRNMinsaPensionistasYNombradosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoPRNMinsaPensionistasYNombradosText]
@Codigo_proceso  as Uniqueidentifier,
@SituacionTrabajador  as char ( 1 )
AS
BEGIN
	DECLARE @FECHAPERIODO DATE,@MESPERIODO VARCHAR(2),@ANIOPERIODO VARCHAR(4)

	SELECT @FECHAPERIODO =DATEFROMPARTS(P.ANIO_PERIODO,P.MES_PERIODO,1) FROM PROCESO P WHERE CODIGO_PROCESO=@Codigo_proceso 

	SET @ANIOPERIODO=RIGHT(CAST(DATEPART(YEAR,DATEADD(MONTH,-1,@FECHAPERIODO)) AS VARCHAR),2) 
	SET @MESPERIODO=DATEPART(MONTH,DATEADD(MONTH,-1,@FECHAPERIODO)) 
	SET @MESPERIODO= CASE LEN(@MESPERIODO) WHEN 1 THEN '0'+@MESPERIODO ELSE @MESPERIODO END


	SELECT CASE ISNULL(LEN(CLI.CODIGO_INSTITUCION),0) WHEN 0 THEN '0000' ELSE CLI.CODIGO_INSTITUCION END +@MESPERIODO+@ANIOPERIODO AS CODIGO,	
	LEFT(RE.DLDNI+SPACE(8),8) AS DNI, 
	LEFT((DLPA+' '+DLMA+' '+LEFT(DLMN,CASE WHEN CHARINDEX(' ',DLMN)>0 THEN CHARINDEX(' ',DLMN) ELSE LEN(DLMN) END ))+REPLICATE(' ',45),45) NombreTrabajador,
	CONVERT(VARCHAR,CC.FechaDesembolso,111) AS FechaDesembolso,
	--RIGHT(REPLICATE(' ',3)+CAST(CC.CuotaPagadas+1 AS VARCHAR),3) AS NumeroCuota,
	RIGHT(REPLICATE(' ',3)+CAST((CAST(CC.CuotaPagadas AS INT)+CAST(CC.NUMCUOTAS AS INT)) AS VARCHAR),3) AS NumeroCuota,
	RIGHT(REPLICATE(' ',3)+CAST(CC.CuotaPactadas AS VARCHAR),3) AS Plazos,
	--RIGHT(REPLICATE(' ',9)+CAST(CC.DLIC AS VARCHAR),9) AS Cuota,
	RIGHT(REPLICATE(' ',9)+CAST(CONVERT(DECIMAL(18,2),ISNULL(CR.DLIMC,0)) AS VARCHAR),9) AS Cuota,
	RIGHT(REPLICATE(' ',9)+'0.00',9) AS Aporte,
	--RIGHT(REPLICATE(' ',9)+CAST(CC.CuotaPactadas*CC.DeudaPeriodo AS VARCHAR),9) AS TotalPrestamo,
	RIGHT(REPLICATE(' ',9)+CAST(CC.CuotaPactadas*CR.DLIMC AS VARCHAR),9) AS TotalPrestamo,
	RIGHT(CC.DLNP,8) AS NumeroOperacion
	FROM [ClienteCuota] CC
	INNER JOIN CLIENTE CLI ON CLI.CODIGO_IBS=CC.DLCC
	INNER JOIN DLCRE RE ON RE.DLACC=CC.DLNP
	INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP) 
	WHERE  CC.[Codigo_proceso] =@Codigo_proceso
	AND (LEFT(CC.DLCR,2) IN ('RE','IN','PE','NO') OR LEN(CC.DLCR)=0)
	--AND CC.DLST IN('A','C') 
	AND CLI.CODIGO_INSTITUCION IS NOT NULL AND LEN (CLI.CODIGO_INSTITUCION)>0
	ORDER BY CC.DLPA ASC
END 

-- [dbo].[CronogramaFuturoPRNMinsaPensionistasYNombradosText] -- FIN

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoReporte2028TEXT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
                      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoReporte2028TEXT]                                
@Codigo_proceso as uniqueidentifier,                                      
@situacionTrabajador as char ( 2 )                                       
AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      
 SET NOCOUNT ON                                       
  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
    ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                           
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                    
                      
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
 	IF(@codigo_cliente = 190829420)
		BEGIN
		
		SELECT 
		    '2028'+
                 
  CONVERT(VARCHAR,
  CASE               
     WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
      
    RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2))
	
	 
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLic, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 

		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
			 AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
			 --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
			 AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
			 AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))   
			 left JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                       
	 WHERE cc.Codigo_proceso = @Codigo_proceso    and CRE.DLCUS= 'RE'                                 
	 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
		ELSE @situacionTrabajador END                                      
		AND DLIC >= 0                   
ORDER BY  DLNE ASC                   
		END
      ---   SELECT*FROM CLIENTECUOTA WHERE DLNP=233130322472             
END  --- FIN 1  
                        
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN         
----PRUEBAAAAA cuota 2 ---ESTEFANI FLORES COD=190828945 NUEVO FORMATO 
   	IF(@codigo_cliente = 190829420)
		BEGIN
		
		SELECT 
		    '2028'+
                 
  CONVERT(VARCHAR,
  CASE               
    WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
      
    RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2))
	
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso       AND   CRE.DLCUS= 'RE'       AND                             
  DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0  
                              
ORDER BY  DLNE ASC                    
	 
		END
   
END  --2                    
               
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                            
   	IF(@codigo_cliente = 190829420)
		BEGIN
		
		SELECT 
		    '2028'+
                 
  CONVERT(VARCHAR,
  case
 WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
      
    RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2))
	          
 
	 
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 



   
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))  
	  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
		
		                          
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)     
                   
  WHERE CC.[Codigo_proceso] = @Codigo_proceso AND  CRE.DLCUS= 'RE'                                      
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0 
ORDER BY  DLNE ASC                   
		END  
		--DROP TABLE #TEMPO                              
 END -- FIN 2                                          
                 
END                      
    
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoReporte2509TEXT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
                      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoReporte2509TEXT]                                
@Codigo_proceso as uniqueidentifier,                                      
@situacionTrabajador as char ( 2 )                                       
AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      
 SET NOCOUNT ON                                       
  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
    ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                           
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                    
                      
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
 	IF(@codigo_cliente = 190829420)
		BEGIN
		
		SELECT 
		    '2509'+
                 
  CONVERT(VARCHAR,
  CASE               
     WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
      
    RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2))
	
	 
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLic, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 

		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
			 AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
			 --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
			 AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
			 AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))   
			 left JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                       
	 WHERE cc.Codigo_proceso = @Codigo_proceso    and CRE.DLCUS= 'IN'                                   
	 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
		ELSE @situacionTrabajador END                                      
		AND DLIC >= 0                   
ORDER BY  DLNE ASC                
		END
      ---   SELECT*FROM CLIENTECUOTA WHERE DLNP=233130322472             
END  --- FIN 1  
                        
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN         
----PRUEBAAAAA cuota 2 ---ESTEFANI FLORES COD=190828945 NUEVO FORMATO 
   	IF(@codigo_cliente = 190829420)
		BEGIN
		
		SELECT 
		    '2509'+
                 
  CONVERT(VARCHAR,
  CASE               
    WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
      
    RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2))
	
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso       AND   CRE.DLCUS= 'IN'     AND                             
  DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0  
                              
                 
ORDER BY  DLNE ASC                  
	 
		END
   
END  --2                    
               
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                            
   	IF(@codigo_cliente = 190829420)
		BEGIN
		
		SELECT 
		    '2509'+
                 
  CONVERT(VARCHAR,
  case
 WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
      
    RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2))
	          
 
	 
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 



   
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))  
	  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
		
		                          
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)     
                   
  WHERE CC.[Codigo_proceso] = @Codigo_proceso AND  CRE.DLCUS= 'IN'                                       
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0 
ORDER BY  DLNE ASC                
		END  
		--DROP TABLE #TEMPO                              
 END -- FIN 2                                          
                 
END                      

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoRLHRLActivosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*  
DROP PROCEDURE CronogramaFuturoRLHRLActivosText          
*/  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoRLHRLActivosText]          
@codigo_proceso as varchar(36),          
@SituacionTrabajador  as char ( 1 ) = '-'          
AS          
BEGIN          
        
              
DECLARE @CODIGO_CLIENTE_IBS AS INT               
DECLARE @TIPO_CUOTA AS INT              
              
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso              
GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS              
              
      
      
      
IF @TIPO_CUOTA = 1              
BEGIN       
      
 SELECT Depe_id = CAST ( 174000 AS NUMERIC ( 6 ) ),          
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
 SitLaboral =  CAST( 1   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),          
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),          
 Monto = cast ( DLIC as numeric ( 10, 2)),          
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,          
 Ncuota = isnull (           
   (SELECT MIN ( DLNCT )             
   FROM HistoricoDLCCR WHERE DLACC = DLNP          
   and Codigo_proceso =@codigo_proceso), 0 ),          
          
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1           
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )          
 WHERE CODIGO_PROCESO = @codigo_proceso    
 AND DLIC >= 0    
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'          
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END*/          
 and DLST ='A'          
       
END      
ELSE IF  @TIPO_CUOTA = 2          
BEGIN         
      
 SELECT Depe_id = CAST ( 174000 AS NUMERIC ( 6 ) ),          
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
 SitLaboral =  CAST( 1   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),          
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),          
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),          
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,          
 Ncuota = isnull (           
   (SELECT MIN ( DLNCT )             
   FROM HistoricoDLCCR WHERE DLACC = DLNP          
   and Codigo_proceso =@codigo_proceso), 0 ),          
          
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1           
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                        
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )          
 WHERE cc.CODIGO_PROCESO = @codigo_proceso    
 AND DLIC >= 0    
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'          
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END*/          
  and DLST ='A'          
        
      
END      
      
ELSE IF  @TIPO_CUOTA = 3          
BEGIN        
         
      
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'      
    INTO #TEMPO      
 FROM ClienteCuota CC      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)      
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso       
       AND CC.DLNP = CR.DLACC      
       AND(CONVERT(INT,      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )       
        <      
        CONVERT(INT,      
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END      
        )      
        OR      
              
        CONVERT(INT,      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END      
        )      
        =      
        CONVERT(INT,      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END       
        )      
      )      
 )      
WHERE DLIC >= 0    
 GROUP BY CR.DLACC      
      
    
 SELECT Depe_id = CAST ( 174000 AS NUMERIC ( 6 ) ),          
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
 SitLaboral =  CAST( 1   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),          
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),          
 Monto = cast ( T.CUOTA as numeric ( 10, 2)),          
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,          
 Ncuota = isnull (           
   (SELECT MIN ( DLNCT )             
   FROM HistoricoDLCCR WHERE DLACC = DLNP          
   and Codigo_proceso =@codigo_proceso), 0 ),          
          
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1           
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)      
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                        
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )          
 WHERE cc.CODIGO_PROCESO = @codigo_proceso    
 AND DLIC >= 0    
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'          
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END*/          
  and DLST ='A'          
        
      
       
       
      
      
 DROP TABLE #TEMPO      
      
END      
      
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoRLHRLContratadosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*  
DROP PROCEDURE CronogramaFuturoRLHRLContratadosText          
*/  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoRLHRLContratadosText]          
@codigo_proceso as varchar(36),          
@SituacionTrabajador  as char ( 1 ) = '-'          
AS          
BEGIN          
        
              
DECLARE @CODIGO_CLIENTE_IBS AS INT               
DECLARE @TIPO_CUOTA AS INT              
              
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso              
GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS              
              
      
      
      
IF @TIPO_CUOTA = 1              
BEGIN       
      
 SELECT Depe_id = CAST ( 174000 AS NUMERIC ( 6 ) ),          
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
 SitLaboral =  CAST( 3   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),          
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),          
 Monto = cast ( DLIC as numeric ( 10, 2)),          
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,          
 Ncuota = isnull (           
   (SELECT MIN ( DLNCT )             
   FROM HistoricoDLCCR WHERE DLACC = DLNP          
   and Codigo_proceso =@codigo_proceso), 0 ),          
          
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1           
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )          
 WHERE CODIGO_PROCESO = @codigo_proceso    
 AND DLIC >= 0    
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'          
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END*/          
 and DLST ='F'          
       
END      
ELSE IF  @TIPO_CUOTA = 2          
BEGIN         
      
 SELECT Depe_id = CAST ( 174000 AS NUMERIC ( 6 ) ),          
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
 SitLaboral =  CAST( 3   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),          
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),          
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),          
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,          
 Ncuota = isnull (           
   (SELECT MIN ( DLNCT )             
   FROM HistoricoDLCCR WHERE DLACC = DLNP          
   and Codigo_proceso =@codigo_proceso), 0 ),          
          
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1           
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                        
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )          
 WHERE cc.CODIGO_PROCESO = @codigo_proceso    
 AND DLIC >= 0    
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'          
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END*/          
  and DLST ='F'          
        
      
END      
      
ELSE IF  @TIPO_CUOTA = 3          
BEGIN        
         
      
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'      
    INTO #TEMPO      
 FROM ClienteCuota CC      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)      
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso       
       AND CC.DLNP = CR.DLACC      
       AND(CONVERT(INT,      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )       
        <      
        CONVERT(INT,      
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END      
        )      
        OR      
              
        CONVERT(INT,      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END      
        )      
        =      
        CONVERT(INT,      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END       
        )      
      )      
 )      
WHERE DLIC >= 0    
 GROUP BY CR.DLACC      
      
    
 SELECT Depe_id = CAST ( 174000 AS NUMERIC ( 6 ) ),          
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
 SitLaboral =  CAST( 3   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),          
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),          
 Monto = cast ( T.CUOTA as numeric ( 10, 2)),          
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,          
 Ncuota = isnull (           
   (SELECT MIN ( DLNCT )             
   FROM HistoricoDLCCR WHERE DLACC = DLNP          
   and Codigo_proceso =@codigo_proceso), 0 ),          
          
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1           
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)      
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                        
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )          
 WHERE cc.CODIGO_PROCESO = @codigo_proceso    
 AND DLIC >= 0    
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'          
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END*/          
  and DLST ='F'          
        
      
       
       
      
      
 DROP TABLE #TEMPO      
      
END      
      
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoRLHRLPensionistasText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*  
DROP PROCEDURE CronogramaFuturoRLHRLPensionistasText  
*/  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoRLHRLPensionistasText]          
@codigo_proceso as varchar(36),          
@SituacionTrabajador  as char ( 1 ) = '-'          
AS          
BEGIN          
        
            
              
DECLARE @CODIGO_CLIENTE_IBS AS INT               
DECLARE @TIPO_CUOTA AS INT              
              
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso              
GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS              
              
      
      
      
IF @TIPO_CUOTA = 1              
BEGIN       
  SELECT Depe_id = CAST ( 174000 AS NUMERIC ( 6 ) ),          
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
 SitLaboral = CASE WHEN DLNP = '233100240073' THEN 9           
    WHEN DLNP = '233100240071' THEN 19 ELSE  CAST(  9   AS NUMERIC ( 2)) END ,            
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),          
 Monto = cast ( DLIC as numeric ( 10, 2)),          
 Ncuota = isnull (           
   (SELECT MIN ( DLNCT )             
   FROM HistoricoDLCCR WHERE DLACC = DLNP          
   and Codigo_proceso =@codigo_proceso), 0 ),          
  --- cast ( dlccp1 as numeric ( 2 )) +2,          
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      -- cast ( dlcnc1 as numeric ( 2 )) --+ 1           
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )          
 WHERE CODIGO_PROCESO = @codigo_proceso    
 AND DLIC >= 0    
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'          
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END*/          
  and DLST in ( 'C', 'S')          
       
       
END      
ELSE IF  @TIPO_CUOTA = 2          
BEGIN         
      
 SELECT Depe_id = CAST ( 174000 AS NUMERIC ( 6 ) ),          
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
 SitLaboral = CASE WHEN DLNP = '233100240073' THEN 9           
    WHEN DLNP = '233100240071' THEN 19 ELSE  CAST(  9   AS NUMERIC ( 2)) END ,            
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),          
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),          
 Ncuota = isnull (           
   (SELECT MIN ( DLNCT )             
   FROM HistoricoDLCCR WHERE DLACC = DLNP          
   and Codigo_proceso =@codigo_proceso), 0 ),          
  --- cast ( dlccp1 as numeric ( 2 )) +2,          
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1           
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                        
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )          
 WHERE cc.CODIGO_PROCESO = @codigo_proceso    
AND DLIC >= 0    
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'          
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END*/          
  and DLST in ( 'C', 'S')          
          
       
END      
      
ELSE IF  @TIPO_CUOTA = 3          
BEGIN        
       
      
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'      
    INTO #TEMPO      
 FROM ClienteCuota CC      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)      
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso       
       AND CC.DLNP = CR.DLACC      
       AND(CONVERT(INT,      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )       
        <       
        CONVERT(INT,      
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END      
        )      
        OR      
              
        CONVERT(INT,      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END      
        )      
        =      
        CONVERT(INT,      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END       
        )      
      )      
 )      
 WHERE DLIC >= 0    
 GROUP BY CR.DLACC      
      
      
 SELECT Depe_id = CAST ( 174000 AS NUMERIC ( 6 ) ),          
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
 SitLaboral = CASE WHEN DLNP = '233100240073' THEN 9           
    WHEN DLNP = '233100240071' THEN 19 ELSE  CAST(  9   AS NUMERIC ( 2)) END ,            
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),          
 Monto = cast ( T.CUOTA as numeric ( 10, 2)),          
 Ncuota = isnull (           
   (SELECT MIN ( DLNCT )             
   FROM HistoricoDLCCR WHERE DLACC = DLNP          
   and Codigo_proceso =@codigo_proceso), 0 ),          
  --- cast ( dlccp1 as numeric ( 2 )) +2,          
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1           
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                        
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)      
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )          
 WHERE cc.CODIGO_PROCESO = @codigo_proceso    
 AND DLIC >= 0    
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'          
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST          
    ELSE @situacionTrabajador END*/          
  and DLST in ( 'C', 'S')          
          
        
      
 DROP TABLE #TEMPO      
      
END      
      
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoRLHRLText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*  
drop procedure CronogramaFuturoRLHRLText  
*/  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoRLHRLText]          
 @codigo_proceso as varchar(36),          
 @SituacionTrabajador  as char ( 1 ) = '-'          
AS          
BEGIN   
 --1. Definimos tabla temporal Repositorio  
 create table #repositorio (  
  Depe_id numeric(6),  
  Mes numeric(2),  
  Anno numeric(4),  
  Dni varchar(8),  
  SitLaboral numeric(2),  
  Apellidos char(35),  
  Nombres  char(35),  
  Monto  numeric(10,2),  
  Ncuota  numeric(2),  
  MaxCuota numeric(2)  
 )  
         
 if @SituacionTrabajador = 'A' or @SituacionTrabajador = '-' --activos o TODOS  
 begin  
  insert #repositorio exec CronogramaFuturoRLHRLActivosText @codigo_proceso, @SituacionTrabajador  
 end  
   
 if @SituacionTrabajador = 'F' or @SituacionTrabajador = '-' --contratados por funcionamiento O TODOS  
 begin  
  insert #repositorio exec CronogramaFuturoRLHRLContratadosText @codigo_proceso, @SituacionTrabajador  
 end  
   
 if @SituacionTrabajador = 'C' or @SituacionTrabajador = 'P' or @SituacionTrabajador = '-' --CESANTES/PENSIONISTAS O TODOS  
 begin  
  insert #repositorio exec CronogramaFuturoRLHRLPensionistasText @codigo_proceso, @SituacionTrabajador  
 end  
  
 select Depe_id, Mes, Anno, Dni, SitLaboral, Apellidos, Nombres, Monto, Ncuota, MaxCuota from #repositorio   
END   
  
/*  
exec CronogramaFuturoRLHRLText '211FDE54-98B6-48FB-B5B1-9684617276B2', 'A'  
exec CronogramaFuturoRLHRLActivosText '211FDE54-98B6-48FB-B5B1-9684617276B2', 'A'  
  
exec CronogramaFuturoRLHRLText '211FDE54-98B6-48FB-B5B1-9684617276B2', 'F'  
exec CronogramaFuturoRLHRLContratadosText '211FDE54-98B6-48FB-B5B1-9684617276B2', 'F'  
  
exec CronogramaFuturoRLHRLText '211FDE54-98B6-48FB-B5B1-9684617276B2', 'P'  
exec CronogramaFuturoRLHRLPensionistasText '211FDE54-98B6-48FB-B5B1-9684617276B2', 'P'  
  
select * from cliente where nombre_cliente like 'REGION LAMBAYEQUE%'  
SELECT * FROM PROCESO WHERE CODIGO_CLIENTE = '190828917'  
  
*/
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSaludMentalINTEXT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
                      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSaludMentalINTEXT]                                
@Codigo_proceso as uniqueidentifier,                                      
@situacionTrabajador as char ( 2 )                                       
AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      
 SET NOCOUNT ON                                       
  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
    ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                           
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                    
                      
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
 	IF(@codigo_cliente = 190829408)
		BEGIN
		
		SELECT 
		Pagare = ''''+cast([DLNP] as varchar(12)),   
		CRE.DLDNI AS 'DNI', DLCUN AS Operacion,                                                                   
	           
	 NombreCliente = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),   MontoCuota = CR.DLIMC   ,                                   
	 MontoDecuento = DLIC        ,convert(char(10),FechaCargo,103)  AS FecVcto  ,CuotaInformada as CuotaNro,
	  CuotaPactadas as NroCuotas,                             
	     MontoCuota = CR.DLIMC   , MontoOriginal as Monto, convert(char(10),FechaDesembolso,103)    as Fecha                           
		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
			 AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
			 --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
			 AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
			 AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))   
			 left JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                       
	 WHERE cc.Codigo_proceso = @Codigo_proceso    and SUBSTRing(cc.DLCR,1,2)='IN'                                
	 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
		ELSE @situacionTrabajador END                                      
		AND DLIC >= 0                   
	 ORDER BY   NombreCliente ASC                     
		END
      ---   SELECT*FROM CLIENTECUOTA WHERE DLNP=233130322472             
END  --- FIN 1  
                        
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN         
----PRUEBAAAAA cuota 2 ---ESTEFANI FLORES COD=190828945 NUEVO FORMATO 
                
        IF(@codigo_cliente = 190829408)
		BEGIN
		
		SELECT  
	Pagare = ''''+cast([DLNP] as varchar(12)),   
		CRE.DLDNI AS 'DNI', DLCUN AS Operacion,                                                                   
	           
	 NombreCliente = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
	 MontoDecuento = CR.DLIMC ,  MontoCuota = CR.DLIMC            ,convert(char(10),FechaCargo,103)  AS FecVcto  ,CuotaInformada as CuotaNro,
	  CuotaPactadas as NroCuotas,                             
	     MontoOriginal as Monto,   convert(char(10),FechaDesembolso,103)  as Fecha  	     
			 
			 
			 
			 
			                             
	  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso       AND   SUBSTRing(cc.DLCR,1,2)='IN'   AND                             
  DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0  
                              
                 
	 ORDER BY  NombreCliente ASC                     
	 
		END
   
END  --2                    
               
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                            
        IF(@codigo_cliente = 190829408)
		BEGIN		
		SELECT   
		
		Pagare = ''''+cast([DLNP] as varchar(12)),   
		CRE.DLDNI AS 'DNI', DLCUN AS Operacion,                                                                   
	           
	 NombreCliente = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),   MontoCuota = CR.DLIMC   ,                                   
	 MontoDecuento = DLIC        ,convert(char(10),FechaCargo,103)   AS FecVcto  ,CuotaInformada as CuotaNro,
	  CuotaPactadas as NroCuotas,                             
	     MontoCuota = T.CUOTA    , MontoOriginal as Monto,   convert(char(10),FechaDesembolso,103)   as Fecha                           
		
		
		
		                               
	
	 
	 
	 
	                                       
	
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))  
	  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
		
		                          
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)     
                   
  WHERE CC.[Codigo_proceso] = @Codigo_proceso AND   SUBSTRing(cc.DLCR,1,2)='IN'                                     
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0 
	 ORDER BY  NombreCliente ASC                     
		END  
		--DROP TABLE #TEMPO                              
 END -- FIN 2                                          
                 
END                      
    
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSaludMentalRETEXT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
                      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSaludMentalRETEXT]                                
@Codigo_proceso as uniqueidentifier,                                      
@situacionTrabajador as char ( 2 )                                       
AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      
 SET NOCOUNT ON                                       
  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
    ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                           
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                    
                      
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
 	IF(@codigo_cliente = 190829408)
		BEGIN
		
		SELECT 
		Pagare = ''''+cast([DLNP] as varchar(12)),   
		CRE.DLDNI AS 'DNI', DLCUN AS Operacion,                                                                   
	           
	 NombreCliente = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),   MontoCuota = CR.DLIMC   ,                                   
	 MontoDecuento = DLIC        ,convert(char(10),FechaCargo,103)  AS FecVcto  ,CuotaInformada as CuotaNro,
	  CuotaPactadas as NroCuotas,                             
	     MontoCuota = CR.DLIMC   , MontoOriginal as Monto, convert(char(10),FechaDesembolso,103)    as Fecha                           
		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
			 AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
			 --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
			 AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
			 AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))   
			 left JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                       
	 WHERE cc.Codigo_proceso = @Codigo_proceso    and SUBSTRing(cc.DLCR,1,2)='RE'                                
	 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
		ELSE @situacionTrabajador END                                      
		AND DLIC >= 0                   
	 ORDER BY   NombreCliente ASC                     
		END
      ---   SELECT*FROM CLIENTECUOTA WHERE DLNP=233130322472             
END  --- FIN 1  
                        
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN         
----PRUEBAAAAA cuota 2 ---ESTEFANI FLORES COD=190828945 NUEVO FORMATO 
                
        IF(@codigo_cliente = 190829408)
		BEGIN
		
		SELECT  
	Pagare = ''''+cast([DLNP] as varchar(12)),   
		CRE.DLDNI AS 'DNI', DLCUN AS Operacion,                                                                   
	           
	 NombreCliente = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
	 MontoDecuento = CR.DLIMC ,  MontoCuota = CR.DLIMC            ,convert(char(10),FechaCargo,103)  AS FecVcto  ,CuotaInformada as CuotaNro,
	  CuotaPactadas as NroCuotas,                             
	     MontoOriginal as Monto,   convert(char(10),FechaDesembolso,103)  as Fecha  	     
			 
			 
			 
			 
			                             
	  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso       AND   SUBSTRing(cc.DLCR,1,2)='RE'   AND                             
  DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0  
                              
                 
	 ORDER BY  NombreCliente ASC                     
	 
		END
   
END  --2                    
               
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                            
        IF(@codigo_cliente = 190829408)
		BEGIN		
		SELECT   
		
		Pagare = ''''+cast([DLNP] as varchar(12)),   
		CRE.DLDNI AS 'DNI', DLCUN AS Operacion,                                                                   
	           
	 NombreCliente = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),   MontoCuota = CR.DLIMC   ,                                   
	 MontoDecuento = DLIC        ,convert(char(10),FechaCargo,103)   AS FecVcto  ,CuotaInformada as CuotaNro,
	  CuotaPactadas as NroCuotas,                             
	     MontoCuota = T.CUOTA    , MontoOriginal as Monto,   convert(char(10),FechaDesembolso,103)   as Fecha                           
		
		
		
		                               
	
	 
	 
	 
	                                       
	
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))  
	  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
		
		                          
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)     
                   
  WHERE CC.[Codigo_proceso] = @Codigo_proceso AND   SUBSTRing(cc.DLCR,1,2)='RE'                                     
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0 
	 ORDER BY  NombreCliente ASC                     
		END  
		--DROP TABLE #TEMPO                              
 END -- FIN 2                                          
                 
END                      
    
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSANFERNANDText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSANFERNANDText]    
@Codigo_proceso as uniqueidentifier,    
@situacionTrabajador as char ( 1 )     
AS    
BEGIN    
/*    
 FORMATO DE ENVIO PARA SAN FERNANDO     
 ----------------------------------------------------------------------------------    
 ID_SOCIEDAD  = Tiene valor 1 y es el identificador de la sociedad San Fernando    
 ID_EMPLEADO = Es el código del empleado    
 ID_CONCEPTO = Es el código del concepto se usaria el código 8820    
 FECHA_INICIO = Es el fecha de la paga en este caso siempre es la del 25mmaaaa    
 FECHA_FIN = Es la fecha de la paga en este caso siempre es la del 25mmaaaa ( Para evitar que quede abierto el concepto y en la siguiente paga se duplique).    
 VALOR = Es el importe de la cuota    
 PRIORIDAD_DE_DSCTO = Tiene el valor 2    
     
*/    
  
  
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        




IF @TIPO_CUOTA = 1        
BEGIN 

		 SELECT  '1@' + cast ( CAST( ISNULL([DLCM], 0) AS INT) as varchar(20))+'@8820@'--25'    
   +    
   replace (     
    CONVERT ( VARCHAR ( 10 ) ,    
    DATEADD ( MONTH, -1 ,    
    CAST (     
    CAST ([DLAP] AS VARCHAR(4))    
    +SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )    
    + '25' AS DATETIME  )      
    )    
    ,    
    104)    
    ,    
    '.',    
    ''    
   )    
   +    
/*  +SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )+    
  CAST(DLAP AS VARCHAR(4)) */    
    
   +'@'+    
   replace (     
    CONVERT ( VARCHAR ( 10 ) ,    
    DATEADD ( MONTH, -1 ,    
    CAST (     
    CAST (    
    [DLAP] AS VARCHAR(4))    
    +SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )    
    + '25' AS DATETIME  )      
    )    
    ,    
    104)    
    ,    
    '.',    
    ''    
    )    
  +      
  /*+'@25'+SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )+    
  CAST(DLAP AS VARCHAR(4)) */    
  +'@'+ cast ( ISNULL(DLIC, 0) AS varCHAR(12))     
  +'@2'    
 FROM [ClienteCuota]    
 WHERE [Codigo_Proceso] = @Codigo_proceso    
  And DLST = Case When RTrim( @situacionTrabajador ) = '-' Then DLST    
     Else @SituacionTrabajador END
 AND DLIC >= 0    
  --AND ISNULL([DLCM], 0)<> 0    
 ORDER BY 1    
  

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT  '1@' + cast ( CAST( ISNULL([DLCM], 0) AS INT) as varchar(20))+'@8820@'--25'    
   +    
   replace (     
    CONVERT ( VARCHAR ( 10 ) ,    
    DATEADD ( MONTH, -1 ,    
    CAST (     
    CAST ([DLAP] AS VARCHAR(4))    
    +SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )    
    + '25' AS DATETIME  )      
    )    
    ,    
    104)    
    ,    
    '.',    
    ''    
   )    
   +    
/*  +SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )+    
  CAST(DLAP AS VARCHAR(4)) */    
    
   +'@'+    
   replace (     
    CONVERT ( VARCHAR ( 10 ) ,    
    DATEADD ( MONTH, -1 ,    
    CAST (     
    CAST (    
    [DLAP] AS VARCHAR(4))    
    +SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )    
    + '25' AS DATETIME  )      
    )    
    ,    
    104)    
    ,    
    '.',    
    ''    
    )    
  +      
  /*+'@25'+SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )+    
  CAST(DLAP AS VARCHAR(4)) */    
  +'@'+ cast ( ISNULL(CR.DLIMC, 0) AS varCHAR(12))     
  +'@2'    
 FROM [ClienteCuota]  cc  
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE cc.[Codigo_Proceso] = @Codigo_proceso    
  And DLST = Case When RTrim( @situacionTrabajador ) = '-' Then DLST    
     Else @SituacionTrabajador END
 AND DLIC >= 0    
  --AND ISNULL([DLCM], 0)<> 0    
 ORDER BY 1    
  
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC


	SELECT  '1@' + cast ( CAST( ISNULL([DLCM], 0) AS INT) as varchar(20))+'@8820@'--25'    
   +    
   replace (     
    CONVERT ( VARCHAR ( 10 ) ,    
    DATEADD ( MONTH, -1 ,    
    CAST (     
    CAST ([DLAP] AS VARCHAR(4))    
    +SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )    
    + '25' AS DATETIME  )      
    )    
    ,    
    104)    
    ,    
    '.',    
    ''    
   )    
   +    
/*  +SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )+    
  CAST(DLAP AS VARCHAR(4)) */    
    
   +'@'+    
   replace (     
    CONVERT ( VARCHAR ( 10 ) ,    
    DATEADD ( MONTH, -1 ,    
    CAST (     
    CAST (    
    [DLAP] AS VARCHAR(4))    
    +SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )    
    + '25' AS DATETIME  )      
    )    
    ,    
    104)    
    ,    
    '.',    
    ''    
    )    
  +      
  /*+'@25'+SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )+    
  CAST(DLAP AS VARCHAR(4)) */    
  +'@'+ cast ( ISNULL(T.CUOTA, 0) AS varCHAR(12))     
  +'@2'    
 FROM [ClienteCuota]  cc  
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
 WHERE cc.[Codigo_Proceso] = @Codigo_proceso    
  And DLST = Case When RTrim( @situacionTrabajador ) = '-' Then DLST    
     Else @SituacionTrabajador END
  AND DLIC >= 0    
  --AND ISNULL([DLCM], 0)<> 0    
 ORDER BY 1    
  
 DROP TABLE #TEMPO

END


END
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSaviaAdministrativosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSaviaAdministrativosText]          
@Codigo_proceso as uniqueidentifier,                
@situacionTrabajador as char ( 2 )                 
AS                
BEGIN   --INICIO   
         
DECLARE @CODIGO_CLIENTE_IBS AS INT       
DECLARE @TIPO_CUOTA AS INT      
      
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso      
GROUP BY DLCC      
      
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS      

IF @TIPO_CUOTA = 1        
BEGIN -- 1
        
	BEGIN  -- 2
            
	SELECT CodigoBanco = cast ('BIF' as varchar(12)),                 
	Moneda =  cast ( DLMO as varchar(3)),                
	NumeroPagare = ''''+cast([DLNP] as varchar(12)),                
	CodigoModular = ''''+cast([DLCM] as varchar(20)),                
	NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                
	CodigoReferencia = cast ( [DLCR] as varchar(20)),                             
	Anio = cast ( [DLAP] as varchar(4)),                
	Mes = cast ( [DLMP] as varchar(2)),                
	Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                
	SituacionLaboral = cast ( [DLST] as varchar(2)),                
	MontoDescuento = cast ( 0 as varchar(14)),                
	SaldoCredito = cast(CRE.DLPRI as varchar (14))                 
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
	WHERE [Codigo_proceso] = @Codigo_proceso              
	AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
    AND DLIC >= 0 and DLCUS='AD' -- Agregado por RHJ 23-02-2012  
	ORDER BY DLMO, [DLNE] 
	
    END --FIN 2
END  --- FIN 1

ELSE IF  @TIPO_CUOTA = 2    
BEGIN   --1
		           
	BEGIN   -- 2      
        
		SELECT CodigoBanco = cast ( 'BIF'  as varchar(12)),                 
		Moneda =  cast ( DLMO as varchar(3)),                
		NumeroPagare = ''''+cast([DLNP] as varchar(12)),                
		CodigoModular = ''''+cast([DLCM] as varchar(20)),                
		NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                
		CodigoReferencia = cast ( [DLCR] as varchar(20)),       
		Anio = cast ( [DLAP] as varchar(4)),                
		Mes = cast ( [DLMP] as varchar(2)),                
		Cuota =  CR.DLIMC ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                
		SituacionLaboral = cast ( [DLST] as varchar(2)),                
		MontoDescuento = cast ( 0 as varchar(14)),                
		SaldoCredito = cast(CRE.DLPRI as varchar (14))                 
		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                 
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
        AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
		INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                
		WHERE CC.[Codigo_proceso] = @Codigo_proceso              
		AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
		ELSE @situacionTrabajador END
		AND DLIC >= 0   and DLCUS ='AD'             
		ORDER BY DLMO, [DLNE]                
		
	END   -- FIN 2       
   
END --1

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  --ALFA
   
	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
    WHERE DLIC >= 0 
	GROUP BY CR.DLACC
          
		BEGIN   -- 1       
        
		SELECT CodigoBanco = cast ( 'BIF'  as varchar(12)),               
		Moneda =  cast ( DLMO as varchar(3)),                
		NumeroPagare = ''''+cast([DLNP] as varchar(12)),                
		CodigoModular = ''''+cast([DLCM] as varchar(20)),                
		NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                
		CodigoReferencia = cast ( [DLCR] as varchar(20)),                       
		Anio = cast ( [DLAP] as varchar(4)),                
		Mes = cast ( [DLMP] as varchar(2)),                
		Cuota =  T.CUOTA ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                
		SituacionLaboral = cast ( [DLST] as varchar(2)),                
		MontoDescuento = cast ( 0 as varchar(14)),                
		SaldoCredito = cast(CRE.DLPRI as varchar (14))                 
		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                 
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
        AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
		--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                
		INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
		WHERE CC.[Codigo_proceso] = @Codigo_proceso              
		AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST 
		ELSE @situacionTrabajador END                
		AND DLIC >= 0 AND DLCUS='AD'              
		ORDER BY DLMO, [DLNE]                
		
	   END   -- FIN 1         
        


	DROP TABLE #TEMPO

END --ALFA

END --FINAL
                


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSaviaOtrosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSaviaOtrosText]          
@Codigo_proceso as uniqueidentifier,                
@situacionTrabajador as char ( 2 )                 
AS                
BEGIN   --INICIO   
         
DECLARE @CODIGO_CLIENTE_IBS AS INT       
DECLARE @TIPO_CUOTA AS INT      
      
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso      
GROUP BY DLCC      
      
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS      

IF @TIPO_CUOTA = 1        
BEGIN -- 1
        
	BEGIN  -- 2
            
	SELECT CodigoBanco = cast ('BIF' as varchar(12)),                 
	Moneda =  cast ( DLMO as varchar(3)),                
	NumeroPagare = ''''+cast([DLNP] as varchar(12)),                
	CodigoModular = ''''+cast([DLCM] as varchar(20)),                
	NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                
	CodigoReferencia = cast ( [DLCR] as varchar(20)),                             
	Anio = cast ( [DLAP] as varchar(4)),                
	Mes = cast ( [DLMP] as varchar(2)),                
	Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                
	SituacionLaboral = cast ( [DLST] as varchar(2)),                
	MontoDescuento = cast ( 0 as varchar(14)),                
	SaldoCredito = cast(CRE.DLPRI as varchar (14))                 
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
	WHERE [Codigo_proceso] = @Codigo_proceso              
	AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
    AND DLIC >= 0 and DLCUS='OT' -- Agregado por RHJ 23-02-2012  
	ORDER BY DLMO, [DLNE] 
	
    END --FIN 2
END  --- FIN 1

ELSE IF  @TIPO_CUOTA = 2    
BEGIN   --1
		           
	BEGIN   -- 2      
        
		SELECT CodigoBanco = cast ( 'BIF'  as varchar(12)),                 
		Moneda =  cast ( DLMO as varchar(3)),                
		NumeroPagare = ''''+cast([DLNP] as varchar(12)),                
		CodigoModular = ''''+cast([DLCM] as varchar(20)),                
		NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                
		CodigoReferencia = cast ( [DLCR] as varchar(20)),       
		Anio = cast ( [DLAP] as varchar(4)),                
		Mes = cast ( [DLMP] as varchar(2)),                
		Cuota =  CR.DLIMC ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                
		SituacionLaboral = cast ( [DLST] as varchar(2)),                
		MontoDescuento = cast ( 0 as varchar(14)),                
		SaldoCredito = cast(CRE.DLPRI as varchar (14))                 
		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                 
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
        AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
		INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                
		WHERE CC.[Codigo_proceso] = @Codigo_proceso              
		AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
		ELSE @situacionTrabajador END
		AND DLIC >= 0   and DLCUS ='OT'             
		ORDER BY DLMO, [DLNE]                
		
	END   -- FIN 2       
   
END --1

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  --ALFA
   
	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
    WHERE DLIC >= 0 
	GROUP BY CR.DLACC
          
		BEGIN   -- 1       
        
		SELECT CodigoBanco = cast ( 'BIF'  as varchar(12)),               
		Moneda =  cast ( DLMO as varchar(3)),                
		NumeroPagare = ''''+cast([DLNP] as varchar(12)),                
		CodigoModular = ''''+cast([DLCM] as varchar(20)),                
		NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                
		CodigoReferencia = cast ( [DLCR] as varchar(20)),                       
		Anio = cast ( [DLAP] as varchar(4)),                
		Mes = cast ( [DLMP] as varchar(2)),                
		Cuota =  T.CUOTA ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                
		SituacionLaboral = cast ( [DLST] as varchar(2)),                
		MontoDescuento = cast ( 0 as varchar(14)),                
		SaldoCredito = cast(CRE.DLPRI as varchar (14))                 
		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                 
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
        AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))      
		--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                
		INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
		WHERE CC.[Codigo_proceso] = @Codigo_proceso              
		AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST 
		ELSE @situacionTrabajador END                
		AND DLIC >= 0 AND DLCUS='OT'              
		ORDER BY DLMO, [DLNE]                
		
	   END   -- FIN 1         
        


	DROP TABLE #TEMPO

END --ALFA

END --FINAL
                


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGA_CTARlAMBAYEQUEText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

      
     
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGA_CTARlAMBAYEQUEText]          
@codigo_proceso as varchar(36),          
@SituacionTrabajador  as char ( 1 ) = '-'          
AS          
BEGIN        
      
          
            
DECLARE @CODIGO_CLIENTE_IBS AS INT             
DECLARE @TIPO_CUOTA AS INT            
            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso            
GROUP BY DLCC            
            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS            
            
    
    
    
IF @TIPO_CUOTA = 1            
BEGIN     
 SELECT Depe_id  = CAST ( 1310 AS NUMERIC ( 4 ) ),          
  Mes   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
  Anno   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 when DLST ='I' then 2 when DLST = 'O' then 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),          
  Apellidos  = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
  Nombres  = cast(rtrim(ltrim(DLMN)) as char(35)),          
  Monto   = cast ( DLIC as numeric ( 10, 2)),          
  Ncuota   = ISNULL(( SELECT  MIN(DLNCT)             
         FROM HistoricoDLCCR         
      WHERE DLACC   = DLNP   AND         
       Codigo_proceso  = @codigo_proceso),0),          
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99         
     ELSE CAST(dlcnc1 as numeric(3))         
       END        
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
    inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
 WHERE  CODIGO_PROCESO = @codigo_proceso  and         
  DLST   = case WHEN rtrim( @situacionTrabajador ) = '-' then DLST          
     ELSE @situacionTrabajador END          
  AND DLIC >= 0    
    
    
END    
ELSE IF  @TIPO_CUOTA = 2        
BEGIN       
 SELECT Depe_id  = CAST ( 1310 AS NUMERIC ( 4 ) ),          
  Mes   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
  Anno   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 when DLST ='I' then 2 when DLST = 'O' then 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),          
  Apellidos  = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
  Nombres  = cast(rtrim(ltrim(DLMN)) as char(35)),          
  Monto   = cast ( CR.DLIMC as numeric ( 10, 2)),          
  Ncuota   = ISNULL(( SELECT  MIN(DLNCT)             
         FROM HistoricoDLCCR         
      WHERE DLACC   = DLNP   AND         
       Codigo_proceso  = @codigo_proceso),0),          
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99         
     ELSE CAST(dlcnc1 as numeric(3))         
       END         FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
    inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                      
 WHERE  cc.CODIGO_PROCESO = @codigo_proceso  and         
  DLST   = case WHEN rtrim( @situacionTrabajador ) = '-' then DLST          
     ELSE @situacionTrabajador END       
  AND DLIC >= 0  
  
END    
    
ELSE IF  @TIPO_CUOTA = 3        
BEGIN      
       
    
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'    
    INTO #TEMPO    
 FROM ClienteCuota CC    
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)    
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso     
       AND CC.DLNP = CR.DLACC    
       AND(CONVERT(INT,    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +     
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +     
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )     
        <     
        CONVERT(INT,    
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +     
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +     
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END    
        )    
        OR    
            
        CONVERT(INT,    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +     
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END    
        )    
        =    
        CONVERT(INT,    
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +     
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END     
        )    
      )    
 )    
 AND DLIC >= 0  
 GROUP BY CR.DLACC    
    
    
  SELECT Depe_id  = CAST ( 1310 AS NUMERIC ( 4 ) ),          
  Mes   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,          
  Anno   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,          
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),          
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 when DLST ='I' then 2 when DLST = 'O' then 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),          
  Apellidos  = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),          
  Nombres  = cast(rtrim(ltrim(DLMN)) as char(35)),          
  Monto   = cast ( T.CUOTA as numeric ( 10, 2)),          
  Ncuota   = ISNULL(( SELECT  MIN(DLNCT)             
        FROM HistoricoDLCCR         
  WHERE DLACC   = DLNP   AND         
  Codigo_proceso  = @codigo_proceso),0),          
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99         
  ELSE CAST(dlcnc1 as numeric(3))         
  END        
  FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )          
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)          
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)    
  WHERE  cc.CODIGO_PROCESO = @codigo_proceso  and         
  DLST   = case WHEN rtrim( @situacionTrabajador ) = '-' then DLST          
  ELSE @situacionTrabajador END       
  AND DLIC >= 0  
    
  DROP TABLE #TEMPO    
    
END    
    
END    

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGABELENActivosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
    
    
 CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGABELENActivosText]      
@codigo_proceso as varchar(36),      
@SituacionTrabajador  as char ( 1 ) = '-'      
AS      
BEGIN      
    
     
        
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
  SELECT Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),      
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral =  CAST(1 AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
 Monto = cast ( DLIC as numeric ( 10, 2)),      
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,      
 Ncuota = isnull (       
   (SELECT MIN ( DLNCT )         
   FROM HistoricoDLCCR WHERE DLACC = DLNP      
   and Codigo_proceso =@codigo_proceso), 0 ),      
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END   --cast ( dlcnc1 as numeric ( 2 )) --+ 1       
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
 WHERE CODIGO_PROCESO = @codigo_proceso
 AND DLIC >= 0
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END*/      
  --and DLST ='A'      
  
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
 SELECT Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),      
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral =  CAST(1 AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),      
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,      
 Ncuota = isnull (       
   (SELECT MIN ( DLNCT )         
   FROM HistoricoDLCCR WHERE DLACC = DLNP      
   and Codigo_proceso =@codigo_proceso), 0 ),      
      
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END   --cast ( dlcnc1 as numeric ( 2 )) --+ 1       
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
 WHERE cc.CODIGO_PROCESO = @codigo_proceso
 AND DLIC >= 0
  --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END*/      
  --and DLST ='A'      
  
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE DLIC >= 0
 GROUP BY CR.DLACC  
  
  
  SELECT Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),      
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral =  CAST(1 AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
 Monto = cast ( T.CUOTA as numeric ( 10, 2)),      
 -- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,      
 Ncuota = isnull (       
   (SELECT MIN ( DLNCT )         
 FROM HistoricoDLCCR WHERE DLACC = DLNP      
 and Codigo_proceso =@codigo_proceso), 0 ),      
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END   --cast ( dlcnc1 as numeric ( 2 )) --+ 1       
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
 inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
 --NNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
 WHERE cc.CODIGO_PROCESO = @codigo_proceso
 AND DLIC >= 0 
--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
 /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END*/      
 --and DLST ='A'      
  
 DROP TABLE #TEMPO  
  
END  
  
END  
  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGABELENCesantesText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

  
  
    
    
    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGABELENCesantesText]      
@codigo_proceso as varchar(36),      
@SituacionTrabajador  as char ( 1 ) = '-'      
AS      
BEGIN      
       
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
  
 SELECT Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),      
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral =  CAST(  9   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
 Monto = cast ( DLIC as numeric ( 10, 2)),      
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,      
 Ncuota = isnull (       
   (SELECT MIN ( DLNCT )         
   FROM HistoricoDLCCR WHERE DLACC = DLNP      
   and Codigo_proceso =@codigo_proceso), 0 ),      
      
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 ))-- + 1       
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
 WHERE CODIGO_PROCESO = @codigo_proceso
 AND DLIC >= 0
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END*/      
  --and DLST in ( 'C', 'S')      
   
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
 SELECT Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),      
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral =  CAST(  9   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),      
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,      
 Ncuota = isnull (       
   (SELECT MIN ( DLNCT )         
   FROM HistoricoDLCCR WHERE DLACC = DLNP      
   and Codigo_proceso =@codigo_proceso), 0 ),      
      
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 ))-- + 1       
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
 WHERE cc.CODIGO_PROCESO = @codigo_proceso
 AND DLIC >= 0
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END*/      
  --and DLST in ( 'C', 'S')      
   
  
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 AND DLIC >= 0
 GROUP BY CR.DLACC  
  
  SELECT Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),      
  Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
  Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
  Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
  SitLaboral =  CAST(  9   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
  Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
  Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
  Monto = cast (T.CUOTA as numeric ( 10, 2)),      
  -- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,      
  Ncuota = isnull (       
  (SELECT MIN ( DLNCT )         
  FROM HistoricoDLCCR WHERE DLACC = DLNP      
  and Codigo_proceso =@codigo_proceso), 0 ),      
  MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 ))-- + 1       
  FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
  WHERE cc.CODIGO_PROCESO = @codigo_proceso
  AND DLIC >= 0
  --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
  ELSE @situacionTrabajador END*/      
  --and DLST in ( 'C', 'S')      
   
  DROP TABLE #TEMPO  
  
END  
  
END  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGABELENText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
    
    
    
/************************************************************************************************/      
/* Modif. por : Alex Sanchez Ponce (BIF)       */      
/* Fecha Modif : 2010/08/04         */      
/* Descripcion : Se modifico la MaxCuota para que cuando exceda las 99 cuotas le asigne 99  */      
/************************************************************************************************/      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGABELENText]        
@codigo_proceso as varchar(36),        
@SituacionTrabajador  as char ( 1 ) = '-'        
AS        
BEGIN      
    
        
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
 SELECT Depe_id  = CAST ( 1311 AS NUMERIC ( 4 ) ),        
  Mes   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,        
  Anno   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,        
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),        
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 when DLST ='I' then 2 when DLST = 'O' then 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),        
  Apellidos  = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),        
  Nombres  = cast(rtrim(ltrim(DLMN)) as char(35)),        
  Monto   = cast ( DLIC as numeric ( 10, 2)),        
  Ncuota   = ISNULL(( SELECT  MIN(DLNCT)           
         FROM HistoricoDLCCR       
      WHERE DLACC   = DLNP   AND       
       Codigo_proceso  = @codigo_proceso),0),        
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99       
     ELSE CAST(dlcnc1 as numeric(3))       
       END      
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )        
    inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)        
 WHERE  CODIGO_PROCESO = @codigo_proceso  and       
  DLST   = case WHEN rtrim( @situacionTrabajador ) = '-' then DLST        
     ELSE @situacionTrabajador END        
  AND DLIC >= 0  
  
  
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
 SELECT Depe_id  = CAST ( 1311 AS NUMERIC ( 4 ) ),        
  Mes   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,        
  Anno   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,        
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),        
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 when DLST ='I' then 2 when DLST = 'O' then 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),        
  Apellidos  = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),        
  Nombres  = cast(rtrim(ltrim(DLMN)) as char(35)),        
  Monto   = cast ( CR.DLIMC as numeric ( 10, 2)),        
  Ncuota   = ISNULL(( SELECT  MIN(DLNCT)           
         FROM HistoricoDLCCR       
      WHERE DLACC   = DLNP   AND       
       Codigo_proceso  = @codigo_proceso),0),        
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99       
     ELSE CAST(dlcnc1 as numeric(3))       
       END      
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )        
    inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)        
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 WHERE  cc.CODIGO_PROCESO = @codigo_proceso  and       
  DLST   = case WHEN rtrim( @situacionTrabajador ) = '-' then DLST        
     ELSE @situacionTrabajador END     
  AND DLIC >= 0

END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 AND DLIC >= 0
 GROUP BY CR.DLACC  
  
  
  SELECT Depe_id  = CAST ( 1311 AS NUMERIC ( 4 ) ),        
  Mes   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,        
  Anno   = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,        
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),        
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 when DLST ='I' then 2 when DLST = 'O' then 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),        
  Apellidos  = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),        
  Nombres  = cast(rtrim(ltrim(DLMN)) as char(35)),        
  Monto   = cast ( T.CUOTA as numeric ( 10, 2)),        
  Ncuota   = ISNULL(( SELECT  MIN(DLNCT)           
        FROM HistoricoDLCCR       
  WHERE DLACC   = DLNP   AND       
  Codigo_proceso  = @codigo_proceso),0),        
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99       
  ELSE CAST(dlcnc1 as numeric(3))       
  END      
  FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )        
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)        
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
  WHERE  cc.CODIGO_PROCESO = @codigo_proceso  and       
  DLST   = case WHEN rtrim( @situacionTrabajador ) = '-' then DLST        
  ELSE @situacionTrabajador END     
  AND DLIC >= 0
  
  DROP TABLE #TEMPO  
  
END  
  
END  
  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGADRELambContratadosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
  
/************************************************************************************************/    
/* Modif. por : Alex Sanchez Ponce (BIF)       */    
/* Fecha Modif : 2010/08/06         */    
/* Descripcion : Se modifico la MaxCuota para que cuando exceda las 99 cuotas le asigne 99  */    
/************************************************************************************************/    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGADRELambContratadosText]      
@codigo_proceso as varCHAR(36),      
@SituacionTrabajador  as CHAR ( 1 ) = '-'      
AS BEGIN      
  
   
    DECLARE @Mes_Periodo as int     
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        


IF @TIPO_CUOTA = 1        
BEGIN 

		      
SELECT TOP 1 @Mes_Periodo =  CASE WHEN Mes_Periodo -1  = 0 THEN 12     
     ELSE Mes_Periodo -1      
    END       
FROM proceso     
WHERE codigo_proceso = @codigo_proceso      
      
 -- RESPINOZ 20070615 - Contratados de DIREL Lambayeque      
 SELECT Depe_id  = CAST ( 15 AS NUMERIC ( 4 ) ),      
 Mes   = @Mes_Periodo,    
 -- 20070813 - se toma el periodo de la cabecera por que SIGA solo toma el ultimo periodo como referencia      
 Anno   = CASE WHEN @Mes_Periodo = 12 THEN  CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4)) END,      
 Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 END AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
 Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),      
 Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),      
 Monto   = CAST ( DLIC as NUMERIC ( 10, 2)),      
 Ncuota   = ISNULL(( SELECT MIN(DLNCT)         
     FROM HistoricoDLCCR     
     WHERE  DLACC  = DLNP  AND    
      Codigo_proceso =@codigo_proceso), 0 ),      
 MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END    
 FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE  ON ( DLNP = DLACC )      
  INNER JOIN dlcnt cnt  on ( cc.dlnp = cnt.DLCACC)      
 WHERE CODIGO_PROCESO  = @codigo_proceso and     
  DLST   = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST      
     ELSE @situacionTrabajador     
      END   and     
  DLNP IN ('233100286407',      
   '233100218048',      
   '233100215429',      
   '233100215409',      
   '233100217379',      
   '233100218304',      
   '233100198756',      
   '233100198870',      
   '233100198517',      
   '233102154121',      
   '233100198518',      
   '233100215430',      
   '233100217662',      
   '233100217503',      
   '233100218314',      
   '233100239958',      
   '233100286896',      
   '233100217378',      
   '233100286662',      
   '233100198185',      
   '233100296929',      
   '233100286456',      
   '233100217367')       
	AND DLIC >= 0
END
	
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	    
SELECT TOP 1 @Mes_Periodo =  CASE WHEN Mes_Periodo -1  = 0 THEN 12     
     ELSE Mes_Periodo -1      
    END       
FROM proceso     
WHERE codigo_proceso = @codigo_proceso      
      
 -- RESPINOZ 20070615 - Contratados de DIREL Lambayeque      
 SELECT Depe_id  = CAST ( 15 AS NUMERIC ( 4 ) ),      
 Mes   = @Mes_Periodo,    
 -- 20070813 - se toma el periodo de la cabecera por que SIGA solo toma el ultimo periodo como referencia      
 Anno   = CASE WHEN @Mes_Periodo = 12 THEN  CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4)) END,      
 Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 END AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
 Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),      
 Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),      
 Monto   = CAST ( CR.DLIMC as NUMERIC ( 10, 2)),      
 Ncuota   = ISNULL(( SELECT MIN(DLNCT)         
     FROM HistoricoDLCCR     
     WHERE  DLACC  = DLNP  AND    
      Codigo_proceso =@codigo_proceso), 0 ),      
 MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END    
 FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE  ON ( DLNP = DLACC )      
  INNER JOIN dlcnt cnt  on ( cc.dlnp = cnt.DLCACC)      
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE cc.CODIGO_PROCESO  = @codigo_proceso and     
  DLST   = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST      
     ELSE @situacionTrabajador     
      END   and     
  DLNP IN ('233100286407',      
   '233100218048',      
   '233100215429',      
   '233100215409',      
   '233100217379',      
   '233100218304',      
   '233100198756',      
   '233100198870',      
   '233100198517',      
   '233102154121',      
   '233100198518',      
   '233100215430',      
   '233100217662',      
   '233100217503',      
   '233100218314',      
   '233100239958',      
   '233100286896',      
   '233100217378',      
   '233100286662',      
   '233100198185',      
   '233100296929',      
   '233100286456',      
   '233100217367')    
	AND DLIC >= 0
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC


	    
SELECT TOP 1 @Mes_Periodo =  CASE WHEN Mes_Periodo -1  = 0 THEN 12     
     ELSE Mes_Periodo -1      
    END       
FROM proceso     
WHERE codigo_proceso = @codigo_proceso      
      
 -- RESPINOZ 20070615 - Contratados de DIREL Lambayeque      
	SELECT Depe_id  = CAST ( 15 AS NUMERIC ( 4 ) ),      
	Mes   = @Mes_Periodo,    
	-- 20070813 - se toma el periodo de la cabecera por que SIGA solo toma el ultimo periodo como referencia      
	Anno   = CASE WHEN @Mes_Periodo = 12 THEN  CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4)) END,      
	Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
	SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 END AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
	Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),      
	Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),      
	Monto   = CAST (T.CUOTA as NUMERIC ( 10, 2)),      
	Ncuota   = ISNULL(( SELECT MIN(DLNCT)         
    FROM HistoricoDLCCR     
    WHERE  DLACC  = DLNP  AND    
    Codigo_proceso =@codigo_proceso), 0 ),      
	MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END    
	FROM CLIENTECUOTA CC     
	INNER JOIN DLCRE  ON ( DLNP = DLACC )      
	INNER JOIN dlcnt cnt  on ( cc.dlnp = cnt.DLCACC)      
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	WHERE cc.CODIGO_PROCESO  = @codigo_proceso and     
	DLST   = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST      
    ELSE @situacionTrabajador     
    END   and     
	DLNP IN ('233100286407',      
	'233100218048',      
	'233100215429',      
	'233100215409',      
	'233100217379',      
	'233100218304',      
	'233100198756',      
	'233100198870',      
	'233100198517',      
	'233102154121',      
	'233100198518',      
	'233100215430',      
	'233100217662',      
	'233100217503',      
	'233100218314',      
	'233100239958',      
	'233100286896',      
	'233100217378',      
	'233100286662',      
	'233100198185',      
	'233100296929',      
	'233100286456',      
	'233100217367')    
	AND DLIC >= 0
	
	


	DROP TABLE #TEMPO

END

END



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGADRELambUgelChiclayoText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
  
    
    
/************************************************************************************************/      
/* Modif. por : Alex Sanchez Ponce (BIF)       */      
/* Fecha Modif : 2010/08/06         */      
/* Descripcion : Se modifico la MaxCuota para que cuando exceda las 99 cuotas le asigne 99  */      
/*				 MOD 04/11/2014 NCA: SE CAMBIO TAMAÑO DEL NUMERIC DE 2 A 3 */
/************************************************************************************************/      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGADRELambUgelChiclayoText]                
@codigo_proceso  AS VARCHAR(36),                
@SituacionTrabajador   AS CHAR ( 1 ) = '-'                
AS                
BEGIN        
    
    
        
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
IF @TIPO_CUOTA = 1          
BEGIN   
  
      
SELECT Depe_id  = CAST ( 15 AS NUMERIC ( 4 ) ),                
 Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,                      
 Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,                
 Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                
 SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' THEN 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                
 Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),                
 Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),                
 Monto   = CAST ( DLIC as NUMERIC ( 10, 2)),                
 Ncuota   = CAST ( dlccp1 as NUMERIC ( 3 ))+1,                --MOD 04/11/2014 NCA
 MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END              
FROM CLIENTECUOTA CC       
 INNER JOIN DLCRE  ON ( DLNP = DLACC )                
 INNER JOIN dlcnt cnt  ON ( cc.dlnp = cnt.DLCACC)                
WHERE CODIGO_PROCESO = @codigo_proceso  AND       
 RTRIM(LTRIM(dlcus)) in ( 'CM')           AND      
 DLST = CASE  WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST                
   ELSE @situacionTrabajador       
  END  
 AND DLIC >= 0                
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
 SELECT Depe_id  = CAST ( 15 AS NUMERIC ( 4 ) ),                
 Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,                      
 Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,                
 Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                
 SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' THEN 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                
 Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),                
 Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),                
 Monto   = CAST ( CR.DLIMC as NUMERIC ( 10, 2)),                
 Ncuota   = CAST ( dlccp1 as NUMERIC ( 3 ))+1,                --MOD 04/11/2014 NCA
 MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END              
FROM CLIENTECUOTA CC       
 INNER JOIN DLCRE  ON ( DLNP = DLACC )                
 INNER JOIN dlcnt cnt  ON ( cc.dlnp = cnt.DLCACC)                
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
WHERE cc.CODIGO_PROCESO = @codigo_proceso  AND       
 RTRIM(LTRIM(dlcus)) in ( 'CM')           AND      
 DLST = CASE  WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST                
   ELSE @situacionTrabajador       
  END                
  AND DLIC >= 0    
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <  
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE DLIC >= 0  
 GROUP BY CR.DLACC  
  
  
  SELECT Depe_id  = CAST ( 15 AS NUMERIC ( 4 ) ),                
  Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,                      
  Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,                
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' THEN 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                
  Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),                
  Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),                
  Monto   = CAST ( T.CUOTA as NUMERIC ( 10, 2)),                
  Ncuota   = CAST ( dlccp1 as NUMERIC ( 3 ))+1,                --MOD 04/11/2014 NCA
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END              
  FROM CLIENTECUOTA CC       
  INNER JOIN DLCRE  ON ( DLNP = DLACC )                
  INNER JOIN dlcnt cnt  ON ( cc.dlnp = cnt.DLCACC)                
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
  WHERE cc.CODIGO_PROCESO = @codigo_proceso  AND       
  RTRIM(LTRIM(dlcus)) in ( 'CM')           AND      
  DLST = CASE  WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST                
  ELSE @situacionTrabajador       
  END                
  AND DLIC >= 0  
  
  DROP TABLE #TEMPO  
  
END  
  
END  
  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGADRELambUgelFerreniafeText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
/************************************************************************************************/    
/* Modif. por : Alex Sanchez Ponce (BIF)       */    
/* Fecha Modif : 2010/08/06         */    
/* Descripcion : Se modifico la MaxCuota para que cuando exceda las 99 cuotas le asigne 99  */    
/************************************************************************************************/    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGADRELambUgelFerreniafeText]              
@codigo_proceso as varCHAR(36),              
@SituacionTrabajador  as CHAR ( 1 ) = '-'              
AS              
BEGIN       
  
  
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT Depe_id  = CAST (18 AS NUMERIC ( 4 ) ),              
  Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,      
  Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,                                 
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),              
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' then 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),              
  Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),              
  Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),              
  Monto   = CAST (DLIC AS NUMERIC ( 10, 2)),              
  Ncuota   = CAST (dlccp1 AS NUMERIC ( 2 )) +1,              
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END          
 FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE ON ( DLNP = DLACC )              
  INNER JOIN dlcnt cnt ON ( cc.dlnp = cnt.DLCACC)              
 WHERE CODIGO_PROCESO   = @codigo_proceso  AND     
  RTRIM(LTRIM(dlcus)) in ( 'CO')            AND    
  DLST  =  CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST              
     ELSE @situacionTrabajador     
    END 
	AND DLIC >= 0             
    
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	        
 SELECT Depe_id  = CAST (18 AS NUMERIC ( 4 ) ),              
  Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,      
  Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,                                 
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),              
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' then 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),              
  Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),              
  Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),              
  Monto   = CAST (CR.DLIMC AS NUMERIC ( 10, 2)),              
  Ncuota   = CAST (dlccp1 AS NUMERIC ( 2 )) +1,              
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END          
 FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE ON ( DLNP = DLACC )              
  INNER JOIN dlcnt cnt ON ( cc.dlnp = cnt.DLCACC)  
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                              
 WHERE cc.CODIGO_PROCESO   = @codigo_proceso  AND     
  RTRIM(LTRIM(dlcus)) in ( 'CO')            AND    
  DLST  =  CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST              
     ELSE @situacionTrabajador     
    END  
	AND DLIC >= 0            
    
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	        
		SELECT Depe_id  = CAST (18 AS NUMERIC ( 4 ) ),              
		Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,      
		Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,                                 
		Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),              
		SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' then 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),              
		Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),              
		Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),              
		Monto   = CAST (T.CUOTA AS NUMERIC ( 10, 2)),              
		Ncuota   = CAST (dlccp1 AS NUMERIC ( 2 )) +1,              
		MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END          
		FROM CLIENTECUOTA CC     
		INNER JOIN DLCRE ON ( DLNP = DLACC )              
		INNER JOIN dlcnt cnt ON ( cc.dlnp = cnt.DLCACC)  
		--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                              
		INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
		WHERE cc.CODIGO_PROCESO   = @codigo_proceso  AND     
		RTRIM(LTRIM(dlcus)) in ( 'CO')            AND    
		DLST  =  CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST              
		ELSE @situacionTrabajador     
		END              
		AND DLIC >= 0
		DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGADRELambUgelLambayequeText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

  
    
    
/************************************************************************************************/      
/* Modif. por : Alex Sanchez Ponce (BIF)       */      
/* Fecha Modif : 2010/08/06         */      
/* Descripcion : Se modifico la MaxCuota para que cuando exceda las 99 cuotas le asigne 99  */      
/************************************************************************************************/      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGADRELambUgelLambayequeText]                
@codigo_proceso  AS VARCHAR(36),                
@SituacionTrabajador   AS CHAR(1) = '-'                
AS BEGIN      
    
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
   
 SELECT Depe_id  = CAST ( 16 AS NUMERIC(4)),                
  Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP -1 END  AS NUMERIC ( 2)) ,                
  --Anno   = CAST ( DLAP AS NUMERIC (4)) ,                
  anno = CAST ((CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END) AS NUMERIC (4)) ,                
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 when DLST ='I' then 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                
  Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as char(35)),                
  Nombres  = CAST(RTRIM(LTRIM(DLMN)) AS char(35)),                
  Monto   = CAST ( DLIC AS NUMERIC ( 10, 2)),                
  Ncuota  = CAST ( dlccp1 AS NUMERIC (2)) +1,                
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      
 FROM CLIENTECUOTA CC       
  INNER JOIN DLCRE ON ( DLNP = DLACC )                
    INNER JOIN dlcnt cnt ON ( cc.dlnp = cnt.DLCACC)                
 WHERE CODIGO_PROCESO   = @codigo_proceso AND      
  RTRIM(LTRIM(dlcus)) in ( 'CN')           AND       
  DLST  = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST                
     ELSE @situacionTrabajador       
    END   
  AND DLIC >= 0               
  
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
 SELECT Depe_id  = CAST ( 16 AS NUMERIC(4)),                
  Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP -1 END  AS NUMERIC ( 2)) ,                
  --Anno   = CAST ( DLAP AS NUMERIC (4)) ,                
  anno = CAST ((CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END) AS NUMERIC (4)) ,                
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 when DLST ='I' then 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                
  Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as char(35)),                
  Nombres  = CAST(RTRIM(LTRIM(DLMN)) AS char(35)),                
  Monto   = CAST ( CR.DLIMC AS NUMERIC ( 10, 2)),                
  Ncuota  = CAST ( dlccp1 AS NUMERIC (2)) +1,                
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      
 FROM CLIENTECUOTA CC       
  INNER JOIN DLCRE ON ( DLNP = DLACC )                
  INNER JOIN dlcnt cnt ON ( cc.dlnp = cnt.DLCACC)     
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                               
 WHERE cc.CODIGO_PROCESO   = @codigo_proceso AND      
  RTRIM(LTRIM(dlcus)) in ( 'CN')           AND       
  DLST  = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST                
     ELSE @situacionTrabajador       
    END    
  AND DLIC >= 0       
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE DLIC >= 0  
 GROUP BY CR.DLACC  
  
  
  SELECT Depe_id  = CAST ( 16 AS NUMERIC(4)),                
  Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP -1 END  AS NUMERIC ( 2)) ,                
  --Anno   = CAST ( DLAP AS NUMERIC (4)) ,                
  anno = CAST ((CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END) AS NUMERIC (4)) ,                
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 when DLST ='I' then 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                
  Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as char(35)),                
  Nombres  = CAST(RTRIM(LTRIM(DLMN)) AS char(35)),                
  Monto   = CAST (T.CUOTA AS NUMERIC ( 10, 2)),                
  Ncuota  = CAST ( dlccp1 AS NUMERIC (2)) +1,                
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      
  FROM CLIENTECUOTA CC       
  INNER JOIN DLCRE ON ( DLNP = DLACC )                
  INNER JOIN dlcnt cnt ON ( cc.dlnp = cnt.DLCACC)     
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                               
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
  WHERE cc.CODIGO_PROCESO   = @codigo_proceso AND      
  RTRIM(LTRIM(dlcus)) in ( 'CN')           AND       
  DLST  = CASE WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST                
  ELSE @situacionTrabajador       
  END       
  AND DLIC >= 0    
  
  DROP TABLE #TEMPO  
  
END  
  
END  
  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGADRELambUgelMotupeText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
/************************************************************************************************/    
/* Modif. por : Alex Sanchez Ponce (BIF)       */    
/* Fecha Modif : 2010/08/06         */    
/* Descripcion : Se modifico la MaxCuota para que cuando exceda las 99 cuotas le asigne 99  */    
/************************************************************************************************/    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGADRELambUgelMotupeText]                  
@codigo_proceso  AS VARCHAR(36),                  
@SituacionTrabajador   AS CHAR ( 1 ) = '-'                  
AS                  
BEGIN        
     
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 
		  SELECT Depe_id  = CAST ( 2174 AS NUMERIC ( 4 ) ),                  
  Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,        
  Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,         
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                  
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' then 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                  
  Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as char(35)),                  
  Nombres  = CAST(RTRIM(LTRIM(DLMN)) as char(35)),                  
  Monto   = CAST ( DLIC as NUMERIC ( 10, 2)),                  
  Ncuota   = CAST ( dlccp1 as NUMERIC ( 2 )) + 1,                  
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END          
 FROM  CLIENTECUOTA CC     
  INNER JOIN DLCRE ON ( DLNP = DLACC )                  
  INNER JOIN dlcnt cnt on ( cc.dlnp = cnt.DLCACC)                  
 WHERE CODIGO_PROCESO = @codigo_proceso  AND    
  RTRIM(LTRIM(dlcus)) in ( 'MO')   AND    
  DLST = CASE  WHEN RTRIM( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador     
   END  
   AND DLIC >= 0                


END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT Depe_id  = CAST ( 2174 AS NUMERIC ( 4 ) ),                  
  Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,        
  Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,         
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                  
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' then 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                  
  Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as char(35)),                  
  Nombres  = CAST(RTRIM(LTRIM(DLMN)) as char(35)),                  
  Monto   = CAST ( CR.DLIMC as NUMERIC ( 10, 2)),                  
  Ncuota   = CAST ( dlccp1 as NUMERIC ( 2 )) + 1,                  
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END          
 FROM  CLIENTECUOTA CC     
  INNER JOIN DLCRE ON ( DLNP = DLACC )                  
  INNER JOIN dlcnt cnt on ( cc.dlnp = cnt.DLCACC)                   
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE cc.CODIGO_PROCESO = @codigo_proceso  AND    
  RTRIM(LTRIM(dlcus)) in ( 'MO')   AND    
  DLST = CASE  WHEN RTRIM( @situacionTrabajador ) = '-' then DLST                  
    ELSE @situacionTrabajador     
   END   
 AND DLIC >= 0               
 
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
    WHERE DLIC >= 0
	GROUP BY CR.DLACC

		SELECT Depe_id  = CAST ( 2174 AS NUMERIC ( 4 ) ),                  
		Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,        
		Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,         
		Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                  
		SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' then 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                  
		Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as char(35)),                  
		Nombres  = CAST(RTRIM(LTRIM(DLMN)) as char(35)),                  
		Monto   = CAST ( T.CUOTA as NUMERIC ( 10, 2)),                  
		Ncuota   = CAST ( dlccp1 as NUMERIC ( 2 )) + 1,                  
		MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END          
		FROM  CLIENTECUOTA CC     
		INNER JOIN DLCRE ON ( DLNP = DLACC )                  
		INNER JOIN dlcnt cnt on ( cc.dlnp = cnt.DLCACC)                   
		--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
		INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
		WHERE cc.CODIGO_PROCESO = @codigo_proceso  AND    
		RTRIM(LTRIM(dlcus)) in ( 'MO')   AND    
		DLST = CASE  WHEN RTRIM( @situacionTrabajador ) = '-' then DLST                  
		ELSE @situacionTrabajador     
		END  
		AND DLIC >= 0                
	
		DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGADRELambUgelOlmosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

  
  
  
/************************************************************************************************/    
/* Modif. por : Alex Sanchez Ponce (BIF)       */    
/* Fecha Modif : 2010/08/06         */    
/* Descripcion : Se modifico la MaxCuota para que cuando exceda las 99 cuotas le asigne 99  */    
/************************************************************************************************/    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGADRELambUgelOlmosText] --'6ACE8C97-1414-4FEE-A33E-FE447C98967B','-'                     
@codigo_proceso  AS VARCHAR(36),                      
@SituacionTrabajador   AS CHAR ( 1 ) = '-'                      
AS                      
BEGIN       
  
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        


IF @TIPO_CUOTA = 1        
BEGIN 
	SELECT Depe_id  = CAST ( 2175 AS NUMERIC ( 4 ) ),                      
  Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,          
  Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,                      
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                      
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' THEN 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                      
  Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),                      
  Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),                      
  Monto   = CAST ( DLIC as NUMERIC ( 10, 2)),                      
  Ncuota   = CAST ( dlccp1 as NUMERIC ( 2 )) +1,                      
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END                   
 FROM  CLIENTECUOTA CC     
  INNER JOIN DLCRE  ON ( DLNP = DLACC )                      
  INNER JOIN dlcnt cnt  ON ( cc.dlnp = cnt.DLCACC)                      
 WHERE CODIGO_PROCESO = @codigo_proceso AND    
  RTRIM(LTRIM(dlcus)) in ( 'OL')  AND    
  DLST = CASE  WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST                      
    ELSE @situacionTrabajador     
   END
   AND DLIC >= 0                      
  

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   
	
	SELECT Depe_id  = CAST ( 2175 AS NUMERIC ( 4 ) ),                      
  Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,          
  Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,                      
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                      
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' THEN 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                      
  Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),                      
  Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),                      
  Monto   = CAST ( CR.DLIMC as NUMERIC ( 10, 2)),                      
  Ncuota   = CAST ( dlccp1 as NUMERIC ( 2 )) +1,                      
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END                   
 FROM  CLIENTECUOTA CC     
  INNER JOIN DLCRE  ON ( DLNP = DLACC )                      
  INNER JOIN dlcnt cnt  ON ( cc.dlnp = cnt.DLCACC)                      
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE cc.CODIGO_PROCESO = @codigo_proceso AND    
  RTRIM(LTRIM(dlcus)) in ( 'OL')  AND    
  DLST = CASE  WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST                      
    ELSE @situacionTrabajador     
   END  
   AND DLIC >= 0                    
 
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
    WHERE DLIC >= 0
	GROUP BY CR.DLACC

	
	SELECT Depe_id  = CAST ( 2175 AS NUMERIC ( 4 ) ),                      
  Mes   = CAST (CASE WHEN DLMP = '1' THEN '12' ELSE DLMP - 1 END  AS NUMERIC ( 2)) ,          
  Anno   = CAST (CASE WHEN DLMP = '1' THEN DLAP - 1 ELSE DLAP END AS NUMERIC (4)) ,                      
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),                      
  SitLaboral  = CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 WHEN DLST ='I' THEN 2 WHEN DLST = 'O' THEN 15 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),                      
  Apellidos  = CAST(RTRIM(LTRIM(DLPA)) +' ' + RTRIM(LTRIM(DLMA)) as CHAR(35)),                      
  Nombres  = CAST(RTRIM(LTRIM(DLMN)) as CHAR(35)),                      
  Monto   = CAST (T.CUOTA as NUMERIC ( 10, 2)),                      
  Ncuota   = CAST ( dlccp1 as NUMERIC ( 2 )) +1,                      
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END                   
 FROM  CLIENTECUOTA CC     
  INNER JOIN DLCRE  ON ( DLNP = DLACC )                      
  INNER JOIN dlcnt cnt  ON ( cc.dlnp = cnt.DLCACC)                      
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
 WHERE cc.CODIGO_PROCESO = @codigo_proceso AND    
  RTRIM(LTRIM(dlcus)) in ( 'OL')  AND    
  DLST = CASE  WHEN RTRIM( @situacionTrabajador ) = '-' THEN DLST                      
    ELSE @situacionTrabajador     
   END                      
	AND DLIC >= 0 

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGADRSLActivosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
    
    
    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGADRSLActivosText]      
@codigo_proceso as varchar(36),      
@SituacionTrabajador  as char ( 1 ) = '-'      
AS      
BEGIN      
    
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
  
 SELECT Depe_id = CAST ( 4 AS NUMERIC ( 4 ) ),      
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral =  CAST( 1   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
 Monto = cast ( DLIC as numeric ( 10, 2)),      
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,      
 Ncuota = isnull (       
   (SELECT MIN ( DLNCT )         
   FROM HistoricoDLCCR WHERE DLACC = DLNP      
   and Codigo_proceso =@codigo_proceso), 0 ),      
      
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1       
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
 WHERE CODIGO_PROCESO = @codigo_proceso
 AND DLIC >= 0
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END*/      
  --and DLST ='A'      
   
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
 SELECT Depe_id = CAST ( 4 AS NUMERIC ( 4 ) ),      
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral =  CAST( 1   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),      
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,      
 Ncuota = isnull (       
   (SELECT MIN ( DLNCT )         
   FROM HistoricoDLCCR WHERE DLACC = DLNP      
   and Codigo_proceso =@codigo_proceso), 0 ),      
      
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1       
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
 WHERE cc.CODIGO_PROCESO = @codigo_proceso
 AND DLIC >= 0
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END*/      
  --and DLST ='A'      
    
  
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <  
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
WHERE DLIC >= 0
 GROUP BY CR.DLACC  
  

 SELECT Depe_id = CAST ( 4 AS NUMERIC ( 4 ) ),      
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral =  CAST( 1   AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),      
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
 Monto = cast ( T.CUOTA as numeric ( 10, 2)),      
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,      
 Ncuota = isnull (       
   (SELECT MIN ( DLNCT )         
   FROM HistoricoDLCCR WHERE DLACC = DLNP      
   and Codigo_proceso =@codigo_proceso), 0 ),      
      
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1       
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
 WHERE cc.CODIGO_PROCESO = @codigo_proceso
 AND DLIC >= 0
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END*/      
  --and DLST ='A'      
    
  
   
   
  
  
 DROP TABLE #TEMPO  
  
END  
  
END  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGADRSLCesantesText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
    
    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGADRSLCesantesText]      
@codigo_proceso as varchar(36),      
@SituacionTrabajador  as char ( 1 ) = '-'      
AS      
BEGIN      
    
        
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          
  
  
  
IF @TIPO_CUOTA = 1          
BEGIN   
  SELECT Depe_id = CAST ( 4 AS NUMERIC ( 4 ) ),      
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral = CASE WHEN DLNP = '233100240073' THEN 9       
    WHEN DLNP = '233100240071' THEN 19 ELSE  CAST(  9   AS NUMERIC ( 2)) END ,        
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
 Monto = cast ( DLIC as numeric ( 10, 2)),      
 Ncuota = isnull (       
   (SELECT MIN ( DLNCT )         
   FROM HistoricoDLCCR WHERE DLACC = DLNP      
   and Codigo_proceso =@codigo_proceso), 0 ),      
  --- cast ( dlccp1 as numeric ( 2 )) +2,      
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      -- cast ( dlcnc1 as numeric ( 2 )) --+ 1       
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
 WHERE CODIGO_PROCESO = @codigo_proceso
	AND DLIC >= 0
	--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END*/      
  --and DLST in ( 'C', 'S')      
   
   
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
 SELECT Depe_id = CAST ( 4 AS NUMERIC ( 4 ) ),      
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral = CASE WHEN DLNP = '233100240073' THEN 9       
    WHEN DLNP = '233100240071' THEN 19 ELSE  CAST(  9   AS NUMERIC ( 2)) END ,        
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),      
 Ncuota = isnull (       
   (SELECT MIN ( DLNCT )         
   FROM HistoricoDLCCR WHERE DLACC = DLNP      
   and Codigo_proceso =@codigo_proceso), 0 ),      
  --- cast ( dlccp1 as numeric ( 2 )) +2,      
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1       
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
 WHERE cc.CODIGO_PROCESO = @codigo_proceso
AND DLIC >= 0
	--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END*/      
  --and DLST in ( 'C', 'S')      
      
   
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
   
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'  
    INTO #TEMPO  
 FROM ClienteCuota CC  
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE DLIC >= 0
 GROUP BY CR.DLACC  
  
  
 SELECT Depe_id = CAST ( 4 AS NUMERIC ( 4 ) ),      
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,      
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,      
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
 SitLaboral = CASE WHEN DLNP = '233100240073' THEN 9       
    WHEN DLNP = '233100240071' THEN 19 ELSE  CAST(  9   AS NUMERIC ( 2)) END ,        
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),      
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),      
 Monto = cast ( T.CUOTA as numeric ( 10, 2)),      
 Ncuota = isnull (       
   (SELECT MIN ( DLNCT )         
   FROM HistoricoDLCCR WHERE DLACC = DLNP      
   and Codigo_proceso =@codigo_proceso), 0 ),      
  --- cast ( dlccp1 as numeric ( 2 )) +2,      
 MaxCuota = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99 ELSE CAST(dlcnc1 AS NUMERIC(2)) END      --cast ( dlcnc1 as numeric ( 2 )) --+ 1       
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )      
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)      
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )      
 WHERE cc.CODIGO_PROCESO = @codigo_proceso
 AND DLIC >= 0
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'      
  /*and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END*/      
  --and DLST in ( 'C', 'S')      
      
    
  
 DROP TABLE #TEMPO  
  
END  
  
END  
  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGADRSLText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
/************************************************************************************************/    
/* Modif. por : Alex Sanchez Ponce (BIF)       */    
/* Fecha Modif : 2010/08/04         */    
/* Descripcion : Se modifico la MaxCuota para que cuando exceda las 99 cuotas le asigne 99  */    
/************************************************************************************************/    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGADRSLText]      
@codigo_proceso as varchar(36),      
@SituacionTrabajador  as char ( 1 ) = '-'      
AS      
BEGIN      
  
  
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        


IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT Depe_id  = CAST ( 4 AS NUMERIC ( 4 ) ),      
  Mes   = CASE  WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12     
     ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2))     
      END,      
  Anno   = CASE  WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))      
     ELSE CAST ( DLAP AS NUMERIC (4))      
      END,      
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
  SitLaboral  = CAST( CASE  WHEN DLST = 'A' THEN 1      
      WHEN DLST = 'C' THEN 9      
      WHEN DLST = 'S' THEN 19     
      WHEN DLST = 'I' THEN 2     
      when DLST = 'O' THEN 15     
      ELSE 0     
      END AS NUMERIC(2)),    
  Apellidos  = CAST(rtrim(ltrim(DLPA)) + ' ' + rtrim(ltrim(DLMA)) AS CHAR(35)),      
  Nombres  = CAST(rtrim(ltrim(DLMN)) AS CHAR(35)),      
  Monto   = CAST( DLIC AS NUMERIC(10,2)),      
  Ncuota   = ISNULL(     ( SELECT  MIN(DLNCT)         
         FROM  HistoricoDLCCR     
      WHERE  DLACC = DLNP  and     
       Codigo_proceso =@codigo_proceso), 0),      
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99     
     ELSE CAST(dlcnc1 as numeric(3))     
       END    
 FROM  CLIENTECUOTA CC     
  INNER JOIN DLCRE ON ( DLNP = DLACC )      
    INNER JOIN dlcnt cnt ON ( cc.dlnp = cnt.DLCACC)      
 WHERE  CODIGO_PROCESO  = @codigo_proceso AND     
  DLST   = CASE WHEN RTRIM(@situacionTrabajador) = '-' THEN DLST      
         ELSE @situacionTrabajador     
       END  
  AND DLIC >= 0    
      
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT Depe_id  = CAST ( 4 AS NUMERIC ( 4 ) ),      
  Mes   = CASE  WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12     
     ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2))     
      END,      
  Anno   = CASE  WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))      
     ELSE CAST ( DLAP AS NUMERIC (4))      
      END,      
  Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
  SitLaboral  = CAST( CASE  WHEN DLST = 'A' THEN 1      
      WHEN DLST = 'C' THEN 9      
      WHEN DLST = 'S' THEN 19     
      WHEN DLST = 'I' THEN 2     
      when DLST = 'O' THEN 15     
      ELSE 0     
      END AS NUMERIC(2)),    
  Apellidos  = CAST(rtrim(ltrim(DLPA)) + ' ' + rtrim(ltrim(DLMA)) AS CHAR(35)),      
  Nombres  = CAST(rtrim(ltrim(DLMN)) AS CHAR(35)),      
  Monto   = CAST( CR.DLIMC AS NUMERIC(10,2)),      
  Ncuota   = ISNULL(     ( SELECT  MIN(DLNCT)         
         FROM  HistoricoDLCCR     
      WHERE  DLACC = DLNP  and     
       Codigo_proceso =@codigo_proceso), 0),      
  MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99     
     ELSE CAST(dlcnc1 as numeric(3))     
       END    
 FROM  CLIENTECUOTA CC     
  INNER JOIN DLCRE ON ( DLNP = DLACC )      
    INNER JOIN dlcnt cnt ON ( cc.dlnp = cnt.DLCACC)      
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
 WHERE  cc.CODIGO_PROCESO  = @codigo_proceso AND     
  DLST   = CASE WHEN RTRIM(@situacionTrabajador) = '-' THEN DLST      
         ELSE @situacionTrabajador     
       END      
 AND DLIC >= 0
	
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	
		SELECT Depe_id  = CAST ( 4 AS NUMERIC ( 4 ) ),      
		Mes   = CASE  WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12     
		ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2))     
		END,      
		Anno   = CASE  WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))      
		ELSE CAST ( DLAP AS NUMERIC (4))      
		END,      
		Dni   = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),      
		SitLaboral  = CAST( CASE  WHEN DLST = 'A' THEN 1      
		WHEN DLST = 'C' THEN 9      
		WHEN DLST = 'S' THEN 19     
		WHEN DLST = 'I' THEN 2     
		when DLST = 'O' THEN 15     
		ELSE 0     
		END AS NUMERIC(2)),    
		Apellidos  = CAST(rtrim(ltrim(DLPA)) + ' ' + rtrim(ltrim(DLMA)) AS CHAR(35)),      
		Nombres  = CAST(rtrim(ltrim(DLMN)) AS CHAR(35)),      
		Monto   = CAST( T.CUOTA AS NUMERIC(10,2)),      
		Ncuota   = ISNULL(     ( SELECT  MIN(DLNCT)         
        FROM  HistoricoDLCCR     
		WHERE  DLACC = DLNP  and     
		Codigo_proceso =@codigo_proceso), 0),      
		MaxCuota  = CASE WHEN CAST(dlcnc1 AS NUMERIC(3)) > 99 THEN 99     
		ELSE CAST(dlcnc1 as numeric(3))     
		END    
		FROM  CLIENTECUOTA CC     
		INNER JOIN DLCRE ON ( DLNP = DLACC )      
		INNER JOIN dlcnt cnt ON ( cc.dlnp = cnt.DLCACC)      
		--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
		INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
		WHERE  cc.CODIGO_PROCESO  = @codigo_proceso AND     
		DLST   = CASE WHEN RTRIM(@situacionTrabajador) = '-' THEN DLST      
		ELSE @situacionTrabajador 
		END      
		AND DLIC >= 0

	DROP TABLE #TEMPO

END

END

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGAHOSPITALREGIONALDOCENTEMERCEDESActivosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
/************************************************************************************************/    
/* Modif. por : Alex Sanchez Ponce (BIF)       */    
/* Fecha Modif : 2010/08/04         */    
/* Descripcion : Se modifico la MaxCuota para que cuando exceda las 99 cuotas le asigne 99  */    
/************************************************************************************************/    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGAHOSPITALREGIONALDOCENTEMERCEDESActivosText]    
@codigo_proceso as varchar(36),    
@SituacionTrabajador  as char ( 1 ) = '-'    
AS    
BEGIN    
  
  
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        



IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT Depe_id = CAST ( 1310 AS NUMERIC ( 4 ) ),    
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,    
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,    
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 --SitLaboral =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 SitLaboral =  CAST(1 AS NUMERIC ( 2)),      
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
 Monto = cast ( DLIC as numeric ( 10, 2)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = CASE WHEN cast(dlcnc1 as numeric(3)) > 99 THEN 99 ELSE cast(dlcnc1 as numeric(3)) END--+ 1     
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND DLIC >= 0


END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT Depe_id = CAST ( 1310 AS NUMERIC ( 4 ) ),    
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,    
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,    
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 --SitLaboral =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 SitLaboral =  CAST(1 AS NUMERIC ( 2)),      
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = CASE WHEN cast(dlcnc1 as numeric(3)) > 99 THEN 99 ELSE cast(dlcnc1 as numeric(3)) END--+ 1     
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
   ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND DLIC >= 0
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

		SELECT Depe_id = CAST ( 1310 AS NUMERIC ( 4 ) ),    
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,    
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,    
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 --SitLaboral =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 SitLaboral =  CAST(1 AS NUMERIC ( 2)),      
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
 Monto = cast ( T.CUOTA as numeric ( 10, 2)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = CASE WHEN cast(dlcnc1 as numeric(3)) > 99 THEN 99 ELSE cast(dlcnc1 as numeric(3)) END--+ 1     
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
   ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND DLIC >= 0
  
	DROP TABLE #TEMPO

END

END
        

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSIGAHOSPITALREGIONALDOCENTEMERCEDESText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
/************************************************************************************************/    
/* Modif. por : Alex Sanchez Ponce (BIF)       */    
/* Fecha Modif : 2010/08/04         */    
/* Descripcion : Se modifico la MaxCuota para que cuando exceda las 99 cuotas le asigne 99  */    
/************************************************************************************************/    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSIGAHOSPITALREGIONALDOCENTEMERCEDESText]    
@codigo_proceso as varchar(36),    
@SituacionTrabajador  as char ( 1 ) = '-'    
AS    
BEGIN    
  
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        



IF @TIPO_CUOTA = 1        
BEGIN 

		SELECT Depe_id = CAST ( 1310 AS NUMERIC ( 4 ) ),    
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,    
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,    
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 SitLaboral =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
 Monto = cast ( DLIC as numeric ( 10, 2)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = CASE WHEN cast(dlcnc1 as numeric(3)) > 99 THEN 99 ELSE cast(dlcnc1 as numeric(3)) END--+ 1     
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND DLIC >= 0
 
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT Depe_id = CAST ( 1310 AS NUMERIC ( 4 ) ),    
 Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,    
 Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,    
 Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 SitLaboral =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = CASE WHEN cast(dlcnc1 as numeric(3)) > 99 THEN 99 ELSE cast(dlcnc1 as numeric(3)) END--+ 1     
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND DLIC >= 0

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC


		SELECT Depe_id = CAST ( 1310 AS NUMERIC ( 4 ) ),    
		Mes = CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN 12 ELSE CAST ( DLMP  - 1 AS NUMERIC ( 2)) END,    
		Anno =  CASE WHEN CAST ( DLMP  - 1 AS NUMERIC ( 2)) = 0 THEN CAST ( DLAP -1 AS NUMERIC (4))  ELSE CAST ( DLAP AS NUMERIC (4))  END,    
		Dni =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
		SitLaboral =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
		Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
		Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
		Monto = cast (T.CUOTA as numeric ( 10, 2)),    
		-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
		Ncuota = isnull (     
		(SELECT MIN ( DLNCT )       
		FROM HistoricoDLCCR WHERE DLACC = DLNP    
		and Codigo_proceso =@codigo_proceso), 0 ),    
		MaxCuota = CASE WHEN cast(dlcnc1 as numeric(3)) > 99 THEN 99 ELSE cast(dlcnc1 as numeric(3)) END--+ 1     
		FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
		inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
		INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
		--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
		---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
		WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
		and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
		ELSE @situacionTrabajador END    
		AND DLIC >= 0

		DROP TABLE #TEMPO

END

END
        

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoStandarAntiguoActivosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoStandarAntiguoActivosText]           

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
                      
 --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                     
 IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                     
 BEGIN  -- 2                      
                                  
 SELECT CodigoBanco = cast (                                      
    CASE WHEN @NumeroDocumento = '129846873' THEN                                      
     '175'                                      
 WHEN  @NumeroDocumento = '190827890' THEN                                      
     '38'                                      
    ELSE                                      
     'BIF'                                       
    END                                      
    as varchar(12)),                                       
 Moneda =  cast ( DLMO as varchar(3)),                                      
 NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
 CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
    ELSE                                      
    cast ( [DLCR] as varchar(20))                                      
    end,                                      
 Anio = cast ( [DLAP] as varchar(4)),                                      
 Mes = cast ( [DLMP] as varchar(2)),                                      
 Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
 SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
 MontoDescuento = cast ( 0 as varchar(14)),                                      
 SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
 WHERE [Codigo_proceso] = @Codigo_proceso                                    
 AND DLST= 'A'  
    AND DLIC >= 0                   
 ORDER BY DLMO, [DLNE]                       
                          
                      
 END  -- 2                      
 ELSE                                  
  BEGIN -- 3                                 
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
   BEGIN   -- 4                                 
                                      
    SELECT CodigoBanco = cast (CASE WHEN @NumeroDocumento = '129846873' THEN '175'                                      
    WHEN  @NumeroDocumento = '190827890' THEN '38' ELSE 'BIF' END as varchar(12)),                                  
    Moneda =  cast ( DLMO as varchar(3)),                                      
    NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
    CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
    CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
    ELSE                                      
    cast ( [DLCR] as varchar(20))                                      
    end,                                      
    Anio = cast ( [DLAP] as varchar(4)),                                      
    Mes = cast ( [DLMP] as varchar(2)),                                      
    Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
    SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
    MontoDescuento = cast ( 0 as varchar(14)),                                      
    SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
    --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
    WHERE [Codigo_proceso] = @Codigo_proceso                                    
    AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
    AND DLIC >= 0                                  
    ORDER BY DLMO, [DLNE]                                    
                                      
   END  --FIN 4                                 
   ELSE                      
   BEGIN -- 5                                  
    SELECT CodigoBanco = cast (                                      
    CASE WHEN @NumeroDocumento = '129846873' THEN                                      
    '175'                                      
    WHEN  @NumeroDocumento = '190827890' THEN                                      
    '38'   
    ELSE                                      
    'BIF'                                       
    END                                      
    as varchar(12)),                                       
    Moneda =  cast ( DLMO as varchar(3)),                                
    NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
    CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
    CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                               
    ELSE                                      
    CAST( [DLCR] as varchar(20))                                      
    END,                                      
    Anio = cast ( [DLAP] as varchar(4)),                                      
    Mes = cast ( [DLMP] as varchar(2)),                                      
    Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                     
    SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
    MontoDescuento = cast ( 0 as varchar(14)),                                      
    SaldoCredito = cast(CRE.DLPRI as varchar (14))                  
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
    --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                         
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
    WHERE [Codigo_proceso] = @Codigo_proceso                                    
    AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)                                      
    WHERE Codigo_proceso = @Codigo_proceso)                      
    AND DLIC >= 0                               
    ORDER BY DLMO, [DLNE]                                   
                       
   END -- FIN 5                     
      END --FIN 3                      
END  --- FIN 1                      
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN                         
                       
 --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                                    
 IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015        
 BEGIN   -- 1                             
                              
  SELECT CodigoBanco = cast (                       
  CASE WHEN @NumeroDocumento = '129846873' THEN                                      
  '175'                                      
  WHEN  @NumeroDocumento = '190827890' THEN                                      
  '38'                                      
  ELSE                                      
  'BIF'                                       
  END                                      
  as varchar(12)),                                       
  Moneda =  cast ( DLMO as varchar(3)),                                      
  NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
  CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
  CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
  ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                    
  else                                      
  cast ( [DLCR] as varchar(20))                                      
  end,                             
  Anio = cast ( [DLAP] as varchar(4)),                                      
  Mes = cast ( [DLMP] as varchar(2)),                                      
  Cuota =  CR.DLIMC ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
  --Cuota =  DLIC,          
  SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
  MontoDescuento = cast ( 0 as varchar(14)),                                      
  SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST ='A'           
  AND DLIC >= 0                                      
  ORDER BY DLMO, [DLNE]                                      
                        
 END   -- FIN 1                               
                                    
 ELSE                                  
                                   
 BEGIN  -- 2                           
                            
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
  BEGIN                                    
                               
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                                      
   'BIF'                                       
   END                                      
   as varchar(12)),                                       
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                      
 end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = CR.DLIMC,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC,          
   SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                       
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                    
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                             
   INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
   AND DLIC >= 0                                  
 ORDER BY DLMO, [DLNE]                                    
  END                                  
  ELSE                       
    BEGIN                                 
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                          
   '38'                                      
   ELSE                          
   'BIF'                                       
   END                                      
   as varchar(12)),                                 
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                 
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = CR.DLIMC ,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                     
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
   INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                                                
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)   
   WHERE Codigo_proceso = @Codigo_proceso)                       
   AND DLIC >= 0                                 
   ORDER BY DLMO, [DLNE]                                   
  END                              
                            
 END -- FIN 2                           
                      
END                      
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      
  --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                                   
  IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                     
  BEGIN   -- 1                             
                              
  SELECT CodigoBanco = cast (                                      
  CASE WHEN @NumeroDocumento = '129846873' THEN                                      
  '175'                                      
  WHEN  @NumeroDocumento = '190827890' THEN                                      
  '38'                                      
  ELSE                                      
  'BIF'                                       
  END                                      
  as varchar(12)),                                       
  Moneda =  cast ( DLMO as varchar(3)),                                      
  NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
  CodigoModular = ''''+cast([DLCM] as varchar(20)),                  
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
  CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
  ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
  else                                      
  cast ( [DLCR] as varchar(20))                                      
  end,                             
  Anio = cast ( [DLAP] as varchar(4)),                                      
  Mes = cast ( [DLMP] as varchar(2)),                                      
  Cuota =  T.CUOTA ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
--  Cuota =  DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
  SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
  MontoDescuento = cast ( 0 as varchar(14)),                                      
  SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST ='A'                                     
  AND DLIC >= 0                                     
  ORDER BY DLMO, [DLNE]                                      
              
 END   -- FIN 1                               
                                    
 ELSE                                  
                                   
 BEGIN  -- 2                           
                            
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
  BEGIN                                    
                                      
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                          
   'BIF'                                       
   END                                      
   as varchar(12)),                                       
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                      
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                       Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = T.CUOTA,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                   
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                             
   --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
   INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
   AND DLIC >= 0                                  
   ORDER BY DLMO, [DLNE]                                    
  END                                  
  ELSE                       
    BEGIN                                 
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                    
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                                      
   'BIF'                                       
   END                                      
   as varchar(12)),                                 
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                 
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = T.CUOTA ,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
   --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                       
   INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)                                      
   WHERE Codigo_proceso = @Codigo_proceso)                      
   AND DLIC >= 0                                 
   ORDER BY DLMO, [DLNE]                                   
  END                              
                            
 END -- FIN 2                           
                      
                      
 DROP TABLE #TEMPO                      
                      
END                      
                      
END

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoStandarAntiguoCesantesText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoStandarAntiguoCesantesText]           

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
                      
 --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                     
 IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                     
 BEGIN  -- 2                      
                                  
 SELECT CodigoBanco = cast (                                      
    CASE WHEN @NumeroDocumento = '129846873' THEN                                      
     '175'                                      
 WHEN  @NumeroDocumento = '190827890' THEN                                      
     '38'                                      
    ELSE                                      
     'BIF'                                       
    END                                      
    as varchar(12)),                                       
 Moneda =  cast ( DLMO as varchar(3)),                                      
 NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
 CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
    ELSE                                      
    cast ( [DLCR] as varchar(20))                                      
    end,                                      
 Anio = cast ( [DLAP] as varchar(4)),                                      
 Mes = cast ( [DLMP] as varchar(2)),                                      
 Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
 SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
 MontoDescuento = cast ( 0 as varchar(14)),                                      
 SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
 WHERE [Codigo_proceso] = @Codigo_proceso                                    
 AND DLST= 'C'  
    AND DLIC >= 0                   
 ORDER BY DLMO, [DLNE]                       
                          
                      
 END  -- 2                      
 ELSE                                  
  BEGIN -- 3                                 
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
   BEGIN   -- 4                                 
                                      
    SELECT CodigoBanco = cast (CASE WHEN @NumeroDocumento = '129846873' THEN '175'                                      
    WHEN  @NumeroDocumento = '190827890' THEN '38' ELSE 'BIF' END as varchar(12)),                                  
    Moneda =  cast ( DLMO as varchar(3)),                                      
    NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
    CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
    CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
    ELSE                                      
    cast ( [DLCR] as varchar(20))                                      
    end,                                      
    Anio = cast ( [DLAP] as varchar(4)),                                      
    Mes = cast ( [DLMP] as varchar(2)),                                      
    Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
    SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
    MontoDescuento = cast ( 0 as varchar(14)),                                      
    SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
    --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
    WHERE [Codigo_proceso] = @Codigo_proceso                                    
    AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
    AND DLIC >= 0                                  
    ORDER BY DLMO, [DLNE]                                    
                                      
   END  --FIN 4                                 
   ELSE                      
   BEGIN -- 5                                  
    SELECT CodigoBanco = cast (                                      
    CASE WHEN @NumeroDocumento = '129846873' THEN                                      
    '175'                                      
    WHEN  @NumeroDocumento = '190827890' THEN                                      
    '38'   
    ELSE                                      
    'BIF'                                       
    END                                      
    as varchar(12)),                                       
    Moneda =  cast ( DLMO as varchar(3)),                                
    NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
    CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
    CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                               
    ELSE                                      
    CAST( [DLCR] as varchar(20))                                      
    END,                                      
    Anio = cast ( [DLAP] as varchar(4)),                                      
    Mes = cast ( [DLMP] as varchar(2)),                                      
    Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                     
    SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
    MontoDescuento = cast ( 0 as varchar(14)),                                      
    SaldoCredito = cast(CRE.DLPRI as varchar (14))                  
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
    --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                         
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
    WHERE [Codigo_proceso] = @Codigo_proceso                                    
    AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)                                      
    WHERE Codigo_proceso = @Codigo_proceso)                      
    AND DLIC >= 0                               
    ORDER BY DLMO, [DLNE]                                   
                       
   END -- FIN 5                     
      END --FIN 3                      
END  --- FIN 1                      
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN                         
                       
 --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                                    
 IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015        
 BEGIN   -- 1                             
                              
  SELECT CodigoBanco = cast (                       
  CASE WHEN @NumeroDocumento = '129846873' THEN                                      
  '175'                                      
  WHEN  @NumeroDocumento = '190827890' THEN                                      
  '38'                                      
  ELSE                                      
  'BIF'                                       
  END                                      
  as varchar(12)),                                       
  Moneda =  cast ( DLMO as varchar(3)),                                      
  NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
  CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
  CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
  ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                    
  else                                      
  cast ( [DLCR] as varchar(20))                                      
  end,                             
  Anio = cast ( [DLAP] as varchar(4)),                                      
  Mes = cast ( [DLMP] as varchar(2)),                                      
  Cuota =  CR.DLIMC ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
  --Cuota =  DLIC,          
  SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
  MontoDescuento = cast ( 0 as varchar(14)),                                      
  SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST ='C'           
  AND DLIC >= 0                                      
  ORDER BY DLMO, [DLNE]                                      
                        
 END   -- FIN 1                               
                                    
 ELSE                                  
                                   
 BEGIN  -- 2                           
                            
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
  BEGIN                                    
                               
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                                      
   'BIF'                                       
   END                                      
   as varchar(12)),                                       
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                      
 end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = CR.DLIMC,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC,          
   SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                       
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                    
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                             
   INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
   AND DLIC >= 0                                  
 ORDER BY DLMO, [DLNE]                                    
  END                                  
  ELSE                       
    BEGIN                                 
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                          
   '38'                                      
   ELSE                          
   'BIF'                                       
   END                                      
   as varchar(12)),                                 
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                 
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = CR.DLIMC ,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                     
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
   INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                                                
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)   
   WHERE Codigo_proceso = @Codigo_proceso)                       
   AND DLIC >= 0                                 
   ORDER BY DLMO, [DLNE]                                   
  END                              
                            
 END -- FIN 2                           
                      
END                      
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      
  --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                                   
  IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                     
  BEGIN   -- 1                             
                              
  SELECT CodigoBanco = cast (                                      
  CASE WHEN @NumeroDocumento = '129846873' THEN                                      
  '175'                                      
  WHEN  @NumeroDocumento = '190827890' THEN                                      
  '38'                                      
  ELSE                                      
  'BIF'                                       
  END                                      
  as varchar(12)),                                       
  Moneda =  cast ( DLMO as varchar(3)),                                      
  NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
  CodigoModular = ''''+cast([DLCM] as varchar(20)),                  
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
  CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
  ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
  else                                      
  cast ( [DLCR] as varchar(20))                                      
  end,                             
  Anio = cast ( [DLAP] as varchar(4)),                                      
  Mes = cast ( [DLMP] as varchar(2)),                                      
  Cuota =  T.CUOTA ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
--  Cuota =  DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
  SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
  MontoDescuento = cast ( 0 as varchar(14)),                                      
  SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST ='C'                                     
  AND DLIC >= 0                                     
  ORDER BY DLMO, [DLNE]                                      
              
 END   -- FIN 1                               
                                    
 ELSE                                  
                                   
 BEGIN  -- 2                           
                            
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
  BEGIN                                    
                                      
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                          
   'BIF'                                       
   END                                      
   as varchar(12)),                                       
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                      
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                       Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = T.CUOTA,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                   
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                             
   --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
   INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
   AND DLIC >= 0                                  
   ORDER BY DLMO, [DLNE]                                    
  END                                  
  ELSE                       
    BEGIN                                 
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                    
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                                      
   'BIF'                                       
   END                                      
   as varchar(12)),                                 
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                 
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = T.CUOTA ,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
   --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                       
   INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)                                      
   WHERE Codigo_proceso = @Codigo_proceso)                      
   AND DLIC >= 0                                 
   ORDER BY DLMO, [DLNE]                                   
  END                              
                            
 END -- FIN 2                           
                      
                      
 DROP TABLE #TEMPO                      
                      
END                      
                      
END

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoStandarAntiguoServiciosnoPText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoStandarAntiguoServiciosnoPText]           

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
                      
 --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                     
 IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                     
 BEGIN  -- 2                      
                                  
 SELECT CodigoBanco = cast (                                      
    CASE WHEN @NumeroDocumento = '129846873' THEN                                      
     '175'                                      
 WHEN  @NumeroDocumento = '190827890' THEN                                      
     '38'                                      
    ELSE                                      
     'BIF'                                       
    END                                      
    as varchar(12)),                                       
 Moneda =  cast ( DLMO as varchar(3)),                                      
 NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
 CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
    ELSE                                      
    cast ( [DLCR] as varchar(20))                                      
    end,                                      
 Anio = cast ( [DLAP] as varchar(4)),                                      
 Mes = cast ( [DLMP] as varchar(2)),                                      
 Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
 SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
 MontoDescuento = cast ( 0 as varchar(14)),                                      
 SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
 WHERE [Codigo_proceso] = @Codigo_proceso                                    
 AND DLST= 'N'  
    AND DLIC >= 0                   
 ORDER BY DLMO, [DLNE]                       
                          
                      
 END  -- 2                      
 ELSE                                  
  BEGIN -- 3                                 
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
   BEGIN   -- 4                                 
                                      
    SELECT CodigoBanco = cast (CASE WHEN @NumeroDocumento = '129846873' THEN '175'                                      
    WHEN  @NumeroDocumento = '190827890' THEN '38' ELSE 'BIF' END as varchar(12)),                                  
    Moneda =  cast ( DLMO as varchar(3)),                                      
    NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
    CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
    CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
    ELSE                                      
    cast ( [DLCR] as varchar(20))                                      
    end,                                      
    Anio = cast ( [DLAP] as varchar(4)),                                      
    Mes = cast ( [DLMP] as varchar(2)),                                      
    Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
    SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
    MontoDescuento = cast ( 0 as varchar(14)),                                      
    SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
    --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
    WHERE [Codigo_proceso] = @Codigo_proceso                                    
    AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
    AND DLIC >= 0                                  
    ORDER BY DLMO, [DLNE]                                    
                                      
   END  --FIN 4                                 
   ELSE                      
   BEGIN -- 5                                  
    SELECT CodigoBanco = cast (                                      
    CASE WHEN @NumeroDocumento = '129846873' THEN                                      
    '175'                                      
    WHEN  @NumeroDocumento = '190827890' THEN                                      
    '38'   
    ELSE                                      
    'BIF'                                       
    END                                      
    as varchar(12)),                                       
    Moneda =  cast ( DLMO as varchar(3)),                                
    NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
    CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
    CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                               
    ELSE                                      
    CAST( [DLCR] as varchar(20))                                      
    END,                                      
    Anio = cast ( [DLAP] as varchar(4)),                                      
    Mes = cast ( [DLMP] as varchar(2)),                                      
    Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                     
    SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
    MontoDescuento = cast ( 0 as varchar(14)),                                      
    SaldoCredito = cast(CRE.DLPRI as varchar (14))                  
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
    --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                         
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
    WHERE [Codigo_proceso] = @Codigo_proceso                                    
    AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)                                      
    WHERE Codigo_proceso = @Codigo_proceso)                      
    AND DLIC >= 0                               
    ORDER BY DLMO, [DLNE]                                   
                       
   END -- FIN 5                     
      END --FIN 3                      
END  --- FIN 1                      
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN                         
                       
 --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                                    
 IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015        
 BEGIN   -- 1                             
                              
  SELECT CodigoBanco = cast (                       
  CASE WHEN @NumeroDocumento = '129846873' THEN                                      
  '175'                                      
  WHEN  @NumeroDocumento = '190827890' THEN                                      
  '38'                                      
  ELSE                                      
  'BIF'                                       
  END                                      
  as varchar(12)),                                       
  Moneda =  cast ( DLMO as varchar(3)),                                      
  NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
  CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
  CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
  ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                    
  else                                      
  cast ( [DLCR] as varchar(20))                                      
  end,                             
  Anio = cast ( [DLAP] as varchar(4)),                                      
  Mes = cast ( [DLMP] as varchar(2)),                                      
  Cuota =  CR.DLIMC ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
  --Cuota =  DLIC,          
  SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
  MontoDescuento = cast ( 0 as varchar(14)),                                      
  SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST ='N'           
  AND DLIC >= 0                                      
  ORDER BY DLMO, [DLNE]                                      
                        
 END   -- FIN 1                               
                                    
 ELSE                                  
                                   
 BEGIN  -- 2                           
                            
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
  BEGIN                                    
                               
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                                      
   'BIF'                                       
   END                                      
   as varchar(12)),                                       
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                      
 end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = CR.DLIMC,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC,          
   SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                       
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                    
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                             
   INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
   AND DLIC >= 0                                  
 ORDER BY DLMO, [DLNE]                                    
  END                                  
  ELSE                       
    BEGIN                                 
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                          
   '38'                                      
   ELSE                          
   'BIF'                                       
   END                                      
   as varchar(12)),                                 
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                 
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = CR.DLIMC ,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                     
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
   INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                                                
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)   
   WHERE Codigo_proceso = @Codigo_proceso)                       
   AND DLIC >= 0                                 
   ORDER BY DLMO, [DLNE]                                   
  END                              
                            
 END -- FIN 2                           
                      
END                      
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      
  --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                                   
  IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                     
  BEGIN   -- 1                             
                              
  SELECT CodigoBanco = cast (                                      
  CASE WHEN @NumeroDocumento = '129846873' THEN                                      
  '175'                                      
  WHEN  @NumeroDocumento = '190827890' THEN                                      
  '38'                                      
  ELSE                                      
  'BIF'                                       
  END                                      
  as varchar(12)),                                       
  Moneda =  cast ( DLMO as varchar(3)),                                      
  NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
  CodigoModular = ''''+cast([DLCM] as varchar(20)),                  
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
  CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
  ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
  else                                      
  cast ( [DLCR] as varchar(20))                                      
  end,                             
  Anio = cast ( [DLAP] as varchar(4)),                                      
  Mes = cast ( [DLMP] as varchar(2)),                                      
  Cuota =  T.CUOTA ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
--  Cuota =  DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
  SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
  MontoDescuento = cast ( 0 as varchar(14)),                                      
  SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST ='N'                                     
  AND DLIC >= 0                                     
  ORDER BY DLMO, [DLNE]                                      
              
 END   -- FIN 1                               
                                    
 ELSE                                  
                                   
 BEGIN  -- 2                           
                            
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
  BEGIN                                    
                                      
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                          
   'BIF'                                       
   END                                      
   as varchar(12)),                                       
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                      
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                       Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = T.CUOTA,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                   
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                             
   --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
   INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
   AND DLIC >= 0                                  
   ORDER BY DLMO, [DLNE]                                    
  END                                  
  ELSE                       
    BEGIN                                 
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                    
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                                      
   'BIF'                                       
   END                                      
   as varchar(12)),                                 
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                 
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = T.CUOTA ,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
   --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                       
   INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)                                      
   WHERE Codigo_proceso = @Codigo_proceso)                      
   AND DLIC >= 0                                 
   ORDER BY DLMO, [DLNE]                                   
  END                              
                            
 END -- FIN 2                           
                      
                      
 DROP TABLE #TEMPO                      
                      
END                      
                      
END

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoStandarAntiguoText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoStandarAntiguoText]           

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
                      
 --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                     
 IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                     
 BEGIN  -- 2                      
                                  
 SELECT CodigoBanco = cast (                                      
    CASE WHEN @NumeroDocumento = '129846873' THEN                                      
     '175'                                      
 WHEN  @NumeroDocumento = '190827890' THEN                                      
     '38'                                      
    ELSE                                      
     'BIF'                                       
    END                                      
    as varchar(12)),                                       
 Moneda =  cast ( DLMO as varchar(3)),                                      
 NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
 CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
 NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
    ELSE                                      
    cast ( [DLCR] as varchar(20))                                      
    end,                                      
 Anio = cast ( [DLAP] as varchar(4)),                                      
 Mes = cast ( [DLMP] as varchar(2)),                                      
 Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
 SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
 MontoDescuento = cast ( 0 as varchar(14)),                                      
 SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
 WHERE [Codigo_proceso] = @Codigo_proceso                                    
 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
    ELSE @situacionTrabajador END                                      
    AND DLIC >= 0                   
 ORDER BY DLMO, [DLNE]                       
                          
                      
 END  -- 2                      
 ELSE                                  
  BEGIN -- 3                                 
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
   BEGIN   -- 4                                 
                                      
    SELECT CodigoBanco = cast (CASE WHEN @NumeroDocumento = '129846873' THEN '175'                                      
    WHEN  @NumeroDocumento = '190827890' THEN '38' ELSE 'BIF' END as varchar(12)),                                  
    Moneda =  cast ( DLMO as varchar(3)),                                      
    NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
    CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
    CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
    ELSE                                      
    cast ( [DLCR] as varchar(20))                                      
    end,                                      
    Anio = cast ( [DLAP] as varchar(4)),                                      
    Mes = cast ( [DLMP] as varchar(2)),                                      
    Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
    SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
    MontoDescuento = cast ( 0 as varchar(14)),                                      
    SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
    --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
    WHERE [Codigo_proceso] = @Codigo_proceso                                    
    AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
    AND DLIC >= 0                                  
    ORDER BY DLMO, [DLNE]                                    
                                      
   END  --FIN 4                                 
   ELSE                      
   BEGIN -- 5                                  
    SELECT CodigoBanco = cast (                                      
    CASE WHEN @NumeroDocumento = '129846873' THEN                                      
    '175'                                      
    WHEN  @NumeroDocumento = '190827890' THEN                                      
    '38'   
    ELSE                                      
    'BIF'                                       
    END                                      
    as varchar(12)),                                       
    Moneda =  cast ( DLMO as varchar(3)),                                
    NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
    CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
    CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
    ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                               
    ELSE                                      
    CAST( [DLCR] as varchar(20))                                      
    END,                                      
    Anio = cast ( [DLAP] as varchar(4)),                                      
    Mes = cast ( [DLMP] as varchar(2)),                                      
    Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                     
    SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
    MontoDescuento = cast ( 0 as varchar(14)),                                      
    SaldoCredito = cast(CRE.DLPRI as varchar (14))                  
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
    --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                         
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
    WHERE [Codigo_proceso] = @Codigo_proceso                                    
    AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)                                      
    WHERE Codigo_proceso = @Codigo_proceso)                      
    AND DLIC >= 0                               
    ORDER BY DLMO, [DLNE]                                   
                       
   END -- FIN 5                     
      END --FIN 3                      
END  --- FIN 1                      
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN                         
                       
 --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                                    
 IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015        
 BEGIN   -- 1                             
                              
  SELECT CodigoBanco = cast (                       
  CASE WHEN @NumeroDocumento = '129846873' THEN                                      
  '175'                                      
  WHEN  @NumeroDocumento = '190827890' THEN                                      
  '38'                                      
  ELSE                                      
  'BIF'                                       
  END                                      
  as varchar(12)),                                       
  Moneda =  cast ( DLMO as varchar(3)),                                      
  NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
  CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
  CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
  ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                    
  else                                      
  cast ( [DLCR] as varchar(20))                                      
  end,                             
  Anio = cast ( [DLAP] as varchar(4)),                                      
  Mes = cast ( [DLMP] as varchar(2)),                                      
  Cuota =  CR.DLIMC ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
  --Cuota =  DLIC,          
  SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
  MontoDescuento = cast ( 0 as varchar(14)),                                      
  SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0                                      
  ORDER BY DLMO, [DLNE]                                      
                        
 END   -- FIN 1                               
                                    
 ELSE                                  
                                   
 BEGIN  -- 2                           
                            
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
  BEGIN                                    
                               
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                                      
   'BIF'                                       
   END                                      
   as varchar(12)),                                       
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                      
 end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = CR.DLIMC,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC,          
   SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                       
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                    
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                             
   INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
   AND DLIC >= 0                                  
 ORDER BY DLMO, [DLNE]                                    
  END                                  
  ELSE                       
    BEGIN                                 
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                          
   '38'                                      
   ELSE                          
   'BIF'                                       
   END                                      
   as varchar(12)),                                 
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                 
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = CR.DLIMC ,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                     
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
   INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                                                
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)   
   WHERE Codigo_proceso = @Codigo_proceso)                       
   AND DLIC >= 0                                 
   ORDER BY DLMO, [DLNE]                                   
  END                              
                            
 END -- FIN 2                           
                      
END                      
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      
  --IF (@codigo_cliente not in( 190828082 ,190828080, 190828950)) --SE AÑADE ICPNA. CRP 15-10-2013                                   
  IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                     
  BEGIN   -- 1                             
                              
  SELECT CodigoBanco = cast (                                      
  CASE WHEN @NumeroDocumento = '129846873' THEN                                      
  '175'                                      
  WHEN  @NumeroDocumento = '190827890' THEN                                      
  '38'                                      
  ELSE                                      
  'BIF'                                       
  END                                      
  as varchar(12)),                                       
  Moneda =  cast ( DLMO as varchar(3)),                                      
  NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
  CodigoModular = ''''+cast([DLCM] as varchar(20)),                  
  NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
  CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
  ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
  else                                      
  cast ( [DLCR] as varchar(20))                                      
  end,                             
  Anio = cast ( [DLAP] as varchar(4)),                                      
  Mes = cast ( [DLMP] as varchar(2)),                                      
  Cuota =  T.CUOTA ,-- DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
--  Cuota =  DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
  SituacionLaboral = cast ( [DLST] as varchar(2)),                                      
  MontoDescuento = cast ( 0 as varchar(14)),                                      
  SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0                                     
  ORDER BY DLMO, [DLNE]                                      
              
 END   -- FIN 1                               
                                    
 ELSE                                  
                                   
 BEGIN  -- 2                           
                            
  IF (rtrim( @situacionTrabajador ) <> '-')                                    
  BEGIN                                    
                                      
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                                      
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                          
   'BIF'                                       
   END                                      
   as varchar(12)),                                       
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                      
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                       Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = T.CUOTA,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral =  substring (cc.DLCR,1,2),-- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                   
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                             
   --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
   INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) = (@situacionTrabajador)                      
   AND DLIC >= 0                                  
   ORDER BY DLMO, [DLNE]                                    
  END                                  
  ELSE                       
    BEGIN                                 
   SELECT CodigoBanco = cast (                                      
   CASE WHEN @NumeroDocumento = '129846873' THEN                                      
   '175'                    
   WHEN  @NumeroDocumento = '190827890' THEN                                      
   '38'                                      
   ELSE                                      
   'BIF'                                       
   END                                      
   as varchar(12)),                                 
   Moneda =  cast ( DLMO as varchar(3)),                                      
   NumeroPagare = ''''+cast([DLNP] as varchar(12)),                                      
   CodigoModular = ''''+cast([DLCM] as varchar(20)),                                      
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
   CodigoReferencia = case when @NumeroDocumento  = '20148421014' then                                       
   ''''+substring(cast ( [DLCR] as varchar(20)), 1, 2 )                                       
   else                                      
   cast ( [DLCR] as varchar(20))                                 
   end,                                      
   Anio = cast ( [DLAP] as varchar(4)),                                      
   Mes = cast ( [DLMP] as varchar(2)),                                      
   Cuota = T.CUOTA ,--DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   --Cuota = DLIC, -- replace ( cast ( DLIC as varchar(14)), '.', ''),                                      
   SituacionLaboral = substring(cc.DLCR,1,2), -- cast ( [DLST] as varchar(2)),                                      
   MontoDescuento = cast ( 0 as varchar(14)),                                      
   SaldoCredito = cast(CRE.DLPRI as varchar (14))                                       
   FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
   ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
   --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
   --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                       
   INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
   WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
   AND substring (cc.DLCR,1,2) IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)                                      
   WHERE Codigo_proceso = @Codigo_proceso)                      
   AND DLIC >= 0                                 
   ORDER BY DLMO, [DLNE]                                   
  END                              
                            
 END -- FIN 2                           
                      
                      
 DROP TABLE #TEMPO                      
                      
END                      
                      
END

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSUBCAFAEICAText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSUBCAFAEICAText]           
@Codigo_proceso  as Uniqueidentifier,                
@SituacionTrabajador  as char ( 1 )                
AS                
BEGIN                
--set @Codigo_proceso   = '59bd50b8-0a00-4abe-9efd-cab3f9294111'                
--set @SituacionTrabajador  = '-'                
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 

		SELECT     
    CODEMPRESA = 'SEGICA',    
    convert(varchar(6),                 
    dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ) , 112)  as PERIODO,                 
    --INSTIT =  '0' + CAST (DLCCIN AS CHAR ( 3 )),                
    TIPLA =  CAST ( DLST AS CHAR ( 1 ) ),    
    CODMOD = cast ( DLCM as char(10)),    
    CARGO_TIT = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),    
    CARGO_BEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),           
    CODUSE = '',    
    CODNEC = '',    
    CODNIV = '',    
    CODEST = '',    
    DIDENT = '',    
    APEPAT = cast ( DLPA as char(40)),    
    APEMAT = cast ( DLMA as char(40)),    
    NOMBRES =cast ( DLMN as char(35)),    
    ROW_NUMBER() OVER(ORDER BY DLPA asc) AS 'NUMCREDITO',    
    --NUMCREDITO = '',    
    MTOCUOTA =  convert(varchar(10) ,DLIC ) ,    
    FECDESEMB = '',    
    FECPRIMERV = '',    
    FECVCTO = '',    
    CUOTASPAG = '',    
    NUMCUO = '',    
    MTOPRESTA = '',    
    CODMODAVA = '',    
    APELLIAVA = '',    
    NOMBREAVA = '' ,    
    FECHA= ''    
/*    
    CODDES = '0205',           
    MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
    APEPATER =     
    AMATER =     
    NOMBRE =     
    monto_real = cc.DLIC              */    
    FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
    left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC)                
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
    WHERE [Codigo_proceso] = @Codigo_proceso                
    and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
    AND DLIC >= 0 -- jeca    
    
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT     
    CODEMPRESA = 'SEGICA',    
    convert(varchar(6),                 
    dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ) , 112)  as PERIODO,                 
    --INSTIT =  '0' + CAST (DLCCIN AS CHAR ( 3 )),                
    TIPLA =  CAST ( DLST AS CHAR ( 1 ) ),    
    CODMOD = cast ( DLCM as char(10)),    
    CARGO_TIT = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),    
    CARGO_BEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),           
    CODUSE = '',    
    CODNEC = '',    
    CODNIV = '',    
    CODEST = '',    
    DIDENT = '',    
    APEPAT = cast ( DLPA as char(40)),    
    APEMAT = cast ( DLMA as char(40)),    
    NOMBRES =cast ( DLMN as char(35)),    
    ROW_NUMBER() OVER(ORDER BY DLPA asc) AS 'NUMCREDITO',    
    --NUMCREDITO = '',    
    MTOCUOTA =  convert(varchar(10) ,CR.DLIMC ) ,    
    FECDESEMB = '',    
    FECPRIMERV = '',    
    FECVCTO = '',    
    CUOTASPAG = '',    
    NUMCUO = '',    
    MTOPRESTA = '',    
    CODMODAVA = '',    
    APELLIAVA = '',    
    NOMBREAVA = '' ,    
    FECHA= ''    
/*    
    CODDES = '0205',           
    MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
    APEPATER =     
    AMATER =     
    NOMBRE =     
    monto_real = cc.DLIC              */    
    FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
    left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC)                
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
    INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
    WHERE cc.[Codigo_proceso] = @Codigo_proceso                
    and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
    AND DLIC >= 0 -- jeca    
              
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	SELECT     
    CODEMPRESA = 'SEGICA',    
    convert(varchar(6),                 
    dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) ) , 112)  as PERIODO,                 
    --INSTIT =  '0' + CAST (DLCCIN AS CHAR ( 3 )),                
    TIPLA =  CAST ( DLST AS CHAR ( 1 ) ),    
    CODMOD = cast ( DLCM as char(10)),    
    CARGO_TIT = isnull ( CAST ( DLCCR AS VARCHAR (12 )), ''),    
    CARGO_BEN = CAST (ISNULL(DLPLA, '') AS VARCHAR(4)),           
    CODUSE = '',    
    CODNEC = '',    
    CODNIV = '',    
    CODEST = '',    
    DIDENT = '',    
    APEPAT = cast ( DLPA as char(40)),    
    APEMAT = cast ( DLMA as char(40)),    
    NOMBRES =cast ( DLMN as char(35)),    
    ROW_NUMBER() OVER(ORDER BY DLPA asc) AS 'NUMCREDITO',    
    --NUMCREDITO = '',    
    MTOCUOTA =  convert(varchar(10) ,T.CUOTA ) ,    
    FECDESEMB = '',    
    FECPRIMERV = '',    
    FECVCTO = '',    
    CUOTASPAG = '',    
    NUMCUO = '',    
    MTOPRESTA = '',    
    CODMODAVA = '',    
    APELLIAVA = '',    
    NOMBREAVA = '' ,    
    FECHA= ''    
/*    
    CODDES = '0205',           
    MONTODES = SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(8)),'.','')))) + 1 ,8 ),                 
    APEPATER =     
    AMATER =     
    NOMBRE =     
    monto_real = cc.DLIC              */    
    FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                
    left JOIN DLCRE CRE                 
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC)                
    AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                
    AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                
    AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                
    AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                 
    INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
    --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
    WHERE cc.[Codigo_proceso] = @Codigo_proceso                
    and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                
    ELSE @situacionTrabajador END                
    AND DLIC >= 0 -- jeca    
 

	DROP TABLE #TEMPO

END

END

       
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSuretexActivosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSuretexActivosText]                                

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
                      
    SELECT                                      
 
   PAGARE= cast([DLNP] as varchar(12)),DLCM  AS CODIGO ,                                   
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
Convert(Varchar(10),FechaDesembolso,103) AS FECHA_DESEMBOLSO
            
                           
                                   
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
 WHERE [Codigo_proceso] = @Codigo_proceso                                    
 AND DLST ='A'                                    
    AND DLIC >= 0                   
 ORDER BY DLMO, [DLNE]                       
           
END  --- FIN 1                      
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN                         
                       
                        
                    
    SELECT                                      
 
   PAGARE= cast([DLNP] as varchar(12)), DLCM AS CODIGO,                                      
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
Convert(Varchar(10),FechaDesembolso,103) AS FECHA_DESEMBOLSO
                           
                                  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND  DLST ='A'              
  AND DLIC >= 0                                      
  ORDER BY DLMO, [DLNE]                                      
                        

                         
                      
END                      
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      
 
  BEGIN   -- 1                             
                              
  SELECT 
                   
                                  
 
   PAGARE= cast([DLNP] as varchar(12)),DLCM AS CODIGO ,                                   
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
         
    Convert(Varchar(10),FechaDesembolso,103)AS FECHA_DESEMBOLSO
                                    
                                    
  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST ='A'                                    
  AND DLIC >= 0                                     
  ORDER BY DLMO, [DLNE]                                      
              
 
 END -- FIN 2                           
                      
                      
 DROP TABLE #TEMPO                      
                      
END                      
                      
END



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSuretexEmpleadoText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSuretexEmpleadoText]                                

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
                      
    SELECT                                      
 
   PAGARE= cast([DLNP] as varchar(12)),DLCM  AS CODIGO ,                                   
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
Convert(Varchar(10),FechaDesembolso,103) AS FECHA_DESEMBOLSO
            
                           
                                   
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
 WHERE [Codigo_proceso] = @Codigo_proceso                                    
 AND DLST ='E'                                    
    AND DLIC >= 0                   
 ORDER BY DLMO, [DLNE]                       
           
END  --- FIN 1                      
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN                         
                       
                        
                    
    SELECT                                      
 
   PAGARE= cast([DLNP] as varchar(12)), DLCM AS CODIGO,                                      
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
Convert(Varchar(10),FechaDesembolso,103) AS FECHA_DESEMBOLSO
                           
                                  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND  DLST ='E'              
  AND DLIC >= 0                                      
  ORDER BY DLMO, [DLNE]                                      
                        

                         
                      
END                      
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      
 
  BEGIN   -- 1                             
                              
  SELECT 
                   
                                  
 
   PAGARE= cast([DLNP] as varchar(12)),DLCM AS CODIGO ,                                   
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
         
    Convert(Varchar(10),FechaDesembolso,103)AS FECHA_DESEMBOLSO
                                    
                                    
  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST ='E'                                    
  AND DLIC >= 0                                     
  ORDER BY DLMO, [DLNE]                                      
              
 
 END -- FIN 2                           
                      
                      
 DROP TABLE #TEMPO                      
                      
END                      
                      
END



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSuretexObreroText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSuretexObreroText]                                

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
                      
    SELECT                                      
 
   PAGARE= cast([DLNP] as varchar(12)),DLCM  AS CODIGO ,                                   
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
Convert(Varchar(10),FechaDesembolso,103) AS FECHA_DESEMBOLSO
            
                           
                                   
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
 WHERE [Codigo_proceso] = @Codigo_proceso                                    
 AND DLST ='O'                                    
    AND DLIC >= 0                   
 ORDER BY DLMO, [DLNE]                       
           
END  --- FIN 1                      
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN                         
                       
                        
                    
    SELECT                                      
 
   PAGARE= cast([DLNP] as varchar(12)), DLCM AS CODIGO,                                      
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
Convert(Varchar(10),FechaDesembolso,103) AS FECHA_DESEMBOLSO
                           
                                  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND  DLST ='O'              
  AND DLIC >= 0                                      
  ORDER BY DLMO, [DLNE]                                      
                        

                         
                      
END                      
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      
 
  BEGIN   -- 1                             
                              
  SELECT 
                   
                                  
 
   PAGARE= cast([DLNP] as varchar(12)),DLCM AS CODIGO ,                                   
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
         
    Convert(Varchar(10),FechaDesembolso,103)AS FECHA_DESEMBOLSO
                                    
                                    
  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST ='O'                                    
  AND DLIC >= 0                                     
  ORDER BY DLMO, [DLNE]                                      
              
 
 END -- FIN 2                           
                      
                      
 DROP TABLE #TEMPO                      
                      
END                      
                      
END



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoSuretexText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoSuretexText]                                

	@Codigo_proceso as uniqueidentifier,                                      
	@situacionTrabajador as char ( 2 )                                       

AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      

 SET NOCOUNT ON                                       

  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
                                     
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                            
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                            
                     
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
                      
    SELECT                                      
 
   PAGARE= cast([DLNP] as varchar(12)),DLCM  AS CODIGO ,                                   
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
Convert(Varchar(10),FechaDesembolso,103) AS FECHA_DESEMBOLSO
            
                           
                                   
    FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
         --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                                       
 WHERE [Codigo_proceso] = @Codigo_proceso                                    
 AND DLST ='O'                                    
    AND DLIC >= 0                   
 ORDER BY DLMO, [DLNE]                       
           
END  --- FIN 1                      
                      
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN                         
                       
                        
                    
    SELECT                                      
 
   PAGARE= cast([DLNP] as varchar(12)), DLCM AS CODIGO,                                      
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
Convert(Varchar(10),FechaDesembolso,103) AS FECHA_DESEMBOLSO
                           
                                  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND  DLST ='O'              
  AND DLIC >= 0                                      
  ORDER BY DLMO, [DLNE]                                      
                        

                         
                      
END                      
                      
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                      
                      
                      
 
  BEGIN   -- 1                             
                              
  SELECT 
                   
                                  
 
   PAGARE= cast([DLNP] as varchar(12)),DLCM AS CODIGO ,                                   
         DNI = cre.dldni ,                     
  NOMBRE = cast ( REPLACE ([DLNE], ',', '') as varchar(75)),                                      
 MONTO_OTORGADO=  MONTOORIGINAL
,
      PLAZO =  CC.CUOTAPACTADAS ,
       CUOTADESCONTAR=  dlic ,
         
    Convert(Varchar(10),FechaDesembolso,103)AS FECHA_DESEMBOLSO
                                    
                                    
  
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso                                    
  AND DLST ='O'                                    
  AND DLIC >= 0                                     
  ORDER BY DLMO, [DLNE]                                      
              
 
 END -- FIN 2                           
                      
                      
 DROP TABLE #TEMPO                      
                      
END                      
                      
END



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoTEXTOINTEXT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
                      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoTEXTOINTEXT]                                
@Codigo_proceso as uniqueidentifier,                                      
@situacionTrabajador as char ( 2 )                                       
AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      
 SET NOCOUNT ON                                       
  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
    ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                           
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                    
                      
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
 	IF(@codigo_cliente = 190829408)
		BEGIN
		
		SELECT 
		    '2504'+
                 
  CONVERT(VARCHAR,
  CASE               
     WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT('00' +  RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
  CASE 
	WHEN DLMP = 1 THEN RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1 )), 2) ELSE RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2) END)	
	 
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLic, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 

		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
			 AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
			 --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
			 AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
			 AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))   
			 left JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                       
	 WHERE cc.Codigo_proceso = @Codigo_proceso    and CRE.DLCUS='IN'                                   
	 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
		ELSE @situacionTrabajador END                                      
		AND DLIC >= 0                   
ORDER BY  DLNE ASC                    
		END
      ---   SELECT*FROM CLIENTECUOTA WHERE DLNP=233130322472             
END  --- FIN 1  
                        
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN         
----PRUEBAAAAA cuota 2 ---ESTEFANI FLORES COD=190828945 NUEVO FORMATO 
                
        IF(@codigo_cliente = 190829408)
		BEGIN
		
		SELECT  
		   '2504'+
                 
  CONVERT(VARCHAR,
  CASE               
    WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT('00' +  RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
      
  CASE 
	WHEN DLMP = 1 THEN RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1 )), 2) ELSE RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2) END)	
	
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso       AND   CRE.DLCUS='IN'     AND                             
  DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0  
                              
                 
ORDER BY  DLNE ASC 
		END
   
END  --2                    
               
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                            
        IF(@codigo_cliente = 190829408)
		BEGIN		
		SELECT   
	     '2504'+
                 
  CONVERT(VARCHAR,
  case
 WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT('00' +  RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
      
  CASE 
	WHEN DLMP = 1 THEN RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1 )), 2) ELSE RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2) END)	
	 
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 



   
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))  
	  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
		
		                          
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)     
                   
  WHERE CC.[Codigo_proceso] = @Codigo_proceso AND   CRE.DLCUS='IN'                                    
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0 
ORDER BY  DLNE ASC                     
		END  
		--DROP TABLE #TEMPO                              
 END -- FIN 2                                          
                 
END                      

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoTEXTORETEXT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
                      
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoTEXTORETEXT]                                
@Codigo_proceso as uniqueidentifier,                                      
@situacionTrabajador as char ( 2 )                                       
AS                                      
BEGIN                            
                     
DECLARE @NumeroDocumento AS nvarchar(12)                                      
--Envio de la informacion del cronograma futuro en formato CSV                                      
 SET NOCOUNT ON                                       
  SELECT @NumeroDocumento = NumeroDocumento                                       
  FROM CLIENTE C INNER JOIN PROCESO P                                       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                      
  WHERE Codigo_proceso = @Codigo_proceso                                      
 SET NOCOUNT OFF                                      
    ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                    
                           
DECLARE @CODIGO_CLIENTE_IBS AS INT                             
DECLARE @TIPO_CUOTA AS INT                            
                            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                            
GROUP BY DLCC                            
                            
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                            
                    
                      
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
 	IF(@codigo_cliente = 190829408)
		BEGIN
		
		SELECT 
		    '2503'+
                 
  CONVERT(VARCHAR,
  CASE               
     WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
      
  CASE 
	WHEN DLMP = 1 THEN RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1 )), 2) ELSE RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2) END)	
	 
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLic, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 

		FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                     
		ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
			 AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
			 --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)             
			 AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
			 AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))   
			 left JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                       
	 WHERE cc.Codigo_proceso = @Codigo_proceso    and CRE.DLCUS='RE'                                
	 AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
		ELSE @situacionTrabajador END                                      
		AND DLIC >= 0                   
	 ORDER BY  DLNE ASC                    
		END
      ---   SELECT*FROM CLIENTECUOTA WHERE DLNP=233130322472             
END  --- FIN 1  
                        
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN         
----PRUEBAAAAA cuota 2 ---ESTEFANI FLORES COD=190828945 NUEVO FORMATO 
                
        IF(@codigo_cliente = 190829408)
		BEGIN
		
		SELECT  
		   '2503'+
                 
  CONVERT(VARCHAR,
  CASE               
    WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
      
  CASE 
	WHEN DLMP = 1 THEN RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1 )), 2) ELSE RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2) END)	
	
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 
  FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
        AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                            
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  WHERE CC.[Codigo_proceso] = @Codigo_proceso       AND   CRE.DLCUS='RE'      AND                             
  DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                                      
  ELSE @situacionTrabajador END             
  AND DLIC >= 0  
                              
                 
ORDER BY  DLNE ASC                    
	 
		END
   
END  --2                    
               
ELSE IF  @TIPO_CUOTA = 3                          
BEGIN                        
                         
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
       AND CC.Codigo_proceso = CR.Codigo_proceso              
       AND CC.DLNP = CR.DLACC                      
       AND(CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
 )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                            
        IF(@codigo_cliente = 190829408)
		BEGIN		
		SELECT   
	     '2503'+
                 
  CONVERT(VARCHAR,
  case
 WHEN LEN(DLMP)=1 and dlmp<>1  THEN   RIGHT('00' + RIGHT(RTRIM(CONVERT(VARCHAR, DLMP-1 )), 2), 2) 
	   WHEN LEN(DLMP)=2 THEN   RIGHT('00' +  RIGHT(RTRIM(CONVERT(VARCHAR, DLMP -1)), 2), 2)
	   WHEN LEN(DLMP)=1 and dlmp=1 THEN   RIGHT( RIGHT(RTRIM(CONVERT(VARCHAR, '12')), 2), 2) ELSE '00'  END)+
	     CONVERT(VARCHAR,
      
  CASE 
	WHEN DLMP = 1 THEN RIGHT(RTRIM(CONVERT(VARCHAR, DLAP - 1 )), 2) ELSE RIGHT(RTRIM(CONVERT(VARCHAR, DLAP )), 2) END)	
	 
   + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))              
  + cast ( REPLACE ([DLNE], ',', '') as char(45))     ,       
    case when
	   CR.DLIMC>=1000 then 
   SUBSTRING('   ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(16)),'.',''))) ,1,16)
	when 

	 CR.DLIMC<=999 then 
   SUBSTRING('    ' +
    LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(16)),'.',''))) ,1,16)
	 end 



   
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE                                       
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                                      
        AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                                      
        --AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                                      
  AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                                      
        AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))  
	  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
		
		                          
  --INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                                      
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)     
                   
  WHERE CC.[Codigo_proceso] = @Codigo_proceso AND   CRE.DLCUS='RE'                                      
  AND DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                       
  ELSE @situacionTrabajador END                                      
  AND DLIC >= 0 
ORDER BY  DLNE ASC                 
		END  
		--DROP TABLE #TEMPO                              
 END -- FIN 2                                          
                 
END                      

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoTXTMinsaCASText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*
--*******************************************************************************************************************************
--MODIFICADO POR: MSR (MDP) - 19/08/2021
--DESCRIPCION: SE RETIRO LA FUNCION REPLACE DEL CAMPO CUOTA
--*******************************************************************************************************************************
*/
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoTXTMinsaCASText]    
@Codigo_proceso  as Uniqueidentifier,    
@SituacionTrabajador  as char ( 1 )    
AS    
BEGIN    
 DECLARE @FECHAPERIODO DATE,@MESPERIODO VARCHAR(2),@ANIOPERIODO VARCHAR(4)    
    
 SELECT @FECHAPERIODO =DATEFROMPARTS(P.ANIO_PERIODO,P.MES_PERIODO,1) FROM PROCESO P WHERE CODIGO_PROCESO=@Codigo_proceso     
    
 SET @ANIOPERIODO=RIGHT(CAST(DATEPART(YEAR,DATEADD(MONTH,-1,@FECHAPERIODO)) AS VARCHAR),2)     
 SET @MESPERIODO=DATEPART(MONTH,DATEADD(MONTH,-1,@FECHAPERIODO))     
 SET @MESPERIODO= CASE LEN(@MESPERIODO) WHEN 1 THEN '0'+@MESPERIODO ELSE @MESPERIODO END;    
    
 WITH CLIENTES AS     
 (     
   SELECT C.codigo_IBS,    
   CASE WHEN CAS.CODIGO_IBS IS NULL THEN C.CODIGO_INSTITUCION ELSE CAS.CODIGO_INSTITUCION END AS CODIGO_INSTITUCION     
   FROM CLIENTE C     
   LEFT JOIN ClienteXCodInstitucionCAS CAS    
   ON C.CODIGO_IBS=CAS.CODIGO_IBS    
 )      
 SELECT CASE ISNULL(LEN(CLI.CODIGO_INSTITUCION),0) WHEN 0 THEN '0000' ELSE CLI.CODIGO_INSTITUCION END +@MESPERIODO+@ANIOPERIODO AS CODIGO,     
 RE.DLDNI AS DNI,     
 --LEFT((DLPA+' '+DLMA+' '+DLMN)+REPLICATE(' ',45),45) NombreTrabajador,    
 LEFT((DLPA+' '+DLMA+' '+LEFT(DLMN,CASE WHEN CHARINDEX(' ',DLMN)>0 THEN CHARINDEX(' ',DLMN) ELSE LEN(DLMN) END ))+REPLICATE(' ',45),45) NombreTrabajador,    
    
 --CONVERT(VARCHAR,CC.FechaDesembolso,111) AS FechaDesembolso,    
 --RIGHT(REPLICATE(' ',3)+CAST(CC.CuotaPagadas+1 AS VARCHAR),3) AS NumeroCuota,    
 --RIGHT(REPLICATE(' ',3)+CAST(CC.CuotaPactadas AS VARCHAR),3) AS Plazos,    
 --RIGHT(REPLICATE(' ',9)+REPLACE(CAST(CC.DLIC AS VARCHAR),'.',''),9) AS Cuota    
 --**********************************************************************************************
 --INI - MSR (MDP) - 19/08/2021
 RIGHT(SPACE(9)+CAST(CR.DLIMC AS VARCHAR),9) AS Cuota    
 --FIN - MSR (MDP) - 19/08/2021
 --**********************************************************************************************
 --RIGHT(SPACE(9)+REPLACE(CAST(CR.DLIMC AS VARCHAR),'.',''),9) AS Cuota    
 --RIGHT(REPLICATE(' ',9)+'0.00',9) AS Aporte,    
 --RIGHT(REPLICATE(' ',9)+CAST(CC.CuotaPactadas*CC.DeudaPeriodo AS VARCHAR),9) AS TotalPrestamo,    
 --RIGHT(CC.DLNP,8) AS NumeroOperacion    
 FROM [ClienteCuota] CC    
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP)     
 INNER JOIN CLIENTES CLI ON CLI.CODIGO_IBS=CC.DLCC    
 INNER JOIN DLCRE RE ON RE.DLACC=CC.DLNP    
 WHERE  CC.[Codigo_proceso] =@Codigo_proceso    
 AND LEFT(CC.DLCR,2)='CA'    
 --AND CC.DLST='CAS'     
 AND CLI.CODIGO_INSTITUCION IS NOT NULL AND LEN (CLI.CODIGO_INSTITUCION)>0    
END     
-- [dbo].[CronogramaFuturoTXTMinsaCASText] -- FIN 

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUEJECUTORA413ASCOPETXT001Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/    
/* Creado     : BANBIF(ENCT)                                            */    
/* Fecha      : 20/04/2018                                              */  
/************************************************************************/    
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUEJECUTORA413ASCOPETXT001Text]    
@Codigo_proceso as uniqueidentifier,        
@situacionTrabajador as char ( 1 )         
AS        
BEGIN        
              
DECLARE @CODIGO_CLIENTE_IBS  AS INT               
DECLARE @TIPO_CUOTA   AS INT   
DECLARE  @MES_PROCESO CHAR(2)    
DECLARE  @ANIO_PROCESO CHAR(2)            

SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC     
FROM  CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso              
GROUP BY DLCC

SELECT @MES_PROCESO = RIGHT('00'+LTRIM(RTRIM(CAST(MONTH(Fecha_CargaAS400) AS VARCHAR(2)))),2), @ANIO_PROCESO = CAST(SUBSTRING(CAST(YEAR(Fecha_CargaAS400) AS VARCHAR(4)),3,2) AS VARCHAR(2))   
FROM PROCESO WHERE codigo_proceso = @Codigo_proceso
              
SELECT @TIPO_CUOTA = TIPO_CUOTA     
FROM  MANTENIMIENTO_CUOTA     
WHERE  DLECUN = @CODIGO_CLIENTE_IBS              
              
IF @TIPO_CUOTA = 1            
BEGIN  
     
 SELECT   
 CodigoBanbif = CAST('2184' AS VARCHAR(4)),  
 MesAnio = RIGHT('0000'+@MES_PROCESO,2) + @ANIO_PROCESO, 
 DOI = LEFT(LTRIM(RTRIM(CAST(ISNULL(CRE.DLDNI,'') AS VARCHAR(8))))+'        ',8),  
 NombresClie = LEFT(LTRIM(RTRIM(CAST(C.DLPA + ' ' + C.DLMA + ', ' + C.DLMN AS VARCHAR(45))))+'                                                  ',47),  
 ImporteCuota = RIGHT('         '+LTRIM(RTRIM(REPLACE(CAST(CONVERT(DECIMAL(9,2),ISNULL(C.DLIC,0)) AS VARCHAR(9)),'.',''))),7)  
 FROM CLIENTECUOTA C  
 LEFT JOIN DLCRE CRE ON (C.DLNP = CRE.DLACC)  
 WHERE C.CODIGO_PROCESO = @CODIGO_PROCESO and C.dlst = case when rtrim( @situacionTrabajador ) = '-' then DLST  ELSE @situacionTrabajador END   
 order by NombresClie        
END    
ELSE IF  @TIPO_CUOTA = 2        
BEGIN       
    
 SELECT   
 CodigoBanbif = CAST('2184' AS VARCHAR(4)),  
 MesAnio = RIGHT('0000'+@MES_PROCESO,2) + @ANIO_PROCESO, 
 DOI = LEFT(LTRIM(RTRIM(CAST(ISNULL(CRE.DLDNI,'') AS VARCHAR(8))))+'        ',8),  
 NombresClie = LEFT(LTRIM(RTRIM(CAST(C.DLPA + ' ' + C.DLMA + ', ' + C.DLMN AS VARCHAR(45))))+'                                                  ',47),  
 ImporteCuota = RIGHT('         '+ LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS VARCHAR(9)),'.',''))), 7)     
 FROM CLIENTECUOTA C     
 INNER JOIN DLCRE CRE ON ( DLNP  = DLACC )        
     INNER JOIN dlcnt cnt  ON ( C.dlnp  = cnt.DLCACC)        
     INNER JOIN DLCCR CR ON (CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP )                      
  WHERE  C.CODIGO_PROCESO = @codigo_proceso AND        
    DLST   = CASE WHEN RTRIM(@situacionTrabajador ) = '-' THEN DLST        
         ELSE @situacionTrabajador         
   END AND     
  DLIC >=0 
  order by NombresClie      
     
END    
    
ELSE IF  @TIPO_CUOTA = 3        
BEGIN      
       
 SELECT  CR.DLACC     'PAGARE',     
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF)  'CUOTA'    
 INTO  #TEMPO    
 FROM  ClienteCuota C    
 INNER JOIN PROCESO  P  ON (C.CODIGO_PROCESO = P.CODIGO_PROCESO)    
 INNER JOIN DLCCR  CR  ON (C.CODIGO_PROCESO = @Codigo_proceso     
       AND C.DLNP = CR.DLACC    
       AND(CONVERT(INT,    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +     
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +     
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )     
        <     
        CONVERT(INT,    
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +     
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +     
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END    
        )    
        OR    
            
        CONVERT(INT,    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +     
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END    
        )    
        =    
        CONVERT(INT,    
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +     
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END     
        )    
      )    
 )    
 WHERE DLIC >=0    
 GROUP BY CR.DLACC    
    
SELECT   
CodigoBanbif = CAST('2184' AS VARCHAR(4)),  
MesAnio = RIGHT('0000'+@MES_PROCESO,2) + @ANIO_PROCESO, 
DOI = LEFT(LTRIM(RTRIM(CAST(ISNULL(CRE.DLDNI,'') AS VARCHAR(8))))+'        ',8),  
NombresClie = LEFT(LTRIM(RTRIM(CAST(C.DLPA + ' ' + C.DLMA + ', ' + C.DLMN AS VARCHAR(47))))+'                                                  ',47),  
ImporteCuota = RIGHT('         '+ LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS VARCHAR(9)),'.',''))), 7)     
 FROM CLIENTECUOTA C INNER JOIN DLCRE  ON ( DLNP  = DLACC )        
 INNER JOIN dlcnt cnt  ON ( C.dlnp  = cnt.DLCACC)        
 INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)    
 LEFT JOIN DLCRE CRE ON (C.DLNP = CRE.DLACC)  
 WHERE  C.CODIGO_PROCESO = @codigo_proceso AND        
  DLST = CASE WHEN RTRIM(@situacionTrabajador ) = '-' THEN DLST        
       ELSE @situacionTrabajador         
   END AND     
  DLIC >=0  
  order by NombresClie   
 DROP TABLE #TEMPO    
    
END    
    
END    
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNACAJADMINText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNACAJADMINText]    
@Codigo_proceso  AS UNIQUEIDENTIFIER,        
@situacionTrabajador as char ( 2 )                               
/*    
Creado por: Christian Rivera    
Fecha: 25-02-2015    
Motivo: Archivo de descuentos para CAFAE DE LA UNIVERSIDAD NACIONAL DE TRUJILLO    
*/    
AS                                                      
BEGIN                                                                                                       
    
SET NOCOUNT ON                                                       
    
DECLARE @NumeroDocumento AS NVARCHAR(12)        
DECLARE @Codigo_Cliente  AS INT        
        
SELECT @NumeroDocumento= C.NumeroDocumento,         
 @Codigo_Cliente = C.Codigo_Cliente          
FROM Cliente C         
 INNER JOIN Proceso P ON (C.Codigo_Cliente = P.Codigo_Cliente)         
WHERE P.Codigo_proceso = @Codigo_proceso        
        
DECLARE @Codigo_Cliente_IBS AS INT               
DECLARE @Tipo_Cuota  AS INT              
              
SELECT TOP 1 @Codigo_Cliente_IBS = DLCC FROM CLIENTECUOTA WHERE Codigo_proceso = @Codigo_proceso GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @Codigo_Cliente_IBS    
                                                                 
 IF @TIPO_CUOTA = 1                                                    
 BEGIN                                                                                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',     
   CC.DLIC AS 'MONTO_CUOTA'  
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
  WHERE CC.Codigo_proceso = @codigo_proceso     
  AND (substring(CC.DLCR,1,2)) = 'AD'
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)  
 END                                        
 ELSE IF @TIPO_CUOTA = 2                                        
 BEGIN                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',   
   CR.DLIMC AS 'MONTO_CUOTA'    ,(substring(CC.DLCR,1,2))           
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)      
  WHERE CC.Codigo_proceso = @codigo_proceso     
 AND (substring(CC.DLCR,1,2)) = 'AD'
  AND CC.DLIC >= 0     
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)                                         
 END                                        
 ELSE IF @TIPO_CUOTA = 3                                        
 BEGIN                                                                                       
  SELECT CR.DLACC 'PAGARE',        
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON CC.CODIGO_PROCESO = P.CODIGO_PROCESO        
 INNER JOIN HISTORICODLCCR CR ON CC.CODIGO_PROCESO = @Codigo_proceso AND CC.CODIGO_PROCESO = CR.CODIGO_PROCESO AND CC.DLNP = CR.DLACC AND        
    (         
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCD), 2)) < CONVERT(VARCHAR(6), GETDATE(), 12)) OR        
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2)) = LEFT(CONVERT(VARCHAR(6), GETDATE(), 12), 4))        
    )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
    
 SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',     
  CC.DLNP AS 'PAGARE',     
  CC.DLNE AS 'NOMBRE_TRABAJADOR',   
  T.CUOTA AS 'MONTO_CUOTA'              
 FROM CLIENTECUOTA CC        
 INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)         
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @codigo_proceso     
AND (substring(CC.DLCR,1,2)) = 'AD'
AND CC.DLIC >= 0     
 ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)    
        
 DROP TABLE #TEMPO        
 END                            
     
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNACAJCASText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNACAJCASText]    
@Codigo_proceso  AS UNIQUEIDENTIFIER,        
@situacionTrabajador as char ( 2 )                               
/*    
Creado por: Christian Rivera    
Fecha: 25-02-2015    
Motivo: Archivo de descuentos para CAFAE DE LA UNIVERSIDAD NACIONAL DE TRUJILLO    
*/    
AS                                                      
BEGIN                                                                                                       
    
SET NOCOUNT ON                                                       
    
DECLARE @NumeroDocumento AS NVARCHAR(12)        
DECLARE @Codigo_Cliente  AS INT        
        
SELECT @NumeroDocumento= C.NumeroDocumento,         
 @Codigo_Cliente = C.Codigo_Cliente          
FROM Cliente C         
 INNER JOIN Proceso P ON (C.Codigo_Cliente = P.Codigo_Cliente)         
WHERE P.Codigo_proceso = @Codigo_proceso        
        
DECLARE @Codigo_Cliente_IBS AS INT               
DECLARE @Tipo_Cuota  AS INT              
              
SELECT TOP 1 @Codigo_Cliente_IBS = DLCC FROM CLIENTECUOTA WHERE Codigo_proceso = @Codigo_proceso GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @Codigo_Cliente_IBS    
                                                                 
 IF @TIPO_CUOTA = 1                                                    
 BEGIN                                                                                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',     
   CC.DLIC AS 'MONTO_CUOTA'  
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
  WHERE CC.Codigo_proceso = @codigo_proceso     
  AND (substring(CC.DLCR,1,2)) = 'CA'
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)  
 END                                        
 ELSE IF @TIPO_CUOTA = 2                                        
 BEGIN                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',   
   CR.DLIMC AS 'MONTO_CUOTA'               
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)      
  WHERE CC.Codigo_proceso = @codigo_proceso     
 AND (substring(CC.DLCR,1,2)) = 'CA'
  AND CC.DLIC >= 0     
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)                                         
 END                                        
 ELSE IF @TIPO_CUOTA = 3                                        
 BEGIN                                                                                       
  SELECT CR.DLACC 'PAGARE',        
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON CC.CODIGO_PROCESO = P.CODIGO_PROCESO        
 INNER JOIN HISTORICODLCCR CR ON CC.CODIGO_PROCESO = @Codigo_proceso AND CC.CODIGO_PROCESO = CR.CODIGO_PROCESO AND CC.DLNP = CR.DLACC AND        
    (         
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCD), 2)) < CONVERT(VARCHAR(6), GETDATE(), 12)) OR        
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2)) = LEFT(CONVERT(VARCHAR(6), GETDATE(), 12), 4))        
    )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
    
 SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',     
  CC.DLNP AS 'PAGARE',     
  CC.DLNE AS 'NOMBRE_TRABAJADOR',   
  T.CUOTA AS 'MONTO_CUOTA'              
 FROM CLIENTECUOTA CC        
 INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)         
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @codigo_proceso     
AND (substring(CC.DLCR,1,2)) = 'CA'
AND CC.DLIC >= 0     
 ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)    
        
 DROP TABLE #TEMPO        
 END                            
     
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNACAJDJText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNACAJDJText]    
@Codigo_proceso  AS UNIQUEIDENTIFIER,        
@situacionTrabajador as char ( 2 )                               
/*    
Creado por: Christian Rivera    
Fecha: 25-02-2015    
Motivo: Archivo de descuentos para CAFAE DE LA UNIVERSIDAD NACIONAL DE TRUJILLO    
*/    
AS                                                      
BEGIN                                                                                                       
    
SET NOCOUNT ON                                                       
    
DECLARE @NumeroDocumento AS NVARCHAR(12)        
DECLARE @Codigo_Cliente  AS INT        
        
SELECT @NumeroDocumento= C.NumeroDocumento,         
 @Codigo_Cliente = C.Codigo_Cliente          
FROM Cliente C         
 INNER JOIN Proceso P ON (C.Codigo_Cliente = P.Codigo_Cliente)         
WHERE P.Codigo_proceso = @Codigo_proceso        
        
DECLARE @Codigo_Cliente_IBS AS INT               
DECLARE @Tipo_Cuota  AS INT              
              
SELECT TOP 1 @Codigo_Cliente_IBS = DLCC FROM CLIENTECUOTA WHERE Codigo_proceso = @Codigo_proceso GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @Codigo_Cliente_IBS    
                                                                 
 IF @TIPO_CUOTA = 1                                                    
 BEGIN                                                                                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',     
   CC.DLIC AS 'MONTO_CUOTA'  
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
  WHERE CC.Codigo_proceso = @codigo_proceso     
  AND (substring(CC.DLCR,1,2)) = 'DJ'
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)  
 END                                        
 ELSE IF @TIPO_CUOTA = 2                                        
 BEGIN                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',   
   CR.DLIMC AS 'MONTO_CUOTA'    ,(substring(CC.DLCR,1,2))           
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)      
  WHERE CC.Codigo_proceso = @codigo_proceso     
 AND (substring(CC.DLCR,1,2)) = 'DJ'
  AND CC.DLIC >= 0     
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)                                         
 END                                        
 ELSE IF @TIPO_CUOTA = 3                                        
 BEGIN                                                                                       
  SELECT CR.DLACC 'PAGARE',        
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON CC.CODIGO_PROCESO = P.CODIGO_PROCESO        
 INNER JOIN HISTORICODLCCR CR ON CC.CODIGO_PROCESO = @Codigo_proceso AND CC.CODIGO_PROCESO = CR.CODIGO_PROCESO AND CC.DLNP = CR.DLACC AND        
    (         
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCD), 2)) < CONVERT(VARCHAR(6), GETDATE(), 12)) OR        
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2)) = LEFT(CONVERT(VARCHAR(6), GETDATE(), 12), 4))        
    )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
    
 SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',     
  CC.DLNP AS 'PAGARE',     
  CC.DLNE AS 'NOMBRE_TRABAJADOR',   
  T.CUOTA AS 'MONTO_CUOTA'              
 FROM CLIENTECUOTA CC        
 INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)         
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @codigo_proceso     
AND (substring(CC.DLCR,1,2)) = 'DJ'
AND CC.DLIC >= 0     
 ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)    
        
 DROP TABLE #TEMPO        
 END                            
     
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNACAJDOCENTESText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNACAJDOCENTESText]    
@Codigo_proceso  AS UNIQUEIDENTIFIER,        
@situacionTrabajador as char ( 2 )                               
/*    
Creado por: Christian Rivera    
Fecha: 25-02-2015    
Motivo: Archivo de descuentos para CAFAE DE LA UNIVERSIDAD NACIONAL DE TRUJILLO    
*/    
AS                                                      
BEGIN                                                                                                       
    
SET NOCOUNT ON                                                       
    
DECLARE @NumeroDocumento AS NVARCHAR(12)        
DECLARE @Codigo_Cliente  AS INT        
        
SELECT @NumeroDocumento= C.NumeroDocumento,         
 @Codigo_Cliente = C.Codigo_Cliente          
FROM Cliente C         
 INNER JOIN Proceso P ON (C.Codigo_Cliente = P.Codigo_Cliente)         
WHERE P.Codigo_proceso = @Codigo_proceso        
        
DECLARE @Codigo_Cliente_IBS AS INT               
DECLARE @Tipo_Cuota  AS INT              
              
SELECT TOP 1 @Codigo_Cliente_IBS = DLCC FROM CLIENTECUOTA WHERE Codigo_proceso = @Codigo_proceso GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @Codigo_Cliente_IBS    
                                                                 
 IF @TIPO_CUOTA = 1                                                    
 BEGIN                                                                                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',     
   CC.DLIC AS 'MONTO_CUOTA'  
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
  WHERE CC.Codigo_proceso = @codigo_proceso     
  AND (substring(CC.DLCR,1,2)) = 'DO'
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)  
 END                                        
 ELSE IF @TIPO_CUOTA = 2                                        
 BEGIN                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',   
   CR.DLIMC AS 'MONTO_CUOTA'               
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)      
  WHERE CC.Codigo_proceso = @codigo_proceso     
 AND (substring(CC.DLCR,1,2)) = 'DO'
  AND CC.DLIC >= 0     
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)                                         
 END                                        
 ELSE IF @TIPO_CUOTA = 3                                        
 BEGIN                                                                                       
  SELECT CR.DLACC 'PAGARE',        
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON CC.CODIGO_PROCESO = P.CODIGO_PROCESO        
 INNER JOIN HISTORICODLCCR CR ON CC.CODIGO_PROCESO = @Codigo_proceso AND CC.CODIGO_PROCESO = CR.CODIGO_PROCESO AND CC.DLNP = CR.DLACC AND        
    (         
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCD), 2)) < CONVERT(VARCHAR(6), GETDATE(), 12)) OR        
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2)) = LEFT(CONVERT(VARCHAR(6), GETDATE(), 12), 4))        
    )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
    
 SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',     
  CC.DLNP AS 'PAGARE',     
  CC.DLNE AS 'NOMBRE_TRABAJADOR',   
  T.CUOTA AS 'MONTO_CUOTA'              
 FROM CLIENTECUOTA CC        
 INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)         
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @codigo_proceso     
AND (substring(CC.DLCR,1,2)) = 'DO'
AND CC.DLIC >= 0     
 ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)    
        
 DROP TABLE #TEMPO        
 END                            
     
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNACAJOBREROSText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNACAJOBREROSText]    
@Codigo_proceso  AS UNIQUEIDENTIFIER,        
@situacionTrabajador as char ( 2 )                               
/*    
Creado por: Christian Rivera    
Fecha: 25-02-2015    
Motivo: Archivo de descuentos para CAFAE DE LA UNIVERSIDAD NACIONAL DE TRUJILLO    
*/    
AS                                                      
BEGIN                                                                                                       
    
SET NOCOUNT ON                                                       
    
DECLARE @NumeroDocumento AS NVARCHAR(12)        
DECLARE @Codigo_Cliente  AS INT        
        
SELECT @NumeroDocumento= C.NumeroDocumento,         
 @Codigo_Cliente = C.Codigo_Cliente          
FROM Cliente C         
 INNER JOIN Proceso P ON (C.Codigo_Cliente = P.Codigo_Cliente)         
WHERE P.Codigo_proceso = @Codigo_proceso        
        
DECLARE @Codigo_Cliente_IBS AS INT               
DECLARE @Tipo_Cuota  AS INT              
              
SELECT TOP 1 @Codigo_Cliente_IBS = DLCC FROM CLIENTECUOTA WHERE Codigo_proceso = @Codigo_proceso GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @Codigo_Cliente_IBS    
                                                                 
 IF @TIPO_CUOTA = 1                                                    
 BEGIN                                                                                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',     
   CC.DLIC AS 'MONTO_CUOTA'  
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
  WHERE CC.Codigo_proceso = @codigo_proceso     
  AND (substring(CC.DLCR,1,2)) = 'OB'
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)  
 END                                        
 ELSE IF @TIPO_CUOTA = 2                                        
 BEGIN                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN'   
         
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)      
  WHERE CC.Codigo_proceso = @codigo_proceso     
 AND (substring(CC.DLCR,1,2)) = 'OB'
  AND CC.DLIC >= 0     
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)                                         
 END                                        
 ELSE IF @TIPO_CUOTA = 3                                        
 BEGIN                                                                                       
  SELECT CR.DLACC 'PAGARE',        
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON CC.CODIGO_PROCESO = P.CODIGO_PROCESO        
 INNER JOIN HISTORICODLCCR CR ON CC.CODIGO_PROCESO = @Codigo_proceso AND CC.CODIGO_PROCESO = CR.CODIGO_PROCESO AND CC.DLNP = CR.DLACC AND        
    (         
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCD), 2)) < CONVERT(VARCHAR(6), GETDATE(), 12)) OR        
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2)) = LEFT(CONVERT(VARCHAR(6), GETDATE(), 12), 4))        
    )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
    
 SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',     
  CC.DLNP AS 'PAGARE',     
  CC.DLNE AS 'NOMBRE_TRABAJADOR',   
  T.CUOTA AS 'MONTO_CUOTA'              
 FROM CLIENTECUOTA CC        
 INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)         
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @codigo_proceso     
AND (substring(CC.DLCR,1,2)) = 'OB'
AND CC.DLIC >= 0     
 ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)    
        
 DROP TABLE #TEMPO        
 END                            
     
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNACAJPENSIONISTASText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNACAJPENSIONISTASText]    
@Codigo_proceso  AS UNIQUEIDENTIFIER,        
@situacionTrabajador as char ( 2 )                               
/*    
Creado por: Christian Rivera    
Fecha: 25-02-2015    
Motivo: Archivo de descuentos para CAFAE DE LA UNIVERSIDAD NACIONAL DE TRUJILLO    
*/    
AS                                                      
BEGIN                                                                                                       
    
SET NOCOUNT ON                                                       
    
DECLARE @NumeroDocumento AS NVARCHAR(12)        
DECLARE @Codigo_Cliente  AS INT        
        
SELECT @NumeroDocumento= C.NumeroDocumento,         
 @Codigo_Cliente = C.Codigo_Cliente          
FROM Cliente C         
 INNER JOIN Proceso P ON (C.Codigo_Cliente = P.Codigo_Cliente)         
WHERE P.Codigo_proceso = @Codigo_proceso        
        
DECLARE @Codigo_Cliente_IBS AS INT               
DECLARE @Tipo_Cuota  AS INT              
              
SELECT TOP 1 @Codigo_Cliente_IBS = DLCC FROM CLIENTECUOTA WHERE Codigo_proceso = @Codigo_proceso GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @Codigo_Cliente_IBS    
                                                                 
 IF @TIPO_CUOTA = 1                                                    
 BEGIN                                                                                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',     
   CC.DLIC AS 'MONTO_CUOTA'  
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
  WHERE CC.Codigo_proceso = @codigo_proceso     
  AND (substring(CC.DLCR,1,2)) = 'PE'
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)  
 END                                        
 ELSE IF @TIPO_CUOTA = 2                                        
 BEGIN                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',   
   CR.DLIMC AS 'MONTO_CUOTA'               
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)      
  WHERE CC.Codigo_proceso = @codigo_proceso     
 AND (substring(CC.DLCR,1,2)) = 'PE'
  AND CC.DLIC >= 0     
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)                                         
 END                                        
 ELSE IF @TIPO_CUOTA = 3                                        
 BEGIN                                                                                       
  SELECT CR.DLACC 'PAGARE',        
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON CC.CODIGO_PROCESO = P.CODIGO_PROCESO        
 INNER JOIN HISTORICODLCCR CR ON CC.CODIGO_PROCESO = @Codigo_proceso AND CC.CODIGO_PROCESO = CR.CODIGO_PROCESO AND CC.DLNP = CR.DLACC AND        
    (         
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCD), 2)) < CONVERT(VARCHAR(6), GETDATE(), 12)) OR        
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2)) = LEFT(CONVERT(VARCHAR(6), GETDATE(), 12), 4))        
    )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
    
 SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',     
  CC.DLNP AS 'PAGARE',     
  CC.DLNE AS 'NOMBRE_TRABAJADOR',   
  T.CUOTA AS 'MONTO_CUOTA'              
 FROM CLIENTECUOTA CC        
 INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)         
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @codigo_proceso     
AND (substring(CC.DLCR,1,2)) = 'PE'
AND CC.DLIC >= 0     
 ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)    
        
 DROP TABLE #TEMPO        
 END                            
     
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNACAJSINCATText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNACAJSINCATText]    
@Codigo_proceso  AS UNIQUEIDENTIFIER,        
@situacionTrabajador as char ( 2 )                               
/*    
Creado por: Christian Rivera    
Fecha: 25-02-2015    
Motivo: Archivo de descuentos para CAFAE DE LA UNIVERSIDAD NACIONAL DE TRUJILLO    
*/    
AS                                                      
BEGIN                                                                                                       
    
SET NOCOUNT ON                                                       
    
DECLARE @NumeroDocumento AS NVARCHAR(12)        
DECLARE @Codigo_Cliente  AS INT        
        
SELECT @NumeroDocumento= C.NumeroDocumento,         
 @Codigo_Cliente = C.Codigo_Cliente          
FROM Cliente C         
 INNER JOIN Proceso P ON (C.Codigo_Cliente = P.Codigo_Cliente)         
WHERE P.Codigo_proceso = @Codigo_proceso        
        
DECLARE @Codigo_Cliente_IBS AS INT               
DECLARE @Tipo_Cuota  AS INT              
              
SELECT TOP 1 @Codigo_Cliente_IBS = DLCC FROM CLIENTECUOTA WHERE Codigo_proceso = @Codigo_proceso GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @Codigo_Cliente_IBS    
                                                                 
 IF @TIPO_CUOTA = 1                                                    
 BEGIN                                                                                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',     
   CC.DLIC AS 'MONTO_CUOTA'  
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
  WHERE CC.Codigo_proceso = @codigo_proceso     
  AND (substring(CC.DLCR,1,2)) = ' '
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)  
 END                                        
 ELSE IF @TIPO_CUOTA = 2                                        
 BEGIN                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',   
   CR.DLIMC AS 'MONTO_CUOTA'               
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)      
  WHERE CC.Codigo_proceso = '1b0973f1-2533-4266-9fa1-b7f5ad699046'    
 AND (substring(CC.DLCR,1,2)) = ' '
  AND CC.DLIC >= 0     
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)                                         
 END                                        
 ELSE IF @TIPO_CUOTA = 3                                        
 BEGIN                                                                                       
  SELECT CR.DLACC 'PAGARE',        
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON CC.CODIGO_PROCESO = P.CODIGO_PROCESO        
 INNER JOIN HISTORICODLCCR CR ON CC.CODIGO_PROCESO = @Codigo_proceso AND CC.CODIGO_PROCESO = CR.CODIGO_PROCESO AND CC.DLNP = CR.DLACC AND        
    (         
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCD), 2)) < CONVERT(VARCHAR(6), GETDATE(), 12)) OR        
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2)) = LEFT(CONVERT(VARCHAR(6), GETDATE(), 12), 4))        
    )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
    
 SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',     
  CC.DLNP AS 'PAGARE',     
  CC.DLNE AS 'NOMBRE_TRABAJADOR',   
  T.CUOTA AS 'MONTO_CUOTA'              
 FROM CLIENTECUOTA CC        
 INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)         
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @codigo_proceso     
AND (substring(CC.DLCR,1,2)) = ' '
AND CC.DLIC >= 0     
 ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)    
        
 DROP TABLE #TEMPO        
 END                            
     
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNACAJText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNACAJText]    
@Codigo_proceso  AS UNIQUEIDENTIFIER,        
@situacionTrabajador as char ( 2 )                               
/*    
Creado por: Christian Rivera    
Fecha: 25-02-2015    
Motivo: Archivo de descuentos para CAFAE DE LA UNIVERSIDAD NACIONAL DE TRUJILLO    
*/    
AS                                                      
BEGIN                                                                                                       
    
SET NOCOUNT ON                                                       
    
DECLARE @NumeroDocumento AS NVARCHAR(12)        
DECLARE @Codigo_Cliente  AS INT        
        
SELECT @NumeroDocumento= C.NumeroDocumento,         
 @Codigo_Cliente = C.Codigo_Cliente          
FROM Cliente C         
 INNER JOIN Proceso P ON (C.Codigo_Cliente = P.Codigo_Cliente)         
WHERE P.Codigo_proceso = @Codigo_proceso        
        
DECLARE @Codigo_Cliente_IBS AS INT               
DECLARE @Tipo_Cuota  AS INT              
              
SELECT TOP 1 @Codigo_Cliente_IBS = DLCC FROM CLIENTECUOTA WHERE Codigo_proceso = @Codigo_proceso GROUP BY DLCC              
              
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @Codigo_Cliente_IBS    
                                                                 
 IF @TIPO_CUOTA = 1                                                    
 BEGIN                                                                                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',     
   CC.DLIC AS 'MONTO_CUOTA'  
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
  WHERE CC.Codigo_proceso = @codigo_proceso     
  AND (substring(CC.DLCR,1,2) = case when rtrim(@situacionTrabajador ) = '-' then substring(CC.DLCR,1,2) ELSE @situacionTrabajador END)  
  AND CC.DLIC >= 0     
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)       
 END                                        
 ELSE IF @TIPO_CUOTA = 2                                        
 BEGIN                    
  SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',    
   CC.DLNP AS 'PAGARE',     
   CC.DLNE AS 'NOMBRE_TRABAJADOR',   
   CR.DLIMC AS 'MONTO_CUOTA'               
  FROM CLIENTECUOTA CC     
  INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)      
  INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)      
  WHERE CC.Codigo_proceso = @codigo_proceso     
  AND (substring(CC.DLCR,1,2) = case when rtrim(@situacionTrabajador ) = '-' then substring(CC.DLCR,1,2) ELSE @situacionTrabajador END)  
  AND CC.DLIC >= 0     
  ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)                                          
 END                                        
 ELSE IF @TIPO_CUOTA = 3                                        
 BEGIN                                                                                       
  SELECT CR.DLACC 'PAGARE',        
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'        
 INTO #TEMPO        
 FROM ClienteCuota CC        
 INNER JOIN PROCESO P ON CC.CODIGO_PROCESO = P.CODIGO_PROCESO        
 INNER JOIN HISTORICODLCCR CR ON CC.CODIGO_PROCESO = @Codigo_proceso AND CC.CODIGO_PROCESO = CR.CODIGO_PROCESO AND CC.DLNP = CR.DLACC AND        
    (         
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCD), 2)) < CONVERT(VARCHAR(6), GETDATE(), 12)) OR        
      (CONVERT(INT, RIGHT('00' + CONVERT(VARCHAR, CR.DLVCA),2) + RIGHT('00' + CONVERT(VARCHAR, CR.DLVCM), 2)) = LEFT(CONVERT(VARCHAR(6), GETDATE(), 12), 4))        
    )        
 WHERE DLIC >= 0        
 GROUP BY CR.DLACC        
    
 SELECT ROW_NUMBER() OVER (ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)) AS 'ORDEN',     
  CC.DLNP AS 'PAGARE',     
  CC.DLNE AS 'NOMBRE_TRABAJADOR',   
  T.CUOTA AS 'MONTO_CUOTA'              
 FROM CLIENTECUOTA CC        
 INNER JOIN DLCRE CRE ON (CC.DLCC = CRE.DLCCC AND CC.DLAN = CRE.DLAÑO AND CC.DLAG = CRE.DLAGC AND CC.DLCO = CRE.DLCOC AND CRE.DLACC = CC.DLNP)         
 INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = CC.Codigo_proceso AND CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP)    
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)        
 WHERE CC.Codigo_proceso = @codigo_proceso     
  AND (substring(CC.DLCR,1,2) = case when rtrim(@situacionTrabajador ) = '-' then substring(CC.DLCR,1,2) ELSE @situacionTrabajador END)  
  AND CC.DLIC >= 0     
 ORDER BY CC.DLNE ,substring(CC.DLCR,1,2)    
        
 DROP TABLE #TEMPO        
 END                            
     
END 
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNFV_ACTIVOSText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNFV_ACTIVOSText]    
@Codigo_proceso as uniqueidentifier,    
@situacionTrabajador as char ( 1 )     
AS    
BEGIN    
  
  
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT LEFT ( DLCM, 10 )  CODIGO, DLDNI [NRO DE DNI],     
 CLASE =  SUBSTRING ( DLCR , 1, 2 ),  CAST ( DLNE AS VARCHAR(35)) AS NOMBRE, DLIC AS CUOTA,    
 CAST ( CASE WHEN LEN ( CAST(isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )  AS VARCHAR(2)))= 1 THEN  '0' ELSE '' END     
 AS VARCHAR (2))+     
 CAST( isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )    
 AS VARCHAR (2)) + '/' +     
    
 CASE WHEN LEN ( CAST (     
 cast ( dlcnc1 as numeric ( 2 )    
 ) AS VARCHAR(2)) ) = 1 THEN '0' ELSE '' END +     
    
 CAST (     
  cast ( dlcnc1 as numeric ( 2 )    
 )    
 AS VARCHAR(2)) [NRO DE CUOTA]    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST IN ( 'A', '')  
	AND DLIC >= 0

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT LEFT ( DLCM, 10 )  CODIGO, DLDNI [NRO DE DNI],     
 CLASE =  SUBSTRING ( DLCR , 1, 2 ),  CAST ( DLNE AS VARCHAR(35)) AS NOMBRE, CR.DLIMC AS CUOTA,    
 CAST ( CASE WHEN LEN ( CAST(isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )  AS VARCHAR(2)))= 1 THEN  '0' ELSE '' END     
 AS VARCHAR (2))+     
 CAST( isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )    
 AS VARCHAR (2)) + '/' +     
    
 CASE WHEN LEN ( CAST (     
 cast ( dlcnc1 as numeric ( 2 )    
 ) AS VARCHAR(2)) ) = 1 THEN '0' ELSE '' END +     
    
 CAST (     
  cast ( dlcnc1 as numeric ( 2 )    
 )    
 AS VARCHAR(2)) [NRO DE CUOTA]    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST IN ( 'A', '')  
	 AND DLIC >= 0


END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
  WHERE DLIC >= 0
	GROUP BY CR.DLACC

	
	SELECT LEFT ( DLCM, 10 )  CODIGO, DLDNI [NRO DE DNI],     
 CLASE =  SUBSTRING ( DLCR , 1, 2 ),  CAST ( DLNE AS VARCHAR(35)) AS NOMBRE, T.CUOTA AS CUOTA,    
 CAST ( CASE WHEN LEN ( CAST(isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )  AS VARCHAR(2)))= 1 THEN  '0' ELSE '' END     
 AS VARCHAR (2))+     
 CAST( isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )    
 AS VARCHAR (2)) + '/' +     
    
 CASE WHEN LEN ( CAST (     
 cast ( dlcnc1 as numeric ( 2 )    
 ) AS VARCHAR(2)) ) = 1 THEN '0' ELSE '' END +     
    
 CAST (     
  cast ( dlcnc1 as numeric ( 2 )    
 )    
 AS VARCHAR(2)) [NRO DE CUOTA]    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST IN ('A' , '')  
   AND DLIC >= 0

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNFV_CESANTESText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNFV_CESANTESText]    
@Codigo_proceso as uniqueidentifier,    
@situacionTrabajador as char ( 1 )     
AS    
BEGIN    
  
  
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT LEFT ( DLCM, 10 )  CODIGO, DLDNI [NRO DE DNI],     
 CLASE =  SUBSTRING ( DLCR , 1, 2 ),  CAST ( DLNE AS VARCHAR(35)) AS NOMBRE, DLIC AS CUOTA,    
 CAST ( CASE WHEN LEN ( CAST(isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )  AS VARCHAR(2)))= 1 THEN  '0' ELSE '' END     
 AS VARCHAR (2))+     
 CAST( isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )    
 AS VARCHAR (2)) + '/' +     
    
 CASE WHEN LEN ( CAST (     
 cast ( dlcnc1 as numeric ( 2 )    
 ) AS VARCHAR(2)) ) = 1 THEN '0' ELSE '' END +     
    
 CAST (     
  cast ( dlcnc1 as numeric ( 2 )    
 )    
 AS VARCHAR(2)) [NRO DE CUOTA]    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST ='C'
	AND DLIC >= 0

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT LEFT ( DLCM, 10 )  CODIGO, DLDNI [NRO DE DNI],     
 CLASE =  SUBSTRING ( DLCR , 1, 2 ),  CAST ( DLNE AS VARCHAR(35)) AS NOMBRE, CR.DLIMC AS CUOTA,    
 CAST ( CASE WHEN LEN ( CAST(isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )  AS VARCHAR(2)))= 1 THEN  '0' ELSE '' END     
 AS VARCHAR (2))+     
 CAST( isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )    
 AS VARCHAR (2)) + '/' +     
    
 CASE WHEN LEN ( CAST (     
 cast ( dlcnc1 as numeric ( 2 )    
 ) AS VARCHAR(2)) ) = 1 THEN '0' ELSE '' END +     
    
 CAST (     
  cast ( dlcnc1 as numeric ( 2 )    
 )    
 AS VARCHAR(2)) [NRO DE CUOTA]    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST ='C'
	 AND DLIC >= 0


END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
  WHERE DLIC >= 0
	GROUP BY CR.DLACC

	
	SELECT LEFT ( DLCM, 10 )  CODIGO, DLDNI [NRO DE DNI],     
 CLASE =  SUBSTRING ( DLCR , 1, 2 ),  CAST ( DLNE AS VARCHAR(35)) AS NOMBRE, T.CUOTA AS CUOTA,    
 CAST ( CASE WHEN LEN ( CAST(isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )  AS VARCHAR(2)))= 1 THEN  '0' ELSE '' END     
 AS VARCHAR (2))+     
 CAST( isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )    
 AS VARCHAR (2)) + '/' +     
    
 CASE WHEN LEN ( CAST (     
 cast ( dlcnc1 as numeric ( 2 )    
 ) AS VARCHAR(2)) ) = 1 THEN '0' ELSE '' END +     
    
 CAST (     
  cast ( dlcnc1 as numeric ( 2 )    
 )    
 AS VARCHAR(2)) [NRO DE CUOTA]    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST ='C'
   AND DLIC >= 0

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNFVText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNFVText]    
@Codigo_proceso as uniqueidentifier,    
@situacionTrabajador as char ( 1 )     
AS    
BEGIN    
  
  
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT LEFT ( DLCM, 10 )  CODIGO, DLDNI [NRO DE DNI],     
 CLASE =  SUBSTRING ( DLCR , 1, 2 ),  CAST ( DLNE AS VARCHAR(35)) AS NOMBRE, DLIC AS CUOTA,    
 CAST ( CASE WHEN LEN ( CAST(isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )  AS VARCHAR(2)))= 1 THEN  '0' ELSE '' END     
 AS VARCHAR (2))+     
 CAST( isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )    
 AS VARCHAR (2)) + '/' +     
    
 CASE WHEN LEN ( CAST (     
 cast ( dlcnc1 as numeric ( 2 )    
 ) AS VARCHAR(2)) ) = 1 THEN '0' ELSE '' END +     
    
 CAST (     
  cast ( dlcnc1 as numeric ( 2 )    
 )    
 AS VARCHAR(2)) [NRO DE CUOTA]    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	AND DLIC >= 0

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT LEFT ( DLCM, 10 )  CODIGO, DLDNI [NRO DE DNI],     
 CLASE =  SUBSTRING ( DLCR , 1, 2 ),  CAST ( DLNE AS VARCHAR(35)) AS NOMBRE, CR.DLIMC AS CUOTA,    
 CAST ( CASE WHEN LEN ( CAST(isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )  AS VARCHAR(2)))= 1 THEN  '0' ELSE '' END     
 AS VARCHAR (2))+     
 CAST( isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )    
 AS VARCHAR (2)) + '/' +     
    
 CASE WHEN LEN ( CAST (     
 cast ( dlcnc1 as numeric ( 2 )    
 ) AS VARCHAR(2)) ) = 1 THEN '0' ELSE '' END +     
    
 CAST (     
  cast ( dlcnc1 as numeric ( 2 )    
 )    
 AS VARCHAR(2)) [NRO DE CUOTA]    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	 AND DLIC >= 0


END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
  WHERE DLIC >= 0
	GROUP BY CR.DLACC

	
	SELECT LEFT ( DLCM, 10 )  CODIGO, DLDNI [NRO DE DNI],     
 CLASE =  SUBSTRING ( DLCR , 1, 2 ),  CAST ( DLNE AS VARCHAR(35)) AS NOMBRE, T.CUOTA AS CUOTA,    
 CAST ( CASE WHEN LEN ( CAST(isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )  AS VARCHAR(2)))= 1 THEN  '0' ELSE '' END     
 AS VARCHAR (2))+     
 CAST( isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 )    
 AS VARCHAR (2)) + '/' +     
    
 CASE WHEN LEN ( CAST (     
 cast ( dlcnc1 as numeric ( 2 )    
 ) AS VARCHAR(2)) ) = 1 THEN '0' ELSE '' END +     
    
 CAST (     
  cast ( dlcnc1 as numeric ( 2 )    
 )    
 AS VARCHAR(2)) [NRO DE CUOTA]    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
   AND DLIC >= 0

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNICAAdministrativosPlazoFijoText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNICAAdministrativosPlazoFijoText]  
@codigo_proceso as varchar(36),  
@SituacionTrabajador  as char ( 1 ) = '-'  
AS  
BEGIN  


    
      
DECLARE @CODIGO_CLIENTE_IBS AS INT       
DECLARE @TIPO_CUOTA AS INT      
      
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso      
GROUP BY DLCC      
      
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS      
      
IF @TIPO_CUOTA = 1      
BEGIN  --BEGIN IF CUOTA    

 SELECT   
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),  
 Monto = cast ( DLIC as numeric ( 10, 2)),  
 Tipo =  cast( DLCR  AS CHAR ( 2 ))   
  
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),  
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,  
 Anno = CAST ( DLAP AS NUMERIC (4)) ,  
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),  
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),  
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),  
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,  
 Ncuota = isnull (   
   (SELECT MIN ( DLNCT )     
   FROM HistoricoDLCCR WHERE DLACC = DLNP  
   and Codigo_proceso =@codigo_proceso), 0 ),  
  
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */  
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )  
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )  
 WHERE CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST  
    ELSE @situacionTrabajador END  
  AND cast( DLCR  AS CHAR ( 2 )) = '09'  
  AND DLIC >= 0

END 
ELSE IF @TIPO_CUOTA = 2
BEGIN

 SELECT   
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),  
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),  
 Tipo =  cast( DLCR  AS CHAR ( 2 ))   
  
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),  
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,  
 Anno = CAST ( DLAP AS NUMERIC (4)) ,  
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),  
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),  
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),  
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,  
 Ncuota = isnull (   
   (SELECT MIN ( DLNCT )     
   FROM HistoricoDLCCR WHERE DLACC = DLNP  
   and Codigo_proceso =@codigo_proceso), 0 ),  
  
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */  
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )  
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)  
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )  
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'  
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST  
    ELSE @situacionTrabajador END  
  AND cast( DLCR  AS CHAR ( 2 )) = '09'  
   AND DLIC >= 0



END
ELSE IF @TIPO_CUOTA = 3
BEGIN

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	SELECT   
	Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),  
	Monto = cast ( T.CUOTA as numeric ( 10, 2)),  
	Tipo =  cast( DLCR  AS CHAR ( 2 ))   
  
	FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )  
	inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                
	---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )  
	WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'  
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST  
    ELSE @situacionTrabajador END  
	AND cast( DLCR  AS CHAR ( 2 )) = '09' 
	AND DLIC >= 0

END


END  
  
  
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNICAAdministrativosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



  
  
  CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNICAAdministrativosText]    
@codigo_proceso as varchar(36),    
@SituacionTrabajador  as char ( 1 ) = '-'    
AS    
BEGIN    
  
  
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 

		SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( DLIC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '02'    
  AND DLIC >= 0

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   


	SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '02'    
  AND DLIC >= 0
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	SELECT     
	Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
	Monto = cast ( T.CUOTA as numeric ( 10, 2)),    
	Tipo =  cast( DLCR  AS CHAR ( 2 ))     
	FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
	inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
	--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
	---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
	WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
	and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
	AND cast( DLCR  AS CHAR ( 2 )) = '02'    
	AND DLIC >= 0
	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNICAAltaDireccionText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNICAAltaDireccionText]    
@codigo_proceso as varchar(36),    
@SituacionTrabajador  as char ( 1 ) = '-'    
AS    
BEGIN    
  
  
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 
		 SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( DLIC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '10'    
	AND DLIC >= 0

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   
	 SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '10'    
 AND DLIC >= 0

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								<
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >= 0
	GROUP BY CR.DLACC

	 SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( T.CUOTA as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '10'    
	AND DLIC >= 0


	DROP TABLE #TEMPO

END

END



GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNICACesantesText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
 CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNICACesantesText]    
@codigo_proceso as varchar(36),    
@SituacionTrabajador  as char ( 1 ) = '-'    
AS    
BEGIN    
  
  
      
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 

	SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( DLIC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '03' 
   AND DLIC >=0
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   


	SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '03'   
  AND DLIC >=0
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
     WHERE DLIC >=0
	GROUP BY CR.DLACC

	SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast (T.CUOTA as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '03'   
  AND DLIC >=0

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNICADocentesContratadosText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
  
 CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNICADocentesContratadosText]    
@codigo_proceso as varchar(36),    
@SituacionTrabajador  as char ( 1 ) = '-'    
AS    
BEGIN   
  
        
DECLARE @CODIGO_CLIENTE_IBS AS INT         
DECLARE @TIPO_CUOTA AS INT        
        
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso        
GROUP BY DLCC        
        
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS        
        



IF @TIPO_CUOTA = 1        
BEGIN 
		 
 SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( DLIC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CODIGO_PROCESO = @codigo_proceso
 AND DLIC >=0
 --  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '04'  


END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '04'    
   AND DLIC >=0
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >=0
	GROUP BY CR.DLACC


	SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast (T.CUOTA as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                  
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE cc.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '04'    
  AND DLIC >=0
  
	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNICADocentesText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
 CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNICADocentesText]    
@codigo_proceso as varchar(36),    
@SituacionTrabajador  as char ( 1 ) = '-'    
AS    
BEGIN    
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          



IF @TIPO_CUOTA = 1        
BEGIN 

		SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( DLIC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '01'   
  AND DLIC >=0		
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   

	 
 SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CC.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
  AND cast( DLCR  AS CHAR ( 2 )) = '01'    
  AND DLIC >=0


END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
WHERE  DLIC >=0
	GROUP BY CR.DLACC

	 
 SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast (T.CUOTA as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 Tipo =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CC.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END 
  AND DLIC >=0   
  AND cast( DLCR  AS CHAR ( 2 )) = '01'    
  

	
	
	


	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNICAText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNICAText]    
@codigo_proceso as varchar(36),    
@SituacionTrabajador  as char ( 1 ) = '-'    
AS    
BEGIN    
        
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          




IF @TIPO_CUOTA = 1        
BEGIN 

		SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( DLIC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 SitLaboral =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)    
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
  ELSE @situacionTrabajador END    
  AND DLIC >=0

END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   
	
	SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( CR.DLIMC as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 SitLaboral =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)  
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                      
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CC.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
   AND DLIC >=0
  
END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >=0
	GROUP BY CR.DLACC

	
	SELECT     
 Documento =   SUBSTRING('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ), 0) AS CHAR(8)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CAST(DLDNI AS NUMERIC ),0) AS CHAR(8)),'.','')))) + 1 ,8 ),    
 Monto = cast ( T.CUOTA as numeric ( 10, 2)),    
 Tipo =  cast( DLCR  AS CHAR ( 2 ))     
    
/*Depe_id = CAST ( 1311 AS NUMERIC ( 4 ) ),    
 Mes = CAST ( DLMP  - 1 AS NUMERIC ( 2)) ,    
 Anno = CAST ( DLAP AS NUMERIC (4)) ,    
 SitLaboral =  CAST(CASE WHEN DLST = 'A' THEN 1  WHEN DLST = 'C' THEN 9  WHEN DLST = 'S' THEN 19 ELSE 0 end AS NUMERIC ( 2)),  --- CAST(1 AS NUMERIC ( 2)),    
 Apellidos = cast(rtrim(ltrim(DLPA)) +' ' + rtrim(ltrim(DLMA)) as char(35)),    
 Nombres =    cast(rtrim(ltrim(DLMN)) as char(35)),    
-- Ncuota = cast ( dlccp1 as numeric ( 2 )) +2,    
 Ncuota = isnull (     
   (SELECT MIN ( DLNCT )       
   FROM HistoricoDLCCR WHERE DLACC = DLNP    
   and Codigo_proceso =@codigo_proceso), 0 ),    
    
 MaxCuota = cast ( dlcnc1 as numeric ( 2 )) --+ 1 */    
 FROM CLIENTECUOTA CC iNNER JOIN DLCRE ON ( DLNP = DLACC )    
  inner join dlcnt cnt on ( cc.dlnp = cnt.DLCACC)  
	INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                      
  ---INNER JOIN DLCRE CRE ON (CRE.DLACC = CC.DLNP)   --DATABELENLAMBAYEQUE DB ON ( cc.dlnp = CAST( DB.WDEACC AS NUMERIC ) )    
 WHERE CC.CODIGO_PROCESO = @codigo_proceso--  'CED7042D-FDC8-4E35-A68F-55FC5E6C5937'    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST    
    ELSE @situacionTrabajador END    
   AND DLIC >=0
  
	DROP TABLE #TEMPO

END

END          

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNMSMText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
         
          
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNMSMText]  
@Codigo_proceso  as Uniqueidentifier,                    
@SituacionTrabajador  as char ( 1 )                    
AS                    
BEGIN                    
--UNIVERSIDAD NACIONAL MAYOR DE SAN MARCOS  
                
                  
DECLARE @CODIGO_CLIENTE_IBS AS INT                   
DECLARE @TIPO_CUOTA AS INT                  
                  
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                  
GROUP BY DLCC                  
                  
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                              
          
          
IF @TIPO_CUOTA = 1                  
BEGIN           
 SELECT       
 CPERSO = (case DLST when 'A' then right(dlcm, 6) when 'N' then right(dlcm, 8) when 'C' then right(dlcm, 6) end),  
 IMPORTE = cc.DLIC,   
 CDEDUC = 'D975',  
 PERSON = convert(char(50), replace(cc.dlne, ',', ''))  
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
    left JOIN DLCRE CRE                     
  ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
   AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
   AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
   AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
   AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                     
 WHERE [Codigo_proceso] = @Codigo_proceso                    
   and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                    
  ELSE @situacionTrabajador END                    
  AND DLIC >= 0   
END          
ELSE IF  @TIPO_CUOTA = 2              
BEGIN             
 SELECT            
 CPERSO = (case DLST when 'A' then right(dlcm, 6) when 'N' then right(dlcm, 8)  when 'C' then right(dlcm, 6) end),  
 IMPORTE = CR.DLIMC,   
 CDEDUC = 'D975',  
 PERSON = convert(char(50), replace(cc.dlne, ',', ''))  
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
   left JOIN DLCRE CRE                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))              
 INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                    
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                    
    ELSE @situacionTrabajador END                    
 AND DLIC >= 0   
          
END          
          
ELSE IF  @TIPO_CUOTA = 3              
BEGIN                   
          
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'          
    INTO #TEMPO          
 FROM ClienteCuota CC          
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)          
 INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso           
       AND CC.DLNP = CR.DLACC          
       AND(CONVERT(INT,          
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +           
      CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )           
        <           
        CONVERT(INT,          
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +           
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +           
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END          
        )          
        OR          
                  
        CONVERT(INT,          
     CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +           
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END          
        )          
        =          
        CONVERT(INT,          
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +           
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END           
        )          
      )          
 )          
 WHERE DLIC >= 0                         
 GROUP BY CR.DLACC            
           
 SELECT       
 CPERSO = (case DLST when 'A' then right(dlcm, 6) when 'N' then right(dlcm, 8) when 'C' then right(dlcm, 6) end),  
 IMPORTE = T.CUOTA,   
 CDEDUC = 'D975',  
 PERSON = convert(char(50), replace(cc.dlne, ',', ''))  
 FROM ClienteCuota CC left join DLCEC CEC ON ( CEC.DLCCDG = CC.DLCC)                    
   left JOIN DLCRE CRE                     
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )                    
     AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)                    
     AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)                    
     AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )                    
     AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))                     
 --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                            
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)          
 WHERE CC.[Codigo_proceso] = @Codigo_proceso                    
 and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST                    
    ELSE @situacionTrabajador END                    
 AND DLIC >= 0   
          
 DROP TABLE #TEMPO          
          
END          
          
END     
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUNPText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/  
/* Modif. Por : BANBIF(AHSP) - 20120717    */  
/* Motivo : Adicionar una "R" y eliminar un espacio en el nombre */  
/************************************************************************/  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUNPText]  
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )       
AS      
BEGIN      
            
DECLARE @CODIGO_CLIENTE_IBS  AS INT             
DECLARE @TIPO_CUOTA   AS INT            
            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC   
FROM  CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso            
GROUP BY DLCC            
            
SELECT @TIPO_CUOTA = TIPO_CUOTA   
FROM  MANTENIMIENTO_CUOTA   
WHERE  DLECUN = @CODIGO_CLIENTE_IBS            
            
IF @TIPO_CUOTA = 1          
BEGIN   
 SELECT 'R' +  RIGHT('00000' + DLCM ,5)   AS CODIGO,      
  LEFT(REPLACE(REPLACE(DLNE,', ','-'),',','-')+SPACE(23), 23)  AS NOMBRE,      
  '058'        AS COD_DSCTO,      
   'X'         AS SEPARADOR,      
  RIGHT('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS VARCHAR),'.',''))), 8) AS MONTO,      
  RIGHT('00' + CAST(ISNULL(( SELECT MIN(DLNCT)         
      FROM HistoricoDLCCR       
      WHERE  DLACC  = DLNP  AND      
       Codigo_proceso  = @codigo_proceso), 0 ) AS VARCHAR), 2)  AS  NRO_CUOTA      
 FROM CLIENTECUOTA CC INNER JOIN DLCRE  ON ( DLNP  = DLACC )      
 INNER JOIN dlcnt cnt  ON ( cc.dlnp  = cnt.DLCACC)      
 WHERE  CODIGO_PROCESO = @codigo_proceso AND      
  DLST   = CASE WHEN RTRIM(@situacionTrabajador ) = '-' THEN DLST      
         ELSE @situacionTrabajador       
         END      
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
 SELECT 'R' +  Right('00000' + DLCM ,5)   AS CODIGO,      
   LEFT(REPLACE(REPLACE(DLNE,', ','-'),',','-')+SPACE(23), 23)  AS NOMBRE,      
  '058'        AS COD_DSCTO,      
   'X'         AS SEPARADOR,      
  RIGHT('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS VARCHAR),'.',''))), 8) AS MONTO,      
  RIGHT('00' + CAST( ISNULL( (  SELECT  MIN(DLNCT)         
      FROM  HistoricoDLCCR       
      WHERE  DLACC   = DLNP AND      
       Codigo_proceso  = @codigo_proceso), 0 ) AS VARCHAR), 2)  AS  NRO_CUOTA      
 FROM CLIENTECUOTA CC   
 INNER JOIN DLCRE  ON ( DLNP  = DLACC )      
     INNER JOIN dlcnt cnt  ON ( cc.dlnp  = cnt.DLCACC)      
     INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                      
  WHERE  CC.CODIGO_PROCESO = @codigo_proceso AND      
    DLST   = CASE WHEN RTRIM(@situacionTrabajador ) = '-' THEN DLST      
         ELSE @situacionTrabajador       
   END AND   
  DLIC >=0    
   
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
 SELECT  CR.DLACC     'PAGARE',   
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF)  'CUOTA'  
 INTO  #TEMPO  
 FROM  ClienteCuota CC  
 INNER JOIN PROCESO  P  ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR  CR  ON (CC.CODIGO_PROCESO = @Codigo_proceso   
       AND CC.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE DLIC >=0  
 GROUP BY CR.DLACC  
  
 SELECT 'R' + Right('00000' + DLCM ,5)    AS CODIGO,      
  LEFT(REPLACE(REPLACE(DLNE,', ','-'),',','-')+SPACE(23), 23)  AS NOMBRE,      
  '058'        AS COD_DSCTO,      
  'X'         AS SEPARADOR,      
  RIGHT('00000000' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS VARCHAR),'.',''))), 8) AS MONTO,      
  RIGHT('00' + CAST( ISNULL(( SELECT MIN(DLNCT)         
      FROM  HistoricoDLCCR       
      WHERE  DLACC   = DLNP AND      
       Codigo_proceso  = @codigo_proceso), 0) AS VARCHAR), 2)  AS  NRO_CUOTA      
 FROM CLIENTECUOTA CC INNER JOIN DLCRE  ON ( DLNP  = DLACC )      
 INNER JOIN dlcnt cnt  ON ( cc.dlnp  = cnt.DLCACC)      
 INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)  
 WHERE  CC.CODIGO_PROCESO = @codigo_proceso AND      
  DLST = CASE WHEN RTRIM(@situacionTrabajador ) = '-' THEN DLST      
       ELSE @situacionTrabajador       
   END AND   
  DLIC >=0  
 DROP TABLE #TEMPO  
  
END  
  
END  
  

GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUTES03Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
  
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUTES03Text]      
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )       
AS      
BEGIN      
DECLARE @NumeroDocumento AS nvarchar(12)      
--Envio de la informacion del cronograma futuro en formato CSV      
 SET NOCOUNT ON       
  SELECT @NumeroDocumento = NumeroDocumento       
  FROM CLIENTE C INNER JOIN PROCESO P       
    ON (C.Codigo_Cliente = P.Codigo_Cliente)      
  WHERE Codigo_proceso = @Codigo_proceso      
        
  
  
          
DECLARE @CODIGO_CLIENTE_IBS AS INT           
DECLARE @TIPO_CUOTA AS INT          
          
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso          
GROUP BY DLCC          
          
SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS          
          



IF @TIPO_CUOTA = 1        
BEGIN 
	SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD      
     '2024'--'2272'      
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN      
     '2028'      
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4      
     '2024'      
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5      
     '2024'      
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO      
     '2024'--'2211'      
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL      
     '2180'--'2023'      
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6      
     '2024'      
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8      
     '2024'      
    ELSE      
     'BIF'       
    END      
    as varchar(4)      
    )       
      
  /*+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )      
  + SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )*/      
  + --RESPINOZA 20071207 - MODIFICACION DE LA FECHA DEL PERIODO      
  CAST (      
  SUBSTRING (       
  REPLACE (       
  convert(varchar(10),       
   dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
   , 3),      
  '/', ''), 3, 4 )       
  AS VARCHAR(4))      
  +      
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))      
  + cast ( REPLACE ([DLNE], ',', '') as char(45))      
  + SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(DLIC,0) AS CHAR(9)),'.','')))) + 1 ,9 )      
  AS DATA ,      
  ORDEN = IDENTITY(int, 1, 1)      
 INTO #TMP      
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))       
 WHERE [Codigo_proceso] = @Codigo_proceso      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
    ELSE @situacionTrabajador END      
 AND DLIC >=0
 SET IDENTITY_INSERT #TMP ON       
 INSERT INTO #TMP ( DATA , ORDEN )       
      
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP)      
       
 SET NOCOUNT OFF      
 --ORDER BY DLMO, [DLNE]      
 SELECT DATA FROM #TMP ORDER BY ORDEN      
  
END
ELSE IF  @TIPO_CUOTA = 2    
BEGIN   
	
	SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD      
     '2024'--'2272'      
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN      
     '2028'      
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4      
     '2024'      
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5      
     '2024'      
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO      
     '2024'--'2211'      
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL      
     '2180'--'2023'      
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6      
     '2024'      
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8      
     '2024'      
    ELSE      
     'BIF'       
    END      
    as varchar(4)      
    )       
      
  /*+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )      
  + SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )*/      
  + --RESPINOZA 20071207 - MODIFICACION DE LA FECHA DEL PERIODO      
  CAST (      
  SUBSTRING (       
  REPLACE (       
  convert(varchar(10),       
   dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
   , 3),      
  '/', ''), 3, 4 )       
  AS VARCHAR(4))      
  +      
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))      
  + cast ( REPLACE ([DLNE], ',', '') as char(45))      
  + SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(CR.DLIMC,0) AS CHAR(9)),'.','')))) + 1 ,9 )      
  AS DATA ,      
  ORDEN = IDENTITY(int, 1, 1)      
 INTO #TMP2      
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))       
  INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 WHERE CC.[Codigo_proceso] = @Codigo_proceso      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
  ELSE @situacionTrabajador END      
  AND DLIC >=0
 SET IDENTITY_INSERT #TMP2 ON       
 INSERT INTO #TMP2 ( DATA , ORDEN )       
      
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP2)      
       
 SET NOCOUNT OFF      
 --ORDER BY DLMO, [DLNE]      
 SELECT DATA FROM #TMP2 ORDER BY ORDEN      
  

END

ELSE IF  @TIPO_CUOTA = 3    
BEGIN  
   

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
    INTO #TEMPO
	FROM ClienteCuota CC
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)
	INNER JOIN DLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.DLNP = CR.DLACC
							AND(CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  + 
								CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END ) 
								< 
								CONVERT(INT,
								CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) + 
								CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  + 
								CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END
								)
								OR
								
								CONVERT(INT,
								CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END + 
								CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
								)
								=
								CONVERT(INT,
								 CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END + 
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END 
								)
						)
	)
	WHERE DLIC >=0
	GROUP BY CR.DLACC


	SELECT cast (CASE WHEN @NumeroDocumento = '20218911189' THEN -- DIRECCION REGIONAL DE SALUD      
     '2024'--'2272'      
    WHEN  @NumeroDocumento = '20221373449' THEN -- UTES 03 CHEPEN      
     '2028'      
    WHEN  @NumeroDocumento = '20223966684' THEN -- UTES 4      
     '2024'      
    WHEN  @NumeroDocumento = '20222308080' THEN -- UTES 5      
     '2024'      
    WHEN  @NumeroDocumento = '20228257479' THEN -- HOSPITAL BELEN DE TRUJILLO      
     '2024'--'2211'      
    WHEN  @NumeroDocumento = '20223149635' THEN -- HOSPITAL REGIONAL      
     '2180'--'2023'      
    WHEN  @NumeroDocumento = '20396835801' THEN -- UTES 6      
     '2024'      
    WHEN  @NumeroDocumento = '20354537096' THEN -- UTES 8      
     '2024'      
    ELSE      
     'BIF'       
    END      
    as varchar(4)      
    )       
      
  /*+ SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 )      
  + SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([DLAP] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [DLAP] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )*/      
  + --RESPINOZA 20071207 - MODIFICACION DE LA FECHA DEL PERIODO      
  CAST (      
  SUBSTRING (       
  REPLACE (       
  convert(varchar(10),       
   dateadd (m, -1,  cast ( CAST(DLAP AS VARCHAR(4)) + SUBSTRING('00' + LTRIM(RTRIM(DLMP)) , LEN(LTRIM(RTRIM(DLMP))) + 1, 2 ) + '01' as datetime) )      
   , 3),      
  '/', ''), 3, 4 )       
  AS VARCHAR(4))      
  +      
  + cast ( RTRIM(LTRIM(ISNULL(DLDNI, ''))) as char(8))      
  + cast ( REPLACE ([DLNE], ',', '') as char(45))      
  + SUBSTRING('         ' + LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA, 0) AS CHAR(9)),'.',''))) , LEN(LTRIM(RTRIM(REPLACE(CAST(ISNULL(T.CUOTA,0) AS CHAR(9)),'.','')))) + 1 ,9 )      
  AS DATA ,      
  ORDEN = IDENTITY(int, 1, 1)      
 INTO #TMP3      
 FROM [ClienteCuota] cc  left JOIN DLCRE CRE       
    ON ( rtrim(CC.DLCC) =  rtrim(CRE.DLCCC )      
         AND rtrim(CC.DLAN) = rtrim(CRE.DLAÑO)      
         AND rtrim(CC.DLAG) = rtrim(CRE.DLAGC)      
         AND rtrim(CC.DLCO) = rtrim(CRE.DLCOC )      
         AND rtrim(CRE.DLACC) = rtrim(CC.DLNP))       
		INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)
		--INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )                    
 WHERE CC.[Codigo_proceso] = @Codigo_proceso      
  and DLST =case when rtrim( @situacionTrabajador ) = '-' then DLST      
  ELSE @situacionTrabajador END      
  AND DLIC >=0

 SET IDENTITY_INSERT #TMP3 ON       
 INSERT INTO #TMP2 ( DATA , ORDEN )       
      
  select '' AS DATA , ORDEN = (SELECT COUNT ( 1 ) +1 FROM #TMP3)      
       
 SET NOCOUNT OFF      
 --ORDER BY DLMO, [DLNE]      
 SELECT DATA FROM #TMP2 ORDER BY ORDEN      
  

	DROP TABLE #TEMPO

END

END


GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUTES06_xlsText]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUTES06_xlsText]       
@Codigo_proceso as uniqueidentifier,          
@situacionTrabajador as char ( 1 )           
AS
begin
DECLARE  @MES_PROCESO INT
DECLARE  @ANIO_PROCESO INT 

SELECT @MES_PROCESO = MES_PERIODO , @ANIO_PROCESO = ANIO_PERIODO
FROM PROCESO WHERE codigo_proceso = @Codigo_proceso

select CC.DLCM , CC.DLST ,CC.DLPA + ' ' + CC.DLMA + ' ' + CC.DLMN 'Nombresclie' ,
CRE.DLDNI, (CCR.DLIMC - CCR.DLIPC) 'DIFERENCIA',
CASE WHEN CCR.DLVCA = (@ANIO_PROCESO - 2000) AND CCR.DLVCM = @MES_PROCESO THEN (CCR.DLIMC - CCR.DLIPC) ELSE 0 END 'CUOTA'
 INTO #TEMPO
FROM clientecuota CC 
LEFT OUTER JOIN DLCRE CRE ON (CC.DLNP = CRE.DLACC)
LEFT OUTER JOIN DLCCR CCR ON (CCR.DLACC = CC.DLNP)
WHERE CC.codigo_proceso = @Codigo_proceso
and CC.dlst = case when rtrim( @situacionTrabajador ) = '-' then DLST  ELSE @situacionTrabajador END   
--GROUP BY DLCM , dlst ,DLPA ,DLMA,DLMN,
--CRE.DLDNI,CCR.DLVCA,CCR.DLVCM 


SELECT ROW_NUMBER ( )     OVER (order by NOMBRESCLIE ) 'Nro',
DLCM,DLST,NOMBRESCLIE,ISNULL(DLDNI,'') 'NroDoc',
--case when (SUM(DIFERENCIA) - SUM(CUOTA)) < 0 then 0 else (SUM(DIFERENCIA) - SUM(CUOTA)) end ,
(ISNULL(SUM(DIFERENCIA),0) - ISNULL(SUM(CUOTA),0)) 'MORAITF',
ISNULL(SUM(CUOTA),0) 'CUOTA',ISNULL(SUM(DIFERENCIA),0) 'DESCUENTO_TOTAL'
FROM #TEMPO
GROUP BY DLCM,DLST,NOMBRESCLIE,DLDNI
order by nombresclie


drop table #TEMPO

end
GO
/****** Object:  StoredProcedure [dbo].[CronogramaFuturoUTESN06XLS001Text]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[CronogramaFuturoUTESN06XLS001Text]  
@Codigo_proceso as uniqueidentifier,      
@situacionTrabajador as char ( 1 )       
AS      
BEGIN      
            
DECLARE @CODIGO_CLIENTE_IBS  AS INT             
DECLARE @TIPO_CUOTA   AS INT      
DECLARE  @MES_PROCESO CHAR(2)  
DECLARE  @ANIO_PROCESO CHAR(2)       
            
SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC   
FROM  CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso            
GROUP BY DLCC           

SELECT @MES_PROCESO = RIGHT('00'+LTRIM(RTRIM(CAST(MES_PERIODO AS VARCHAR(2)))),2), @ANIO_PROCESO = CAST(SUBSTRING(ANIO_PERIODO,3,2) AS VARCHAR(2))	
FROM PROCESO WHERE codigo_proceso = @Codigo_proceso 
            
SELECT @TIPO_CUOTA = TIPO_CUOTA   
FROM  MANTENIMIENTO_CUOTA   
WHERE  DLECUN = @CODIGO_CLIENTE_IBS            
            
IF @TIPO_CUOTA = 1          
BEGIN
   
SELECT 
	Pagare = '''' + CAST(C.DLNP AS VARCHAR(12)),
	Codigo = CAST(C.DLCM AS VARCHAR(20)),
	DNI = (DLDNI),
	NombresYApellidos = C.DLPA + ' ' + C.DLMA + ' ' + C.DLMN,
	ValorDeCuota = CONVERT(DECIMAL(18,2),ISNULL(C.DLIC,0)),
	ImporteVencido = 0,
	TotalAPagar = cast ( ISNULL(C.DLIC,0) as varchar(14))
	FROM CLIENTECUOTA C
	LEFT JOIN DLCRE CRE ON (C.DLNP = CRE.DLACC)
	WHERE C.CODIGO_PROCESO = @CODIGO_PROCESO and C.dlst = case when rtrim( @situacionTrabajador ) = '-' then DLST  ELSE @situacionTrabajador END
	order by NombresYApellidos      
END  
ELSE IF  @TIPO_CUOTA = 2      
BEGIN     
  
SELECT 
	Pagare = '''' + CAST(C.DLNP AS VARCHAR(12)),
	Codigo = CAST(C.DLCM AS VARCHAR(20)),
	DNI = (DLDNI),
	NombresYApellidos = C.DLPA + ' ' + C.DLMA + ' ' + C.DLMN,
    ValorDeCuota = ISNULL(CR.DLIMC, 0),
    ImporteVencido = 0,
	TotalAPagar = cast ( ISNULL(CR.DLIMC, 0) as varchar(14))   
 FROM CLIENTECUOTA C   
 INNER JOIN DLCRE CRE ON ( DLNP  = DLACC )      
     INNER JOIN dlcnt cnt  ON ( C.dlnp  = cnt.DLCACC)      
     INNER JOIN DLCCR CR ON (CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP )                    
  WHERE  C.CODIGO_PROCESO = @codigo_proceso AND      
    DLST   = CASE WHEN RTRIM(@situacionTrabajador ) = '-' THEN DLST      
         ELSE @situacionTrabajador       
   END AND   
  DLIC >=0
  order by NombresYApellidos    
   
END  
  
ELSE IF  @TIPO_CUOTA = 3      
BEGIN    
     
 SELECT  CR.DLACC     'PAGARE',   
  SUM(CR.DLIMC - CR.DLIPC + CR.DLITF)  'CUOTA'  
 INTO  #TEMPO  
 FROM  ClienteCuota C  
 INNER JOIN PROCESO  P  ON (C.CODIGO_PROCESO = P.CODIGO_PROCESO)  
 INNER JOIN DLCCR  CR  ON (C.CODIGO_PROCESO = @Codigo_proceso   
       AND C.DLNP = CR.DLACC  
       AND(CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <   
        CONVERT(INT,  
        CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +   
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +   
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END  
        )  
        OR  
          
        CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END  
        )  
        =  
        CONVERT(INT,  
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +   
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END   
        )  
      )  
 )  
 WHERE DLIC >=0  
 GROUP BY CR.DLACC  
  
SELECT 
	Pagare = '''' + CAST(C.DLNP AS VARCHAR(12)),
	Codigo = CAST(C.DLCM AS VARCHAR(20)),
	DNI = (CRE.DLDNI),
	NombresYApellidos = C.DLPA + ' ' + C.DLMA + ' ' + C.DLMN,
	ValorDeCuota = ISNULL(DC.DLIMC, 0),
	ImporteVencido = ISNULL((SELECT SUM(DLPPPM+DLPIPM+DLPPIA+DLPCOM+DLPDED)-SUM(DLPPPD+DLPIPD+DLPPIP+DLPCOX+DLPDEX) FROM DLPMT WHERE DLPACC = C.DLNP GROUP BY DLPACC),0),
	TotalAPagar = ISNULL(DC.DLIMC, 0)+ISNULL((SELECT SUM(DLPPPM+DLPIPM+DLPPIA+DLPCOM+DLPDED)-SUM(DLPPPD+DLPIPD+DLPPIP+DLPCOX+DLPDEX) FROM DLPMT WHERE DLPACC = C.DLNP GROUP BY DLPACC),0)      
 FROM CLIENTECUOTA C      
 INNER JOIN dlcnt cnt  ON ( C.dlnp  = cnt.DLCACC)      
 INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)  
 INNER JOIN DLCRE CRE ON (CRE.DLACC = C.DLNP)
 LEFT JOIN DLCCR DC ON (DC.DLACC = CRE.DLACC) AND (DC.DLVCA = @ANIO_PROCESO) AND (DC.DLVCM = @MES_PROCESO)
 WHERE  C.CODIGO_PROCESO = @codigo_proceso AND      
  DLST = CASE WHEN RTRIM(@situacionTrabajador ) = '-' THEN DLST      
       ELSE @situacionTrabajador       
   END AND   
  DLIC >=0 
  order by NombresYApellidos 
 DROP TABLE #TEMPO  
  
END  
END  

GO
/****** Object:  StoredProcedure [dbo].[DeleteCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[DeleteCliente]
@Codigo_Cliente	Numeric (9,0),
@Usuario 	Varchar ( 30 ) 
As
Begin
	/*
	 * Eliminar el registro de un cliente
	 */
	SET NOCOUNT ON
	DELETE FROM [Cliente]
	WHERE [Codigo_Cliente]=@Codigo_Cliente
	EXECUTE AddLogInfo '', @Codigo_Cliente, '', '', 'DeleteCliente', @usuario
	SET NOCOUNT OFF
end


GO
/****** Object:  StoredProcedure [dbo].[DeleteInformacionArchivoTexto]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[DeleteInformacionArchivoTexto]  
@Codigo_proceso AS uniqueidentifier  
AS  
Begin  
 Delete TemporalArchivoTexto where codigo_proceso = @Codigo_proceso  
End  

GO
/****** Object:  StoredProcedure [dbo].[DeleteRegistroError]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[DeleteRegistroError]
@codigo AS UNIQUEIDENTIFIER,
@usuario VARCHAR(30)
AS
BEGIN
SET NOCOUNT ON
	
	EXECUTE AddLogInfo '', @codigo, '', '', 'DeleteRegistroError', @usuario
--Elimina un registro con error de la tabla de carga
	DELETE FROM [ErrorArchivoDescuentos]
	WHERE [codigo] = @codigo
SET NOCOUNT OFF
END


GO
/****** Object:  StoredProcedure [dbo].[DelInfoProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[DelInfoProceso]
@Codigo_proceso AS UNIQUEIDENTIFIER,
@usuario		varchar(30) = ''
AS
BEGIN
	SET NOCOUNT ON
	IF EXISTS ( SELECT 1 FROM PROCESO P 
				WHERE Codigo_proceso =@Codigo_proceso) 
	BEGIN
		UPDATE PROCESO 
			SET Estado = 'P0',
			Fecha_CargaAS400 = GETDATE()
		WHERE Codigo_proceso =@Codigo_proceso
		
		DELETE FROM CLIENTECUOTA WHERE Codigo_proceso =@Codigo_proceso
		-- Eliminamos la informacion de la generacion del historico
		DELETE FROM HistoricoDLCCR WHERE Codigo_proceso =@Codigo_proceso
		EXECUTE AddLogInfo '', @Codigo_proceso, '', '', 'DelInfoProceso', @usuario
	END
	SET NOCOUNT OFF
END


GO
/****** Object:  StoredProcedure [dbo].[DelProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[DelProceso]  
@Codigo_proceso AS UNIQUEIDENTIFIER,  
@usuario  varchar(30) = ''  
AS  
BEGIN  
  
--RESPINOZA 20070528 - Adcicionamos informacion del proceso al log   
declare @cliente numeric (9,0 ),  
@Anio_periodo char(4),  
@Mes_Periodo  char(2)   
  
 SET NOCOUNT ON  
 IF EXISTS ( SELECT 1 FROM PROCESO P WHERE rtrim(p.Estado) not IN ('A1' , 'A2' ,  'A3' ) AND Codigo_proceso =@Codigo_proceso)   
 BEGIN  
  SELECT @cliente = codigo_cliente, @Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo     
  FROM proceso WHERE Codigo_proceso =@Codigo_proceso  
   
  DELETE FROM [ErrorArchivoDescuentos] WHERE Codigo_proceso = @Codigo_proceso  
  DELETE FROM CLIENTECUOTA WHERE Codigo_proceso =@Codigo_proceso  
  delete from clientenomina WHERE Codigo_proceso = @Codigo_proceso
  DELETE FROM PROCESO WHERE Codigo_proceso = @Codigo_proceso  
  --DELETE from historicodlccr WHERE Codigo_proceso = @Codigo_proceso  
  -- DEJAMOS LA INFORMACION HISTORICA DE LA CARGA PARA REVISION POSTERIOR  
  EXECUTE AddLogInfo '', @Codigo_proceso, '', '', 'DelProceso', @usuario, @cliente, @Anio_periodo, @Mes_Periodo   
 END  
 SET NOCOUNT OFF  
END  
GO
/****** Object:  StoredProcedure [dbo].[DETALLE_PAGARE]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

  
CREATE OR ALTER PROCEDURE [dbo].[DETALLE_PAGARE](  
@MES AS VARCHAR(2),  
@ANIO AS VARCHAR(2),  
@PAGARE AS VARCHAR(15))  
  
AS  
SET NOCOUNT ON  
  
  
SELECT DLCCY 'MONEDA',  
DLVCA 'ANIO',  
DLVCM 'MES',  
DLIMC 'MONTO_MES',  
DLIPC 'MONTO_PAGADO',  
DLITF 'ITF'  
 FROM DLCCR  
WHERE DLACC = @PAGARE  
AND  CONVERT(INT,        
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),DLVCA)))) = 1  THEN '0'+ CONVERT(VARCHAR(2),DLVCA) ELSE CONVERT(VARCHAR(2),DLVCA) END      
    +      
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),DLVCM)))) = 1  THEN '0' + CONVERT(VARCHAR(2),DLVCM) ELSE CONVERT(VARCHAR(2),DLVCM) END      
   )      
  <=       
  CONVERT(INT,      
    CASE WHEN LEN(@ANIO) = 1 THEN '0' + @ANIO ELSE @ANIO END      
    +      
    CASE WHEN LEN(@MES) = 1 THEN '0' + @MES ELSE @MES END      
    )      
GO
/****** Object:  StoredProcedure [dbo].[EfectividadRecaudacion]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[EfectividadRecaudacion]      

@codigo_ibs varchar(9),      
@anio varchar(10),      
@mes varchar(2)      
as      
begin      
      
 if(ltrim(rtrim(@codigo_ibs))<>'')       
 begin      
   select       
   t.codigo_clienteIBS, t.Nombre_empresa, substring(t.Mes,1,4) + '-' + substring(t.Mes,5, len(t.Mes)) as AnioMes        
  ,ISNULL(t.nro_clientes_enviado,0) AS nro_clientes_enviado, ISNULL(t.nro_monto_enviado_soles,0) AS nro_monto_enviado_soles,  ISNULL(t.nro_monto_enviado_dolares,0) AS nro_monto_enviado_dolares      
  ,ISNULL(t.nro_clientes_retornado,0) AS nro_clientes_retornado, ISNULL(t.nro_monto_retornado_soles,0) AS nro_monto_retornado_soles,  ISNULL(t.nro_monto_retornado_dolares,0) AS nro_monto_retornado_dolares      
  ,case when t.nro_clientes_enviado<> 0 then ISNULL(CONVERT(NUMERIC(10,2),(cast(t.nro_clientes_retornado as decimal)/cast(t.nro_clientes_enviado as decimal))*100) ,0)      
   else 0 end as efectividad_nro_clientes      
  ,case when t.nro_monto_enviado_soles<> 0 then ISNULL(CONVERT(NUMERIC(10,2),(cast(t.nro_monto_retornado_soles as decimal)/cast(t.nro_monto_enviado_soles as decimal))*100),0)      
   else 0 end as efectividad_monto_soles      
  ,case when t.nro_monto_enviado_dolares<> 0 then ISNULL(CONVERT(NUMERIC(10,2),(cast(t.nro_monto_retornado_dolares as decimal)/cast(t.nro_monto_enviado_dolares as decimal))*100),0)      
   else 0 end as efectividad_monto_dolares      
   from       
  (SELECT       
    cle.codigo_clienteIBS, cle.Nombre_empresa,      
      (Select Anio_periodo + (case when len(Mes_periodo)=1 then '0'+Mes_periodo else Mes_periodo end)      
    from proceso where codigo_proceso = cle.codigo_proceso) as Mes,      
      cle.Cantidad_registros as nro_clientes_enviado ,cle.Monto_deuda_soles as nro_monto_enviado_soles,      
      isnull(cle.Monto_deuda_dolares,0.00) as nro_monto_enviado_dolares,      
      clr.Cantidad_registros_OK as nro_clientes_retornado ,clr.Monto_deuda_soles as nro_monto_retornado_soles,       
      isnull(clr.Monto_deuda_dolares,0.00) as nro_monto_retornado_dolares , cle.Tipo_nomina as tne, clr.Tipo_nomina as tnr      
      --clr.Tipo_formato as tfr, cle.Tipo_formato as tfe      
  FROM [dbo].[ClienteNomina] cle left join      
   [dbo].[ClienteNomina] clr on      
  cle.codigo_clienteIBS = clr.codigo_clienteIBS      
  and cle.codigo_proceso = clr.codigo_proceso      
  and cle.Tipo_nomina='E' and clr.Tipo_nomina='R'      
  and cle.Nomina_id = (select Max(Nomina_id) from clienteNomina where codigo_proceso = cle.codigo_proceso and Tipo_nomina='E')      
  and clr.Nomina_id = (select Max(Nomina_id) from clienteNomina where codigo_proceso = clr.codigo_proceso and Tipo_nomina='R' )      
  ) t      
  where       
  t.Mes is not null      
  and convert(int,t.Mes) >= convert(int,(cast(year(DATEADD(month, -6, getdate())) as varchar) +  case when len(month(DATEADD(month, -6, getdate())))=1 then '0'+ cast(month(DATEADD(month, -6, getdate())) as varchar) else cast(month(DATEADD(month, -6, getdate())) as varchar) end))      
  and t.tne='E' and (t.tnr='R' or t.tnr is null) and t.codigo_clienteIBS=@CODIGO_IBS       
  --and t.tfr='N' and t.tfe='N'      
  order by t.Mes asc      
 end      
 else      
 begin      
        
  SET LANGUAGE Spanish      
   select  --t.nom1, t.nom2 , t.codigo_proceso,      
   t.codigo_clienteIBS, t.Nombre_empresa,  datename(month,convert(datetime,rtrim(t.mes)+'01')) + ' ' + substring(t.Mes,1,4)   as AnioMes       
  ,ISNULL(t.nro_clientes_enviado,0) AS nro_clientes_enviado, ISNULL(t.nro_monto_enviado_soles,0) AS nro_monto_enviado_soles,  ISNULL(t.nro_monto_enviado_dolares,0) AS nro_monto_enviado_dolares      
  ,ISNULL(t.nro_clientes_retornado,0) AS nro_clientes_retornado, ISNULL(t.nro_monto_retornado_soles,0) AS nro_monto_retornado_soles,  ISNULL(t.nro_monto_retornado_dolares,0) AS nro_monto_retornado_dolares      
  ,case when t.nro_clientes_enviado<> 0 then ISNULL(CONVERT(NUMERIC(10,2),(cast(t.nro_clientes_retornado as decimal)/cast(t.nro_clientes_enviado as decimal))*100) ,0)      
   else 0 end as efectividad_nro_clientes      
  ,case when t.nro_monto_enviado_soles<> 0 then ISNULL(CONVERT(NUMERIC(10,2),(cast(t.nro_monto_retornado_soles as decimal)/cast(t.nro_monto_enviado_soles as decimal))*100),0)      
   else 0 end as efectividad_monto_soles      
  ,case when t.nro_monto_enviado_dolares<> 0 then ISNULL(CONVERT(NUMERIC(10,2),(cast(t.nro_monto_retornado_dolares as decimal)/cast(t.nro_monto_enviado_dolares as decimal))*100),0)      
   else 0 end as efectividad_monto_dolares      
   from       
  (SELECT       
    cle.codigo_clienteIBS, cle.Nombre_empresa,      
      (Select Anio_periodo + (case when len(Mes_periodo)=1 then '0'+Mes_periodo else Mes_periodo end)      
    from proceso where codigo_proceso = cle.codigo_proceso) as Mes,      
      cle.Cantidad_registros as nro_clientes_enviado ,cle.Monto_deuda_soles as nro_monto_enviado_soles,      
      isnull(cle.Monto_deuda_dolares,0.00) as nro_monto_enviado_dolares,      
      clr.Cantidad_registros_OK as nro_clientes_retornado ,clr.Monto_deuda_soles as nro_monto_retornado_soles,       
      isnull(clr.Monto_deuda_dolares,0.00) as nro_monto_retornado_dolares , cle.Tipo_nomina as tne, clr.Tipo_nomina as tnr  
       --clr.Tipo_formato as tfr, cle.Tipo_formato as tfe      
  FROM [dbo].[ClienteNomina] cle left join      
   [dbo].[ClienteNomina] clr on      
  cle.codigo_clienteIBS = clr.codigo_clienteIBS      
  and cle.codigo_proceso = clr.codigo_proceso      
  and cle.Tipo_nomina='E' and clr.Tipo_nomina='R'      
  and cle.Nomina_id = (select Max(Nomina_id) from clienteNomina where codigo_proceso = cle.codigo_proceso and Tipo_nomina='E')      
  and clr.Nomina_id = (select Max(Nomina_id) from clienteNomina where codigo_proceso = clr.codigo_proceso and Tipo_nomina='R' )      
  ) t      
  where       
  t.Mes is not null      
  and substring(t.Mes,1,4) = @anio and substring(t.Mes,5, len(t.Mes)) = @mes and t.tne='E' and (t.tnr='R' or t.tnr is null)      
  --and t.tfr='N' and t.tfe='N'      
  order by t.Mes asc      
       
 end      
end 

GO
/****** Object:  StoredProcedure [dbo].[EliminaCoordinadorCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[EliminaCoordinadorCliente]  
 @codigo_cliente numeric(9, 0),     
 @id_coordinador int,  
 @usuario_modificacion varchar(30),  
 @fecha_modificacion datetime  
/*    
Autor: Christian Rivera    
Fecha: 10-06-2014    
Motivo: EA 273-Mejoras convenios    
Descripcion: Elimina los datos de los coordinadores por empresa    
*/    
as    
  
begin  
  
update coordinador_cliente  
set estado_coordinador = 0, --elimina logicamente al coordinador  
 usuario_modificacion = @usuario_modificacion,  
 fecha_modificacion = @fecha_modificacion  
where codigo_cliente = @codigo_cliente and  
  id_coordinador = @id_coordinador  
  
end  
GO
/****** Object:  StoredProcedure [dbo].[EliminarRegistroErrorEnvio]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[EliminarRegistroErrorEnvio]
@DLNP as decimal ( 12),
@usuario AS VARCHAR(30) 
AS
BEGIN
	SET NOCOUNT ON
		EXECUTE AddLogInfo '', @DLNP, '', '', 'EliminarRegistroErrorEnvio', @usuario
	
		DELETE FROM [ClienteCuota] WHERE DLNP = @DLNP
	SET NOCOUNT OFF
END


GO
/****** Object:  StoredProcedure [dbo].[EliminarTrabajadorClienteCuota]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[EliminarTrabajadorClienteCuota]  
  
	@codigo_proceso as uniqueidentifier,        
	@codigo_clienteIBS decimal(9,0),    
	@Pagare decimal(12,0)  
  
AS  
  
DECLARE @DLMO VARCHAR(3),
		@DLAP INT,
		@DLMP INT

DELETE FROM CLIENTECUOTA   
WHERE  CODIGO_PROCESO = @codigo_proceso   
AND DLCC = @codigo_clienteIBS   
AND DLNP = @Pagare  
  
SELECT 
	@DLMO = DLMO,
	@DLAP = DLAP,
	@DLMP = DLMP		
FROM 
	CLIENTECUOTA 
WHERE 
	CODIGO_PROCESO = @codigo_proceso     
	AND DLNP = @Pagare    

DELETE FROM HistoricoDLCCR   
WHERE CODIGO_PROCESO = @codigo_proceso     
AND DLACC = @Pagare    
AND DLVCA = RIGHT(@DLAP,2)
AND DLVCM = @DLMP

  

GO
/****** Object:  StoredProcedure [dbo].[EnviaEspacioTrabajo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[EnviaEspacioTrabajo]          
      
 @Codigo_proceso uniqueidentifier,          
 @usuario VARCHAR ( 30 )           
      
AS          
    
BEGIN          
set nocount on          
 -- Envia la informacion obtenida desde AS/400 a la tabla de trabajo          
 --- establecemos una transaccion para bloquear los ingresos en la tabla          
        
declare @dlap int        
declare @dlmp int        
        
select @dlap = anio_periodo ,@dlmp = mes_periodo        
from proceso        
where codigo_proceso = @Codigo_proceso        
        
 SET TRANSACTION ISOLATION LEVEL READ COMMITTED           
 BEGIN TRANSACTION          
 UPDATE Proceso          
 SET Estado = 'P1'          
 WHERE Codigo_proceso = @Codigo_proceso          
    
   
    
 INSERT INTO [ClienteCuota]([DLCC],  [DLAN],  [DLAG],  [DLCO],  [DLMO],  [DLNP],  [DLCM],  [DLNE], DLPA, DLMA, DLMN,  [DLCR],  [DLAP],  [DLMP],  [DLIC],            
             [DLST],  [DLFP], DLER, DLESD, DLFLI, NUMCUOTAS, [Codigo_proceso], Estado, FechaDesembolso, MontoOriginal,     
    CuotaInformada, FechaCargo, CuotaPactadas, CuotaPagadas, CuotaPendientes, NroTipoCredito)          
    
   --SELECT  [DLECC], [DLEAN], [DLEAG], [DLECO], [DLEMO], [DLENP], rtrim(ltrim([DLECM])), [DLENE], DLEPA, DLEMA, DLEMN, [DLECR], [DLEAP], [DLEMP],           
   SELECT  [DLECC], [DLEAN], [DLEAG], [DLECO], [DLEMO], [DLENP], rtrim(ltrim([DLECM])), [DLENE], DLEPA, DLEMA, DLEMN, [DLECR], @dlap, @dlmp,           
           DLEIC = cast ( /*case when len ( DLEIC ) > 2 AND ISNUMERIC ( DLEIC ) = 1 then          
           substring(DLEIC, 1, len(DLEIC)  - 2 ) + '.' +  substring(DLEIC,  len(DLEIC)  - 1, len(DLEIC))          
           when len ( DLEIC ) <= 2 AND ISNUMERIC ( DLEIC ) = 1 then          
           DLEIC          
           when ISNUMERIC ( DLEIC ) = 0 then          
           '0'          
           end*/          
           case when ISNUMERIC ( DLEIC ) = 0 then '0' else DLEIC end as decimal(14,2)) ,           
          [DLEST], [DLEFP], '', DLESD, DLFLI, NUMCUOTAS,  @Codigo_proceso, 'C0'  , FECDESEMBOLSO, MONTOORIGINAL, CUOTASINFORMADA, FECCARGO, CUOTASPACTADAS ,CUOTASPAGADAS, CUOTASPENDIENTES, NROTIPOCREDITO       
   FROM   [DLENV]            
   WHERE  Codigo_proceso = @Codigo_proceso          
      
   
    
  --- Se inserta la informacion de los registros desde donde se genero la tabla DLENV          
  INSERT INTO [HistoricoDLCCR]([Codigo_proceso], [DLACC], [DLCCY], [DLVCA], [DLVCM], [DLVCD], [DLNCT], [DLIMC], [DLIPC], DLITF, [DLSTS])          
  SELECT Codigo_proceso, [DLACC], [DLCCY], [DLVCA], [DLVCM], [DLVCD], [DLNCT], [DLIMC], [DLIPC], DLITF, [DLSTS]           
  FROM [DLCCR]          
  WHERE Codigo_proceso = @Codigo_proceso          
  
 IF @@ERROR = 0            
 BEGIN          
  COMMIT TRAN          
  UPDATE Proceso          
  SET Estado = 'P2'          
  WHERE  Codigo_proceso = @Codigo_proceso          
 END          
 ELSE          
 BEGIN          
  ROLLBACK TRAN          
  UPDATE Proceso          
  SET Estado = 'EP'          
  WHERE  Codigo_proceso = @Codigo_proceso          
 END          
 DELETE FROM [DLENV]          
 WHERE Codigo_proceso = @Codigo_proceso          
 DELETE FROM [DLCCR]          
 WHERE Codigo_proceso = @Codigo_proceso          
 EXECUTE AddLogInfo '', @Codigo_proceso, '', '', 'EnviaEspacioTrabajo', @usuario          
set nocount off          
END          

GO
/****** Object:  StoredProcedure [dbo].[EnviarMensajeGeneracionArchivo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[EnviarMensajeGeneracionArchivo]
@Codigo_proceso AS UNIQUEIDENTIFIER
AS
BEGIN
--Se envia el mensaje de generacion de nuevo archivo si el flag esta en el valor P2
	DECLARE @B AS BIT
	SET @B  = 0 
	IF EXISTS (SELECT 1 FROM PROCESO Where Codigo_Proceso = @Codigo_Proceso and TmpStatusGen = 'P2' )
	BEGIN
		SET @B  = 1 
	END
SELECT 	@B  AS BIT
END


GO
/****** Object:  StoredProcedure [dbo].[EnvioDescuentos_AS400]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/                                
/* Fecha Modif : BANBIF(AHSP) - 20130126    */                                
/* Observacion : Adicionar el estado CJ en el envío a AS400  */                                
/************************************************************************/                                
CREATE OR ALTER PROCEDURE [dbo].[EnvioDescuentos_AS400]                                    
@codigo_proceso as uniqueidentifier                                    
/* Modificado por: Christian Rivera                            
 Fecha: 17-07-2014                            
 Motivo: EA273- Mejoras de Convenios                            
 Descripcion: Se añaden nuevos campos para el control del proceso de pagos (archivo IBS DLREC)                             
*/                            
AS                                    
BEGIN                                    
SET NOCOUNT ON                                     
 DECLARE @Mes_Periodo AS CHAR(2 )                                     
 DECLARE @tipo as CHAR(1)                   
 declare @MaxFecha datetime        
                  
 SELECT  @Mes_Periodo  = Mes_Periodo                                     
 From proceso                                     
 Where  [Codigo_proceso] = @codigo_proceso                                    
SET NOCOUNT OFF                                    
                  
select @tipo = tipo from flagcargapagos where flag = 1                  
        
--obtenemos la fecha de los registros recibidos en el ultimo proceso        
select @MaxFecha = max(Fecha)         
from ArchivoDescuentosHist a        
where codigo_proceso = @codigo_proceso        
        
---procedimiento de envio de informacion a AS/400                                    
/*                  
 Trunca tabla                  
*/                  
--delete from tmp_envioDescuentos_as400                  
                  
/*                  
 inserta datos                  
*/                  
                  
--insert into tmp_envioDescuentos_as400            

 SELECT [DLCC], [DLAN], [DLAG], [DLCO], [DLMO],       
 --[DLNP] = case when Estado = 'CL' THEN 0 ELSE [DLNP] END,       
 [DLNP] ,       
 [DLCM], [DLNE],  [DLCR],       
 [DLAP], @Mes_Periodo AS [DLMP],--[DLMP],       
 [DLIC] = cast ( rtrim(ltrim (       
  REPLACE (cast ( isnull([DLIC], 0) AS NVARCHAR(16)), '.', '')      
 ))      
 as numeric ),       
 [DLST],       
 [DLID] =  cast (REPLACE (cast ( isnull([DLID], 0) AS NVARCHAR(16)), '.', '') as numeric ) ,       
 [DLFP]  = convert (varchar(8) ,getdate(), 112),       
 [DLER] = case when Estado = 'CL' THEN 'N' ELSE 'A' END ,    
 [Estado],    
  '' as DLESP,                            
  --(select tipo from flagcargapagos where flag = 1) as DLENL,--B: Batch, L: Linea                            
  @tipo as DLENL,                  
  --'' as DLMOT,                                
convert(char(2),(case Estado           
     when 'CA' then '12' --Número de Pagaré o Monto de Descuento vacío o nulo          
     when 'CB' then '01' --Número de pagaré no encontrado          
     when 'CF' then '13' --Año/mes no corresponden a periodo          
     when 'CH' then '14' --Moneda no coincide          
     when 'CR' then '15' --Número de pagaré repetido          
     else '' end)) as DLMOT,                            
   0 as DLIDV,                            
  '' as DLEDV,                            
  'BATCH' as DLUSU, --usuario proceso                         
  'CargaPagos' as DLPGM, --programa proceso                            
  replace(convert(char(10),getdate(),103),'/','') as DLFCP, --fecha proceso                            
  replace(convert(char(8),getdate(),108),':','') as DLHRP, --hora proceso                            
  '' as DLUSD,              
  '' as DLPGD,                            
  '' as DLFCD,                            
  '' as DLHRD,              
  isnull(DLDNI,'') as DLDOC,              
   0 as DLCCT,              
  --'' as DLDMO                         
(case Estado           
 when 'CA' then 'Nro. Pagaré o Monto vacío/nulo'          
 when 'CB' then 'NRO. PAGARE NO EXISTE'          
 when 'CF' then 'Año/mes no corresp. a periodo'          
 when 'CH' then 'Moneda no coincide'          
 when 'CR' then 'Número de pagaré repetido'          
 else '' end) as DLDMO          
 FROM [ClienteCuota] LEFT OUTER JOIN DLCRE              
      ON DLNP = DLACC                                    
 WHERE [Codigo_proceso] = @codigo_proceso        
 AND [Estado] in ('C0', 'CC', 'CD', 'CL','CJ','EE') --= 'C0' OR ESTADO = 'CB'         
 AND Pago  = 1       
 AND  [DLID] > 0      
 AND ESTADO <> 'E4'      
                  
END           
        
        
        
        
        
        
        
        
GO
/****** Object:  StoredProcedure [dbo].[ErrorEnvioInformacionAS400]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ErrorEnvioInformacionAS400]
@Codigo_proceso AS UNIQUEIDENTIFIER,
@usuario VARCHAR ( 30 ) 
as
BEGIN
SET NOCOUNT ON
	UPDATE Proceso	
	set [Estado]  = 'EA'
	where [Codigo_proceso] = @Codigo_proceso 
	EXECUTE AddLogInfo '', @Codigo_proceso, '', 'EA', 'ErrorEnvioInformacionAS400', @usuario
SET NOCOUNT OFF
END


GO
/****** Object:  StoredProcedure [dbo].[EsperaFinalAnulacionProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[EsperaFinalAnulacionProceso]
@Codigo_proceso as uniqueidentifier
AS
BEGIN
	set nocount on 
		DECLARE @B AS BIT
		SET @B = 0
		IF EXISTS (SELECT 1 FROM PROCESO 
				WHERE Codigo_proceso = @Codigo_proceso 
					and estado ='G1' ) 
		BEGIN
			SET @B = 1
		END
	set nocount on 
	Select @B as bool 
END


GO
/****** Object:  StoredProcedure [dbo].[EsperaFinalEnvioDescuentosAS400]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



 CREATE OR ALTER PROCEDURE [dbo].[EsperaFinalEnvioDescuentosAS400]  
@Codigo_proceso AS UNIQUEIDENTIFIER  
as  
BEGIN  
--Obtiene un estado que indica si se ha llegado al final del envio de la informacion hacia AS/400  
SET NOCOUNT ON  
 DECLARE @b as bit  
 set @b = 0   
 if exists ( select 1 from proceso where [Codigo_proceso] = @Codigo_proceso and [Estado] in ('A2','EA','A3'))  
 BEGIN  
  set @b = 1  
 END   
SET NOCOUNT OFF  
SELECT @b AS BOOL  
END  
  

GO
/****** Object:  StoredProcedure [dbo].[EsperaFinalProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[EsperaFinalProceso]
@Codigo_proceso uniqueidentifier
AS
BEGIN
	SET NOCOUNT ON 
		DECLARE @B AS BIT
		SET @B  = 0 
		IF EXISTS ( SELECT 1 FROM PROCESO WHERE Codigo_proceso = @Codigo_proceso AND ESTADO IN ('P2', 'EP')) 
		BEGIN
			SET @B  = 1 
		END
	SET NOCOUNT OFF
	SELECT 	@B  AS BIT
END


GO
/****** Object:  StoredProcedure [dbo].[EstableceErrorProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[EstableceErrorProceso]
@Codigo_proceso uniqueidentifier,
@usuario		varchar(30) = '' 
AS
BEGIN
	SET NOCOUNT ON
		DELETE FROM DLENV
		WHERE  Codigo_proceso = @Codigo_proceso
		UPDATE Proceso
		SET Estado = 'EP'
		WHERE  Codigo_proceso = @Codigo_proceso
	
		EXECUTE AddLogInfo '', @Codigo_proceso, '', 'EP', 'EstableceErrorProceso', @usuario
	SET NOCOUNT ON
END


GO
/****** Object:  StoredProcedure [dbo].[EstablecePagoNoPago]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[EstablecePagoNoPago]
@Codigo_proceso AS nvarchar ( 36 ),
@DLNP		as decimal ( 12, 0 )--,
--@bitpago	as bit	
AS
BEGIN
-- Actualiza el registro para realizar o no el pago del convenio
-- Si el flag se establece a 0, el registro no será enviado
	IF EXISTS (SELECT NULL FROM PROCESO 
			WHERE Codigo_proceso = @Codigo_proceso 
				and Estado not in ('A1', 'A2', 'EA') ) 
	BEGIN
		
		UPDATE ClienteCuota
		SET Pago =~Pago
		where DLNP = @DLNP
			and Codigo_proceso = @Codigo_proceso 
	END
END


GO
/****** Object:  StoredProcedure [dbo].[EventoSistemaInsert]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*10 Libres*/

CREATE OR ALTER PROCEDURE [dbo].[EventoSistemaInsert]
(
	@vHilo				VARCHAR(255),	
	@vNivel				VARCHAR(50),
	@vAccion			VARCHAR(255),
	@vMensaje			VARCHAR(1000),
	@vExcepcion			VARCHAR(4000),
	@vUsuario			VARCHAR(50)
)
AS
BEGIN
	INSERT INTO [dbo].[EventoSistema]
	(
		Fecha,
		Hilo,
		Nivel,
		Accion,
		Mensaje,
		Excepcion,
		Usuario
	)		
	VALUES
	(
		GETDATE(),
		@vHilo,
		@vNivel,
		@vAccion,
		@vMensaje,
		@vExcepcion,
		@vUsuario
	)
END

GO
/****** Object:  StoredProcedure [dbo].[ExisteCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ExisteCliente]
@TipoDocumento varchar(2),
@NumeroDocumento varchar(12)
as
begin
--Obtenemos informacion acerca del codigo del cliente dentro de nuestra base de
--datos
set nocount on 
	declare @Codigo_Cliente as numeric ( 9, 0)
		select @Codigo_Cliente = [Codigo_Cliente] FROM [Cliente]
		where  [TipoDocumento]=@TipoDocumento
			and  [NumeroDocumento] = @NumeroDocumento
	
	set @Codigo_Cliente =  isnull ( @Codigo_Cliente, -1)
set nocount off	
	select @Codigo_Cliente as Codigo_Cliente
end


GO
/****** Object:  StoredProcedure [dbo].[ExistsProcess]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ExistsProcess]
@Anio_periodo  CHAR(4),
@Mes_Periodo	CHAR(2), 
@Codigo_Cliente NUMERIC ( 9 , 0 ) 
as
BEGIN
DECLARE @B AS INT
SET @B = 0 
	IF EXISTS ( SELECT 1 
			FROM [BIFConveniosDesa].[dbo].[Proceso]
			WHERE [Anio_periodo] = @Anio_periodo 
				AND [Mes_Periodo] = @Mes_Periodo
				AND [Codigo_Cliente] =@Codigo_Cliente ) 
	BEGIN
		SET @B = 1
	END
SELECT @B  AS BOOL
END


GO
/****** Object:  StoredProcedure [dbo].[ExistsUser]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ExistsUser]
@UserId as varchar(100)
AS
BEGIN
SET NOCOUNT ON 
	DECLARE @user as nvarchar(100)
	DECLARE @B AS BIT
	SET @B  = 0 
	if (select CHARINDEX (  '\', @UserId))>0
	begin
		set @user = SUBSTRING ( @UserId, CHARINDEX (  '\', @UserId) + 1, LEN(@UserId))	
	end
	else
	begin
		set @user = @UserId
	end
	if exists ( SELECT 1 FROM Usuarios Where UserId = @user ) 
	BEGIN
		SET @B  = 1		
	END
SET NOCOUNT OFF
SELECT @B  AS BOOL
END	


GO
/****** Object:  StoredProcedure [dbo].[ExportRegistrosResultadoProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ExportRegistrosResultadoProceso] -- EXEC      ExportRegistrosResultadoProcesoByFiltros '95916eaf-3231-4ab5-921c-67d0823a3598', '', '', 0.0, '', ''                         
@codigo_proceso as uniqueidentifier,                     
@Documento as char(8),                              
@DLNE as varchar(80),                         
@DLNP as decimal(12,0),                          
@EstadoTrabajador char(2),                         
@ZonaUse VARCHAR(2) 

AS

BEGIN
EXEC [dbo].[ExportRegistrosResultadoProcesoByFiltros] @codigo_proceso,@Documento, @DLNE, @DLNP, @EstadoTrabajador, @ZonaUse

END  


GO
/****** Object:  StoredProcedure [dbo].[ExportRegistrosResultadoProcesoByFiltros]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- [dbo].[ExportRegistrosResultadoProcesoByFiltros] -- INICIO

CREATE OR ALTER PROCEDURE [dbo].[ExportRegistrosResultadoProcesoByFiltros] -- EXEC      ExportRegistrosResultadoProceso '95916eaf-3231-4ab5-921c-67d0823a3598', '', '', 0.0, '', ''                       
                           
 @codigo_proceso as uniqueidentifier,                        
 @Documento as char(8),                            
 @DLNE as varchar(80),                        
 @DLNP as decimal(12,0),                        
 @EstadoTrabajador char(2),                        
 @ZonaUse VARCHAR(2)                        

AS

  
BEGIN                                      
                                    
declare @estado char(2),                                      
        @CODIGO_CLIENTE_IBS as int,                                
        @TIPO_CUOTA as int                                                                          
                                        
  select top 1 @CODIGO_CLIENTE_IBS = DLCC from CLIENTECUOTA where CODIGO_PROCESO = @Codigo_proceso                                                                
  group by DLCC                                         
                                    
 select @estado = Estado from proceso where codigo_proceso = @codigo_proceso                                      
 SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                                     
  
  
 ---- nuevo ,creado para gobierno Lambayeque                                     
 declare @codigo_cliente as int                                    
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                      
  
IF @TIPO_CUOTA = 1                              
BEGIN -- 1                      
  
  IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                     
  BEGIN  
  
   PRINT 'TIPO 1 - ENTR01'  
  
   SELECT DISTINCT  
     CodigoEmpresa = @codigo_cliente,                
    Anio = [DLAP],  -- anio                    
    Mes =[DLMP],  -- mes               
    NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare              
    convert(char(10), FechaDesembolso, 103) as FechaDesembolso,             
  
    TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                    
    'N'      
     ELSE         
    (SELECT CASE WHEN NroTipoCredito = 2 THEN        
    'R'        
      WHEN NroTipoCredito = 3 THEN        
    ' '        
     ELSE            
    ' '        
    END)        
    END),           
  
    -- DOI = '''' + cast(C.DLNP as varchar(12)),
	-- DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                           
    DOI = case when exists(SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp) 
			then (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp)
			else '''' + isnull((SELECT top(1) h.NroDocumento FROM HistoricoNroDocumentos h WHERE h.Codigo_proceso = c.Codigo_proceso and h.DLNP = c.DLNP),'') end,                            
    CodigoTrabajador = '''' + cast([DLCM] as varchar(20)), -- codigo modular              
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                   
    Moneda =  cast ( DLMO as varchar(3)), -- moneda             
    MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),            
    NroCuotasPactadas =   ISNULL(CuotaPactadas,0),             
    NroCuotasPagadas = ISNULL(CuotaPagadas,0),                
    convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                       
    ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(DLIC,0)),            
    CuotaDescontada = ''                 
                                          
    FROM   
     [ClienteCuota] c   
     LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                       
     left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC ) AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                         
     AND rtrim(C.DLCO) = rtrim(CRE.DLCOC ) AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                
     LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP  
     LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP      
    WHERE C.[Codigo_proceso] = @codigo_proceso                                      
      AND (NroDocumento = @Documento OR @Documento = '' OR @Documento = '*')                                
      AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '' OR @DLNE = '*')                                
      AND (DLNP  = @DLNP OR @DLNP = 0)                                
      -- AND (st.idstatus = @EstadoTrabajador OR @EstadoTrabajador = '-')                                
     AND (C.DLST = @EstadoTrabajador OR @EstadoTrabajador = '' OR @EstadoTrabajador = '-')  
      AND (C.DLCR  LIKE @ZonaUse + '%'  OR @ZonaUse = '' OR @ZonaUse = '0')                                        
      AND DLIC >= 0                                                        
   ORDER BY  NombreTrabajador  
  
  END  
  ELSE  
  BEGIN  
  
   IF (rtrim( @EstadoTrabajador ) <> '' OR rtrim( @EstadoTrabajador ) <> '-')                                    
   BEGIN  
   
    PRINT 'TIPO 1 - ENTR02'  
      
    SELECT DISTINCT                                   
    CodigoEmpresa = @codigo_cliente,                
    Anio = [DLAP],  -- anio                    
    Mes =[DLMP],  -- mes               
    NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare              
    convert(char(10), FechaDesembolso, 103) as FechaDesembolso,             
  
    TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                    
    'N'      
     ELSE         
    (SELECT CASE WHEN NroTipoCredito = 2 THEN        
    'R'        
      WHEN NroTipoCredito = 3 THEN        
    ' '        
     ELSE            
    ' '        
    END)        
    END),           
  
    -- DOI = '''' + cast(C.DLNP as varchar(12)),                             
	-- DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                           
    DOI = case when exists(SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp) 
			then (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp)
			else '''' + isnull((SELECT top(1) h.NroDocumento FROM HistoricoNroDocumentos h WHERE h.Codigo_proceso = c.Codigo_proceso and h.DLNP = c.DLNP),'') end,                            
    CodigoTrabajador = '''' + cast([DLCM] as varchar(20)), -- codigo modular              
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                   
    Moneda =  cast ( DLMO as varchar(3)), -- moneda             
    MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),            
    NroCuotasPactadas =   ISNULL(CuotaPactadas,0),             
    NroCuotasPagadas = ISNULL(CuotaPagadas,0),                
    convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                       
    ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(DLIC,0)),            
    CuotaDescontada = ''                 
                                           
     FROM   
     [ClienteCuota] c   
     LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                       
     left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC ) AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                               
     AND rtrim(C.DLCO) = rtrim(CRE.DLCOC ) AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                    
     LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP  
     LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP       
     WHERE C.[Codigo_proceso] = @codigo_proceso                                      
       AND (NroDocumento = @Documento OR @Documento = '' OR @Documento = '*')                                
       AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '' OR @DLNE = '*')                                
       AND (DLNP  = @DLNP OR @DLNP = 0)                                      
       -- AND (C.DLST = @EstadoTrabajador OR @EstadoTrabajador = '-')  
       AND C.DLST = (@EstadoTrabajador)                     
       AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '' OR @ZonaUse = '0')  
       AND DLIC >= 0                                                            
    ORDER BY  NombreTrabajador                                           
   END  
   ELSE  
   BEGIN  
  
    SELECT DISTINCT                                    
     CodigoEmpresa = @codigo_cliente,                
     Anio = [DLAP],  -- anio                    
     Mes =[DLMP],  -- mes               
     NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare              
     convert(char(10), FechaDesembolso, 103) as FechaDesembolso,             
  
     TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                    
     'N'      
     ELSE         
     (SELECT CASE WHEN NroTipoCredito = 2 THEN        
     'R'        
     WHEN NroTipoCredito = 3 THEN        
     ' '        
     ELSE            
     ' '        
     END)        
     END),           
  
     -- DOI = '''' + cast(C.DLNP as varchar(12)),                             
	 -- DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                           
    DOI = case when exists(SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp) 
			then (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp)
			else '''' + isnull((SELECT top(1) h.NroDocumento FROM HistoricoNroDocumentos h WHERE h.Codigo_proceso = c.Codigo_proceso and h.DLNP = c.DLNP),'') end,                            
     CodigoTrabajador = '''' + cast([DLCM] as varchar(20)), -- codigo modular              
     NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                   
     Moneda =  cast ( DLMO as varchar(3)), -- moneda             
     MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),            
     NroCuotasPactadas =   ISNULL(CuotaPactadas,0),             
     NroCuotasPagadas = ISNULL(CuotaPagadas,0),                
     convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                       
     ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(DLIC,0)),            
     CuotaDescontada = ''                 
                                           
     FROM   
     [ClienteCuota] c   
     LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                       
     left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC ) AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                              
     AND rtrim(C.DLCO) = rtrim(CRE.DLCOC ) AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                
     LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP  
     LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP       
     WHERE C.[Codigo_proceso] = @codigo_proceso                                      
       AND (NroDocumento = @Documento OR @Documento = '' OR @Documento = '*')                                
       AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '' OR @DLNE = '*')                                
       AND (DLNP  = @DLNP OR @DLNP = 0)                                      
       -- AND (C.DLST = @EstadoTrabajador OR @EstadoTrabajador = '-')  
       AND C.DLST IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso)                                                                
       AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '' OR @ZonaUse = '0')                                        
       AND DLIC >= 0                                                        
    ORDER BY  NombreTrabajador                                           
  
   END  
    
  END  
END  
ELSE IF  @TIPO_CUOTA = 2                          
BEGIN                         
    
  IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015        
  BEGIN  
  
   PRINT 'TIPO 2 - ENTR01'  
  
    SELECT DISTINCT                                     
    CodigoEmpresa = @codigo_cliente,                
    Anio = [DLAP],  -- anio                    
    Mes =[DLMP],  -- mes               
    NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare              
    convert(char(10), FechaDesembolso, 103) as FechaDesembolso,             
  
    TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                    
    'N'      
    ELSE         
    (SELECT CASE WHEN NroTipoCredito = 2 THEN        
    'R'        
    WHEN NroTipoCredito = 3 THEN        
    ' '        
    ELSE            
    ' '        
    END)        
    END),           
  
    -- DOI = '''' + cast(C.DLNP as varchar(12)),                             
	-- DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                           
    DOI = case when exists(SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp) 
			then (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp)
			else '''' + isnull((SELECT top(1) h.NroDocumento FROM HistoricoNroDocumentos h WHERE h.Codigo_proceso = c.Codigo_proceso and h.DLNP = c.DLNP),'') end,                            
    CodigoTrabajador = '''' + cast([DLCM] as varchar(20)), -- codigo modular              
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                   
    Moneda =  cast ( DLMO as varchar(3)), -- moneda             
    MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),            
    NroCuotasPactadas =   ISNULL(CuotaPactadas,0),             
    NroCuotasPagadas = ISNULL(CuotaPagadas,0),                
    convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                       
    ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(CR.DLIMC,0)),            
    CuotaDescontada = ''                 
                                          
    FROM   
    [ClienteCuota] c       
    LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                       
    left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                          
    AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                          
    AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                    
    AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                
    INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP )        
    LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP  
    LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP  
    WHERE C.[Codigo_proceso] = @codigo_proceso                                      
     AND (NroDocumento = @Documento OR @Documento = '' OR @Documento = '*')                                
     AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '' OR @DLNE = '*' )                                
     AND (DLNP  = @DLNP OR @DLNP = 0)                                
     -- AND (st.idstatus = @EstadoTrabajador OR @EstadoTrabajador = '-')                                
    AND C.DLST =
    case 
    when rtrim( @EstadoTrabajador ) = '' then C.DLST  
    when rtrim( @EstadoTrabajador ) = '-' then C.DLST
    ELSE @EstadoTrabajador 
    END             
     AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '' OR @ZonaUse = '0')  
     AND DLIC >= 0                                         
   ORDER BY NombreTrabajador                                      
  
  END  
  ELSE  
  BEGIN     
  
   IF (rtrim( @EstadoTrabajador ) <> '' OR rtrim(@EstadoTrabajador ) <> '-')                                    
   BEGIN  
    PRINT 'TIPO 2 - ENTR02'  
  
    SELECT DISTINCT                                    
     CodigoEmpresa = @codigo_cliente,                
     Anio = [DLAP],  -- anio                    
     Mes =[DLMP],  -- mes               
     NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare              
     convert(char(10), FechaDesembolso, 103) as FechaDesembolso,             
  
     TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                    
     'N'      
     ELSE         
     (SELECT CASE WHEN NroTipoCredito = 2 THEN        
     'R'        
     WHEN NroTipoCredito = 3 THEN        
     ' '        
     ELSE            
     ' '        
     END)        
     END),           
  
     -- DOI = '''' + cast(C.DLNP as varchar(12)),                             
	 -- DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                           
     DOI = case when exists(SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp) 
			then (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp)
			else '''' + isnull((SELECT top(1) h.NroDocumento FROM HistoricoNroDocumentos h WHERE h.Codigo_proceso = c.Codigo_proceso and h.DLNP = c.DLNP),'') end,                            
     CodigoTrabajador = '''' + cast([DLCM] as varchar(20)), -- codigo modular              
     NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                   
     Moneda =  cast ( DLMO as varchar(3)), -- moneda             
     MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),            
     NroCuotasPactadas =   ISNULL(CuotaPactadas,0),             
     NroCuotasPagadas = ISNULL(CuotaPagadas,0),                
     convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                       
     ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(CR.DLIMC,0)),            
     CuotaDescontada = ''                 
                                           
     FROM   
     [ClienteCuota] c   
     LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                       
     left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                       
     AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                          
     AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                    
     AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                
     INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP )        
     LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP  
     LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP  
  
     WHERE C.[Codigo_proceso] = @codigo_proceso                                      
      AND (NroDocumento = @Documento OR @Documento = '' OR @Documento = '*')                                
      AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '' )                                
      AND (DLNP  = @DLNP OR @DLNP = 0)                                
      -- AND (st.idstatus = @EstadoTrabajador OR @EstadoTrabajador = '-')                                    
      AND C.DLST = (@EstadoTrabajador)                      
      AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '' OR @ZonaUse = '0')                                      
      AND DLIC >= 0                                                        
    ORDER BY NombreTrabajador                                       
  
   END  
   ELSE  
   BEGIN  
    PRINT 'TIPO 2 - ENTR03'  
      
    SELECT DISTINCT                                     
     CodigoEmpresa = @codigo_cliente,                
     Anio = [DLAP],  -- anio                    
     Mes =[DLMP],  -- mes               
     NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare              
     convert(char(10), FechaDesembolso, 103) as FechaDesembolso,             
  
     TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                    
     'N'      
     ELSE         
     (SELECT CASE WHEN NroTipoCredito = 2 THEN        
     'R'        
     WHEN NroTipoCredito = 3 THEN        
     ' '        
     ELSE            
     ' '        
     END)        
     END),           
  
     -- DOI = '''' + cast(C.DLNP as varchar(12)),                             
	 -- DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                           
     DOI = case when exists(SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp) 
			then (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp)
			else '''' + isnull((SELECT top(1) h.NroDocumento FROM HistoricoNroDocumentos h WHERE h.Codigo_proceso = c.Codigo_proceso and h.DLNP = c.DLNP),'') end,                            
     CodigoTrabajador = '''' + cast([DLCM] as varchar(20)), -- codigo modular              
     NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                   
     Moneda =  cast ( DLMO as varchar(3)), -- moneda             
     MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),            
     NroCuotasPactadas =   ISNULL(CuotaPactadas,0),             
     NroCuotasPagadas = ISNULL(CuotaPagadas,0),                
     convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                       
     ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(CR.DLIMC,0)),            
     CuotaDescontada = ''                                                    
     FROM   
     [ClienteCuota] c   
     LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                       
     left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                          
     AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                               
     AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                          
     AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                
     INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP )  --- PARA LA CUOTA DEL MES         
      LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP  
     LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP  
     WHERE C.[Codigo_proceso] = @codigo_proceso                                      
      AND (NroDocumento = @Documento OR @Documento = '' OR @Documento = '*')                                
      AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '' OR @DLNE = '*')                                
      AND (DLNP  = @DLNP OR @DLNP = 0)                                
         AND C.DLST IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso)  
      AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '' OR @ZonaUse = '0')                                      
      AND DLIC >= 0                                                        
    ORDER BY NombreTrabajador                                          
  
   END  
  
  END  
  
  
END  
ELSE  
BEGIN  
  
 SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                      
    INTO #TEMPO                      
 FROM ClienteCuota CC                      
 INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                      
 INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                       
    AND CC.Codigo_proceso = CR.Codigo_proceso              
    AND CC.DLNP = CR.DLACC                      
    AND(CONVERT(INT,                      
    CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
    CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                       
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                       
        <                       
        CONVERT(INT,                      
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                       
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                       
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                      
        )                      
        OR                      
                              
        CONVERT(INT,                      
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                       
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                      
        )                      
        =                      
        CONVERT(INT,                      
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                       
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                       
        )                      
      )                  
  )                      
    WHERE DLIC >= 0                      
 GROUP BY CR.DLACC                     
  
 IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                     
 BEGIN  
  PRINT 'TIPO 3 - ENTR01'   
  
  SELECT DISTINCT                                    
   CodigoEmpresa = @codigo_cliente,                
   Anio = [DLAP],  -- anio                    
   Mes =[DLMP],  -- mes               
   NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare              
   convert(char(10), FechaDesembolso, 103) as FechaDesembolso,             
  
   TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                    
   'N'      
   ELSE         
   (SELECT CASE WHEN NroTipoCredito = 2 THEN        
   'R'        
   WHEN NroTipoCredito = 3 THEN        
   ' '        
   ELSE            
   ' '        
   END)        
   END),           
  
   -- DOI = '''' + cast(C.DLNP as varchar(12)),                             
   -- DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                           
   DOI = case when exists(SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp) 
			then (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp)
			else '''' + isnull((SELECT top(1) h.NroDocumento FROM HistoricoNroDocumentos h WHERE h.Codigo_proceso = c.Codigo_proceso and h.DLNP = c.DLNP),'') end,                            
   CodigoTrabajador = '''' + cast([DLCM] as varchar(20)), -- codigo modular              
   NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                   
   Moneda =  cast ( DLMO as varchar(3)), -- moneda             
   MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),            
   NroCuotasPactadas =   ISNULL(CuotaPactadas,0),             
   NroCuotasPagadas = ISNULL(CuotaPagadas,0),                
   convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                       
   ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(T.CUOTA,0)),            
   CuotaDescontada = ''                 
                                           
   FROM   
     [ClienteCuota] c   
     LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                       
     left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                          
     AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                          
     AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                          
     AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                
     INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)                      
      LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP  
     LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP  
     WHERE C.[Codigo_proceso] = @codigo_proceso                                      
      AND (NroDocumento = @Documento OR @Documento = '' OR @Documento = '*')                                
      AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '' OR @DLNE = '*')                                
      AND (DLNP  = @DLNP OR @DLNP = 0)                                
         AND C.DLST =
         case 
         when rtrim( @EstadoTrabajador ) = '' then DLST 
         when rtrim( @EstadoTrabajador ) = '-' then DLST 
         ELSE @EstadoTrabajador
         END   
      AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '' OR @ZonaUse = '0')                                      
      AND DLIC >= 0                                                        
  ORDER BY NombreTrabajador                                            
  
 END  
 ELSE  
 BEGIN    
  
  IF (rtrim( @EstadoTrabajador ) <> '' OR rtrim(@EstadoTrabajador ) <> '-')                                    
  BEGIN  
   PRINT 'TIPO 3 - ENTR02'   
  
   SELECT DISTINCT                                     
    CodigoEmpresa = @codigo_cliente,                
    Anio = [DLAP],  -- anio                    
    Mes =[DLMP],  -- mes               
    NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare              
    convert(char(10), FechaDesembolso, 103) as FechaDesembolso,             
  
    TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                    
    'N'      
    ELSE         
    (SELECT CASE WHEN NroTipoCredito = 2 THEN        
    'R'        
    WHEN NroTipoCredito = 3 THEN        
    ' '        
    ELSE            
    ' '        
    END)        
    END),           
  
    -- DOI = '''' + cast(C.DLNP as varchar(12)),                             
	-- DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                           
    DOI = case when exists(SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp) 
			then (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp)
			else '''' + isnull((SELECT top(1) h.NroDocumento FROM HistoricoNroDocumentos h WHERE h.Codigo_proceso = c.Codigo_proceso and h.DLNP = c.DLNP),'') end,	                            
    CodigoTrabajador = '''' + cast([DLCM] as varchar(20)), -- codigo modular              
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                   
    Moneda =  cast ( DLMO as varchar(3)), -- moneda             
    MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),            
    NroCuotasPactadas =   ISNULL(CuotaPactadas,0),             
    NroCuotasPagadas = ISNULL(CuotaPagadas,0),                
    convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                       
    ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(T.CUOTA,0)),            
    CuotaDescontada = ''                 
                                           
     FROM   
     [ClienteCuota] c   
     LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                       
     left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                          
     AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                                                             
     AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                          
     AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                
     INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)                          
      LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP  
     LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP  
     WHERE C.[Codigo_proceso] = @codigo_proceso                                      
      AND (NroDocumento = @Documento OR @Documento = '' OR @Documento = '*')                                
      AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '' OR @DLNE = '*')                                
      AND (DLNP  = @DLNP OR @DLNP = 0)                                               
      AND C.DLST = (@EstadoTrabajador)                                         
      AND (C.DLCR LIKE @ZonaUse + '%' OR @ZonaUse = '' OR @ZonaUse = '0')  
      AND DLIC >= 0                                                        
    ORDER BY NombreTrabajador  
  
     
  
  END  
  ELSE  
  BEGIN  
   PRINT 'TIPO 3 - ENTR03'   
  
    SELECT DISTINCT                                    
    CodigoEmpresa = @codigo_cliente,                
    Anio = [DLAP],  -- anio                    
    Mes =[DLMP],  -- mes               
    NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare              
    convert(char(10), FechaDesembolso, 103) as FechaDesembolso,             
  
    TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                    
    'N'      
    ELSE         
    (SELECT CASE WHEN NroTipoCredito = 2 THEN        
    'R'        
    WHEN NroTipoCredito = 3 THEN        
    ' '        
    ELSE            
    ' '        
    END)        
    END),           
  
    -- DOI = '''' + cast(C.DLNP as varchar(12)),                             
	-- DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                           
    DOI = case when exists(SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp) 
			then (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp)
			else '''' + isnull((SELECT top(1) h.NroDocumento FROM HistoricoNroDocumentos h WHERE h.Codigo_proceso = c.Codigo_proceso and h.DLNP = c.DLNP),'') end,                            
    CodigoTrabajador = '''' + cast([DLCM] as varchar(20)), -- codigo modular              
    NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                   
    Moneda =  cast ( DLMO as varchar(3)), -- moneda             
    MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),            
    NroCuotasPactadas =   ISNULL(CuotaPactadas,0),             
    NroCuotasPagadas = ISNULL(CuotaPagadas,0),                
    convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                       
    ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(T.CUOTA,0)),            
    CuotaDescontada = ''                 
                                           
          FROM   
     [ClienteCuota] c   
     LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                       
     left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                          
     AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                          
     AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                          
     AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                                
     INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)                          
      LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP  
     LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP  
     WHERE C.[Codigo_proceso] = @codigo_proceso                                      
      AND (NroDocumento = @Documento OR @Documento = '' OR @Documento = '*')                                
      AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '' OR @DLNE = '*')                                
      AND (DLNP  = @DLNP OR @DLNP = 0)                                               
      AND C.DLST IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso)  
      AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '' OR @ZonaUse = '0')                                      
      AND DLIC >= 0                                               
  
    ORDER BY NombreTrabajador                                            
  
  END  
  
 END  
  
 DROP TABLE #TEMPO
   
END  
END

-- [dbo].[ExportRegistrosResultadoProcesoByFiltros] -- FIN


GO
/****** Object:  StoredProcedure [dbo].[FiltroInformeProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[FiltroInformeProceso]        
    
 @codigo_proceso as VARCHAR(100),  
 @Documento as char(8),                
 @DLNE as varchar(80),  
 @DLNP as decimal(12,0),  
 @EstadoTrabajador char(2),            
 @ZonaUse int                             
  
    
AS  
  
        
BEGIN        
    
 DECLARE @ID  UNIQUEIDENTIFIER        
         
 IF (@codigo_proceso = '')        
  BEGIN        
   SET @ID = NULL        
  END        
 ELSE        
  BEGIN        
   SET @ID = CAST(@codigo_proceso AS UNIQUEIDENTIFIER)        
  END        
          
 --PRINT CONVERT(VARCHAR(100),@codigo_proceso)        
           
 SELECT     
 [Codigo_proceso],     
 TipoDocumento = td.Descripcion,    
 NumeroDocumento,     
    p.codigo_cliente,    
 c.Nombre_Cliente,     
 [Fecha_CargaAS400],         
 Fecha_ProcesoAD = convert ( char ( 10 ) , cast ( isnull(Fecha_ProcesoAD, getdate()) as datetime ), 103),         
 p.[Estado],     
 CodigoNombre,     
 [Anio_periodo],     
 [Mes_Periodo],        
 Fecha_ProcesoAS400,        
 ShowGrid = CASE when rtrim(p.Estado) = 'R0' or rtrim(p.Estado) = 'R1' or rtrim(p.Estado) = 'RE' THEN        
       CAST ( 1 AS BIT ) ELSE CAST ( 0 AS BIT ) END,        
    bCorreoElectronico = case when ltrim(rtrim( CorreoElectronico )) = '' then        
       cast ( 0 as bit )  else  cast ( 1 as bit ) end,        
 FormatoArchivoImportacion        
 /*blockFormatInput = case when (FormatoArchivo<>'default') then cast( 1 as bit ) else cast( 0 as bit ) end*/,        
 MontoProcesadoSoles = ISNULL ( (        
    select sum ( DLIC) from clientecuota         
    where codigo_proceso = @ID  -- 1          
    and DLMO = 'SOL'        
   AND (NroDocumento = @Documento OR @Documento = '*')            
   AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )            
   AND (DLNP  = @DLNP OR @DLNP = 0)            
   AND (SUBSTRING(DLCR,1,2) = @EstadoTrabajador OR @EstadoTrabajador = '-')            
      AND (DLCC  = @ZonaUse OR @ZonaUse = '0')            
  
  
    ), 0 ) ,        
  MontoProcesadoDolares = ISNULL ((        
    select sum ( DLIC )         
    from clientecuota         
    where codigo_proceso = @ID  --2        
    and DLMO = 'USD'        
    AND (NroDocumento = @Documento OR @Documento = '*')            
 AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )            
 AND (DLNP  = @DLNP OR @DLNP = 0)            
 AND (SUBSTRING(DLCR,1,2) = @EstadoTrabajador OR @EstadoTrabajador = '-')            
    AND (DLCC  = @ZonaUse OR @ZonaUse = '0')  
  
    ), 0 ),        
  MesPeriodo2S = SUBSTRING('00' + REPLACE(cast ( ISNULL(Mes_Periodo, 0) AS CHAR(2)), '.', '') , LEN(REPLACE(cast ( ISNULL(Mes_Periodo, 0) AS CHAR(2)), '.', '')) + 1, 2 ),        
  AnioPeriodo2S = SUBSTRING('00' + REPLACE(cast ( ISNULL(Anio_periodo-2000, 0) AS CHAR(2)), '.', '') , LEN(REPLACE(cast ( ISNULL(Anio_periodo-2000, 0) AS CHAR(2)), '.', '')) + 1, 2 )        
 FROM [Proceso] P inner join Cliente C         
  ON (P.[Codigo_Cliente] = C.Codigo_Cliente )        
  INNER JOIN CODIGOESTADO CE ON ( P.Estado = CE.CodigoId and tabla='Proceso')        
  left outer join TipoDocumento td on (C.TipoDocumento = td.Codigo)        
 WHERE [Codigo_proceso] = @ID --3        
END        
        

GO
/****** Object:  StoredProcedure [dbo].[FinalizadoEnvioInformacionAS400]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE OR ALTER PROCEDURE [dbo].[FinalizadoEnvioInformacionAS400]  
@Codigo_proceso AS  varchar(255), --UNIQUEIDENTIFIER,  
@usuario VARCHAR(30)  
AS  
BEGIN  
SET NOCOUNT ON

 IF NOT EXISTS(SELECT * FROM CLIENTECUOTA WHERE ESTADO <> 'E4' AND CODIGO_PROCESO = @Codigo_proceso)
 BEGIN

	UPDATE Proceso   
	SET [Estado]  = 'A2'  
	     ,Fecha_EnvioAS400 = getdate()
	WHERE [Codigo_proceso] = @Codigo_proceso   
	EXECUTE AddLogInfo '', @Codigo_proceso, '', 'A2', 'FinalizadoEnvioInformacionAS400', @usuario  	
 END
 ELSE
 BEGIN
	UPDATE Proceso   
	SET [Estado]  = 'A3'  
	    ,Fecha_EnvioAS400 = getdate()
	WHERE [Codigo_proceso] = @Codigo_proceso   
	EXECUTE AddLogInfo '', @Codigo_proceso, '', 'A3', 'FinalizadoEnvioInformacionAS400', @usuario  	
 END

SET NOCOUNT OFF  
END  
  

GO
/****** Object:  StoredProcedure [dbo].[FinalProcesoCargaDescuentos]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[FinalProcesoCargaDescuentos]
@Codigo_proceso as uniqueidentifier
AS
BEGIN
SET NOCOUNT ON 
	--Devuelve 1 si el proceso ha finalizado la carga del archivo
	DECLARE @B AS BIT
	SET @B = 0
	IF EXISTS ( SELECT NULL FROM PROCESO WHERE Codigo_proceso = @Codigo_proceso AND Estado in ('D2', 'ED')) 
	BEGIN
		SET @B = 1
	END
SET NOCOUNT OFF
SELECT @B AS BOOL
END


GO
/****** Object:  StoredProcedure [dbo].[Formato_New]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[Formato_New]                              
                           
 @codigo_proceso as uniqueidentifier,                        
 @Documento as char(8),                            
 @DLNE as varchar(80),                        
 @DLNP as decimal(12,0),                        
 @EstadoTrabajador char(2),                        
 @ZonaUse VARCHAR(2)                        

AS


BEGIN                                    
                                  
declare @estado char(2),                                    
        @CODIGO_CLIENTE_IBS as int,                              
        @TIPO_CUOTA as int                                                                        
                                      
  select top 1 @CODIGO_CLIENTE_IBS = DLCC from CLIENTECUOTA where CODIGO_PROCESO = @Codigo_proceso                                                              
  group by DLCC                                       
                                  
 select @estado = Estado from proceso where codigo_proceso = @codigo_proceso                                    
 SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                                   


 ---- nuevo ,creado para gobierno Lambayeque                                   
 declare @codigo_cliente as int                                  
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                    

IF @TIPO_CUOTA = 1                            
BEGIN -- 1                    

		IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                   
		BEGIN

			PRINT 'TIPO 1 - ENTR01'

			SELECT DISTINCT
			  CodigoEmpresa = @codigo_cliente,              
				Anio = [DLAP],  -- anio                  
				Mes =[DLMP],  -- mes             
				NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare            
				convert(char(10), FechaDesembolso, 103) as FechaDesembolso,           

				TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                  
				'N'    
				 ELSE       
				(SELECT CASE WHEN NroTipoCredito = 2 THEN      
				'R'      
				  WHEN NroTipoCredito = 3 THEN      
				' '      
				 ELSE          
				' '      
				END)      
				END),         

				-- DOI = '''' + cast(C.DLNP as varchar(12)),                           
				DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                          
				CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular            
				NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                 
				Moneda =  cast ( DLMO as varchar(3)), -- moneda           
				MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),          
				NroCuotasPactadas =   ISNULL(CuotaPactadas,0),           
				NroCuotasPagadas = ISNULL(CuotaPagadas,0),              
				convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                     
				ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(DLIC,0)),          
				CuotaDescontada = ''               
			                                     
			 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC ) AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                       
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC ) AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP				
			 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              
				  -- AND (st.idstatus = @EstadoTrabajador OR @EstadoTrabajador = '-')                              
					AND (C.DLST = @EstadoTrabajador OR @EstadoTrabajador = '-')
				  AND (C.DLCR  LIKE @ZonaUse + '%'  OR @ZonaUse = '0')                                				  
				  AND DLIC >= 0                                                      
			ORDER BY  NombreTrabajador

		END
		ELSE
		BEGIN

			IF (rtrim( @EstadoTrabajador ) <> '-')                                  
			BEGIN
	
				PRINT 'TIPO 1 - ENTR02'
				
				SELECT DISTINCT                                 
				CodigoEmpresa = @codigo_cliente,              
				Anio = [DLAP],  -- anio                  
				Mes =[DLMP],  -- mes             
				NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare            
				convert(char(10), FechaDesembolso, 103) as FechaDesembolso,           

				TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                  
				'N'    
				 ELSE       
				(SELECT CASE WHEN NroTipoCredito = 2 THEN      
				'R'      
				  WHEN NroTipoCredito = 3 THEN      
				' '      
				 ELSE          
				' '      
				END)      
				END),         

				-- DOI = '''' + cast(C.DLNP as varchar(12)),                           
				DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                          
				CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular            
				NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                 
				Moneda =  cast ( DLMO as varchar(3)), -- moneda           
				MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),          
				NroCuotasPactadas =   ISNULL(CuotaPactadas,0),           
				NroCuotasPagadas = ISNULL(CuotaPagadas,0),              
				convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                     
				ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(DLIC,0)),          
				CuotaDescontada = ''               
				                                     
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC ) AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        					
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC ) AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              				
					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP					
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
					  AND (NroDocumento = @Documento OR @Documento = '*')                              
					  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
					  AND (DLNP  = @DLNP OR @DLNP = 0)                              				  
					  -- AND (C.DLST = @EstadoTrabajador OR @EstadoTrabajador = '-')
					  AND C.DLST = (@EstadoTrabajador)                   
					  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')
					  AND DLIC >= 0                                                      				
				ORDER BY  NombreTrabajador                                   						
			END
			ELSE
			BEGIN

				SELECT DISTINCT                                  
					CodigoEmpresa = @codigo_cliente,              
					Anio = [DLAP],  -- anio                  
					Mes =[DLMP],  -- mes             
					NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare            
					convert(char(10), FechaDesembolso, 103) as FechaDesembolso,           

					TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                  
					'N'    
					ELSE       
					(SELECT CASE WHEN NroTipoCredito = 2 THEN      
					'R'      
					WHEN NroTipoCredito = 3 THEN      
					' '      
					ELSE          
					' '      
					END)      
					END),         

					-- DOI = '''' + cast(C.DLNP as varchar(12)),                           
					DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                          
					CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular            
					NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                 
					Moneda =  cast ( DLMO as varchar(3)), -- moneda           
					MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),          
					NroCuotasPactadas =   ISNULL(CuotaPactadas,0),           
					NroCuotasPagadas = ISNULL(CuotaPagadas,0),              
					convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                     
					ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(DLIC,0)),          
					CuotaDescontada = ''               
				                                     
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC ) AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        				
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC ) AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP					
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
					  AND (NroDocumento = @Documento OR @Documento = '*')                              
					  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
					  AND (DLNP  = @DLNP OR @DLNP = 0)                              				  
					  -- AND (C.DLST = @EstadoTrabajador OR @EstadoTrabajador = '-')
					  AND C.DLST IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso)                                                       					  
					  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                				  
					  AND DLIC >= 0                                                      
				ORDER BY  NombreTrabajador                                    					

			END
		
		END
END
ELSE IF  @TIPO_CUOTA = 2                        
BEGIN                       
		
		IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015      
		BEGIN

			PRINT 'TIPO 2 - ENTR01'

			 SELECT DISTINCT                                   
				CodigoEmpresa = @codigo_cliente,              
				Anio = [DLAP],  -- anio                  
				Mes =[DLMP],  -- mes             
				NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare            
				convert(char(10), FechaDesembolso, 103) as FechaDesembolso,           

				TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                  
				'N'    
				ELSE       
				(SELECT CASE WHEN NroTipoCredito = 2 THEN      
				'R'      
				WHEN NroTipoCredito = 3 THEN      
				' '      
				ELSE          
				' '      
				END)      
				END),         

				-- DOI = '''' + cast(C.DLNP as varchar(12)),                           
				DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                          
				CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular            
				NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                 
				Moneda =  cast ( DLMO as varchar(3)), -- moneda           
				MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),          
				NroCuotasPactadas =   ISNULL(CuotaPactadas,0),           
				NroCuotasPagadas = ISNULL(CuotaPagadas,0),              
				convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                     
				ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(CR.DLIMC,0)),          
				CuotaDescontada = ''               
			                                     
			 FROM 
				[ClienteCuota] c 				
				LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
				left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
				AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        
				AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                  
				AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
				INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP ) 					
				LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
				LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP
		  WHERE C.[Codigo_proceso] = @codigo_proceso                                    
			  AND (NroDocumento = @Documento OR @Documento = '*')                              
			  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
			  AND (DLNP  = @DLNP OR @DLNP = 0)                              
			  -- AND (st.idstatus = @EstadoTrabajador OR @EstadoTrabajador = '-')                              
				AND C.DLST =case when rtrim( @EstadoTrabajador ) = '-' then C.DLST  ELSE @EstadoTrabajador END           
			  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')
			  AND DLIC >= 0                                       
		 ORDER BY NombreTrabajador                                    

		END
		ELSE
		BEGIN			

			IF (rtrim( @EstadoTrabajador ) <> '-')                                  
			BEGIN
				PRINT 'TIPO 2 - ENTR02'

				SELECT DISTINCT                                  
					CodigoEmpresa = @codigo_cliente,              
					Anio = [DLAP],  -- anio                  
					Mes =[DLMP],  -- mes             
					NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare            
					convert(char(10), FechaDesembolso, 103) as FechaDesembolso,           

					TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                  
					'N'    
					ELSE       
					(SELECT CASE WHEN NroTipoCredito = 2 THEN      
					'R'      
					WHEN NroTipoCredito = 3 THEN      
					' '      
					ELSE          
					' '      
					END)      
					END),         

					-- DOI = '''' + cast(C.DLNP as varchar(12)),                           
					DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                          
					CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular            
					NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                 
					Moneda =  cast ( DLMO as varchar(3)), -- moneda           
					MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),          
					NroCuotasPactadas =   ISNULL(CuotaPactadas,0),           
					NroCuotasPagadas = ISNULL(CuotaPagadas,0),              
					convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                     
					ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(CR.DLIMC,0)),          
					CuotaDescontada = ''               
				                                     
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
					AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                  
					AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP ) 					
					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP

				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              
				  -- AND (st.idstatus = @EstadoTrabajador OR @EstadoTrabajador = '-')                              				
				  AND C.DLST = (@EstadoTrabajador)                    
				  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                		  
				  AND DLIC >= 0                                                      
			 ORDER BY NombreTrabajador                                    	

			END
			ELSE
			BEGIN
				PRINT 'TIPO 2 - ENTR03'
				
				SELECT DISTINCT                                   
					CodigoEmpresa = @codigo_cliente,              
					Anio = [DLAP],  -- anio                  
					Mes =[DLMP],  -- mes             
					NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare            
					convert(char(10), FechaDesembolso, 103) as FechaDesembolso,           

					TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                  
					'N'    
					ELSE       
					(SELECT CASE WHEN NroTipoCredito = 2 THEN      
					'R'      
					WHEN NroTipoCredito = 3 THEN      
					' '      
					ELSE          
					' '      
					END)      
					END),         

					-- DOI = '''' + cast(C.DLNP as varchar(12)),                           
					DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                          
					CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular            
					NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                 
					Moneda =  cast ( DLMO as varchar(3)), -- moneda           
					MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),          
					NroCuotasPactadas =   ISNULL(CuotaPactadas,0),           
					NroCuotasPagadas = ISNULL(CuotaPagadas,0),              
					convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                     
					ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(CR.DLIMC,0)),          
					CuotaDescontada = ''                                                  
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
					AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        					
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                        
					AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP )  --- PARA LA CUOTA DEL MES  					
 					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              
			      AND C.DLST IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso)
				  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                		  
				  AND DLIC >= 0                                                      
			 ORDER BY NombreTrabajador                                  						

			END

		END


END
ELSE
BEGIN

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                    
    INTO #TEMPO                    
	FROM ClienteCuota CC                    
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                    
	INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                     
    AND CC.Codigo_proceso = CR.Codigo_proceso            
    AND CC.DLNP = CR.DLACC                    
    AND(CONVERT(INT,                    
    CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                     
    CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                     
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                     
        <                     
        CONVERT(INT,                    
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                     
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                     
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                    
        )                    
        OR                    
                            
        CONVERT(INT,                    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                     
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                    
        )                    
        =                    
        CONVERT(INT,                    
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                     
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                     
        )                    
      )                
	 )                    
    WHERE DLIC >= 0                    
	GROUP BY CR.DLACC                   

	IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                   
	BEGIN
		PRINT 'TIPO 3 - ENTR01'	

		SELECT DISTINCT                                  
			CodigoEmpresa = @codigo_cliente,              
			Anio = [DLAP],  -- anio                  
			Mes =[DLMP],  -- mes             
			NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare            
			convert(char(10), FechaDesembolso, 103) as FechaDesembolso,           

			TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                  
			'N'    
			ELSE       
			(SELECT CASE WHEN NroTipoCredito = 2 THEN      
			'R'      
			WHEN NroTipoCredito = 3 THEN      
			' '      
			ELSE          
			' '      
			END)      
			END),         

			-- DOI = '''' + cast(C.DLNP as varchar(12)),                           
			DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                          
			CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular            
			NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                 
			Moneda =  cast ( DLMO as varchar(3)), -- moneda           
			MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),          
			NroCuotasPactadas =   ISNULL(CuotaPactadas,0),           
			NroCuotasPagadas = ISNULL(CuotaPagadas,0),              
			convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                     
			ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(T.CUOTA,0)),          
			CuotaDescontada = ''               
				                                     
		 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
					AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                        
					AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)                    
 					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              
			      AND C.DLST =case when rtrim( @EstadoTrabajador ) = '-' then DLST ELSE @EstadoTrabajador END 
				  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                		  
				  AND DLIC >= 0                                                      
	 ORDER BY NombreTrabajador                                    						

	END
	ELSE
	BEGIN		

		IF (rtrim( @EstadoTrabajador ) <> '-')                                  
		BEGIN
			PRINT 'TIPO 3 - ENTR02'	

			SELECT DISTINCT                                   
				CodigoEmpresa = @codigo_cliente,              
				Anio = [DLAP],  -- anio                  
				Mes =[DLMP],  -- mes             
				NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare            
				convert(char(10), FechaDesembolso, 103) as FechaDesembolso,           

				TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                  
				'N'    
				ELSE       
				(SELECT CASE WHEN NroTipoCredito = 2 THEN      
				'R'      
				WHEN NroTipoCredito = 3 THEN      
				' '      
				ELSE          
				' '      
				END)      
				END),         

				-- DOI = '''' + cast(C.DLNP as varchar(12)),                           
				DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                          
				CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular            
				NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                 
				Moneda =  cast ( DLMO as varchar(3)), -- moneda           
				MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),          
				NroCuotasPactadas =   ISNULL(CuotaPactadas,0),           
				NroCuotasPagadas = ISNULL(CuotaPagadas,0),              
				convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                     
				ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(T.CUOTA,0)),          
				CuotaDescontada = ''               
				                                     
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
					AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        					                              
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                        
					AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)                        
 					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              			      				  
				  AND C.DLST = (@EstadoTrabajador)                                       
				  AND (C.DLCR LIKE @ZonaUse + '%' OR @ZonaUse = '0')
				  AND DLIC >= 0                                                      
			 ORDER BY NombreTrabajador

			

		END
		ELSE
		BEGIN
			PRINT 'TIPO 3 - ENTR03'	

			 SELECT DISTINCT                                  
				CodigoEmpresa = @codigo_cliente,              
				Anio = [DLAP],  -- anio                  
				Mes =[DLMP],  -- mes             
				NumeroPrestamo = '''' + cast([DLNP] as varchar(12)), -- pagare            
				convert(char(10), FechaDesembolso, 103) as FechaDesembolso,           

				TipoCredito = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                                  
				'N'    
				ELSE       
				(SELECT CASE WHEN NroTipoCredito = 2 THEN      
				'R'      
				WHEN NroTipoCredito = 3 THEN      
				' '      
				ELSE          
				' '      
				END)      
				END),         

				-- DOI = '''' + cast(C.DLNP as varchar(12)),                           
				DOI = (SELECT '''' + cast(DLDNI as varchar(12)) FROM DLCRE WHERE DLACC = C.dlnp),                          
				CodigoTrabajador = cast([DLCM] as varchar(20)), -- codigo modular            
				NombreTrabajador = cast ( REPLACE ([DLNE], ',', '') as varchar(75)), -- trabajador                 
				Moneda =  cast ( DLMO as varchar(3)), -- moneda           
				MontoOriginal = CONVERT(DECIMAL(18,2),ISNULL(MontoOriginal,0)),          
				NroCuotasPactadas =   ISNULL(CuotaPactadas,0),           
				NroCuotasPagadas = ISNULL(CuotaPagadas,0),              
				convert(char(10), FechaCargo, 103) as FechaCargoCuenta,                     
				ImporteCuota = CONVERT(DECIMAL(18,2),ISNULL(T.CUOTA,0)),          
				CuotaDescontada = ''               
				                                     
				 				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
					AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                        
					AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)                        
 					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              			      				  
				  AND C.DLST IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso)
				  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                		  
				  AND DLIC >= 0                                                      

			 ORDER BY NombreTrabajador                                    						

		END

	END

	DROP TABLE #TEMPO                    
	
END                               
END                       

GO
/****** Object:  StoredProcedure [dbo].[Get_ALL_empresas]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[Get_ALL_empresas]  
as  
SELECT codigo_cliente,Nombre_cliente FROM CLIENTE   
order by Nombre_cliente 

GO
/****** Object:  StoredProcedure [dbo].[Get_formato_importacion]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[Get_formato_importacion]  
@Cliente_id as int  
as   
select FormatoArchivoImportacion from Cliente  
where Codigo_Cliente = @Cliente_id 

GO
/****** Object:  StoredProcedure [dbo].[GetAnioCasillero]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetAnioCasillero]
as    

BEGIN    

 -- Seleccionamos los anos de proceso de los que se han enviado a AS/400    
 SELECT DISTINCT Anio_periodo FROM PROCESO     
 ORDER BY Anio_periodo desc

END    


GO
/****** Object:  StoredProcedure [dbo].[GetAnioEnvioArchivoAS400]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


 CREATE OR ALTER PROCEDURE [dbo].[GetAnioEnvioArchivoAS400]  
as  
BEGIN  
 -- Seleccionamos los anos de proceso de los que se han enviado a AS/400  
 SELECT DISTINCT Anio_periodo FROM PROCESO   
 where Estado  IN ('A2','A3')  
END  
  
GO
/****** Object:  StoredProcedure [dbo].[GetAnioProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetAnioProceso]
AS
BEGIN
	--realizamos la seleccion de año del proceso
	SELECT DISTINCT Anio_periodo FROM PROCESO 
		
END


GO
/****** Object:  StoredProcedure [dbo].[GetAnioProcesoEspera]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetAnioProcesoEspera]
AS
BEGIN
	--realizamos la seleccion de año del proceso
	SELECT DISTINCT Anio_periodo FROM PROCESO 
	where Estado IN ( 'G1', 'EG', 'D2')
	ORDER BY Anio_periodo DESC
END

GO
/****** Object:  StoredProcedure [dbo].[GetAniosProcesoDescuentosCompletado]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetAniosProcesoDescuentosCompletado]
AS
BEGIN
	--realizamos la seleccion de año del proceso
	SELECT DISTINCT Anio_periodo FROM PROCESO 
	where Estado IN ( 'D2', 'A1', 'A2', 'A3')
		
END


GO
/****** Object:  StoredProcedure [dbo].[getAniosProcesoSeguimiento]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getAniosProcesoSeguimiento]
AS
BEGIN
	-- Seleccionamos los años de los procesos que pueden 
	-- ser analizados para seguimiento
	-- RESPINOZA - 20060601
	SELECT DISTINCT Anio_periodo FROM PROCESO 
	where Estado  IN ('D2', 'ED', 'A1', 'A2', 'EA')
END



GO
/****** Object:  StoredProcedure [dbo].[GetCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetCliente]
(
	@Codigo_cliente INT
)
AS
BEGIN
	SELECT 
		Codigo_Cliente,   
		ISNULL(Nombre_Cliente,'') AS Nombre_Cliente,
		ISNULL(TipoArchivoEnviar,0) AS TipoArchivoEnviar,
		ISNULL(FormatoArchivo,'') AS FormatoArchivo,
		Codigo_Referencia,
		TipoDocumento,
		NumeroDocumento,
		CorreoElectronico,
		ISNULL(LTRIM(RTRIM(telefono_1)), '') AS telefono_1,   
		ISNULL(LTRIM(RTRIM(telefono_2)), '') AS telefono_2,  
		ISNULL(LTRIM(RTRIM(telefono_3)), '') AS telefono_3,  
		ISNULL(LTRIM(RTRIM(telefono_4)), '') AS telefono_4,  
		ISNULL(LTRIM(RTRIM(dia_envio_planilla)), '') AS dia_envio_planilla,   
		ISNULL(LTRIM(RTRIM(dia_cierre_planilla)), '') AS dia_cierre_planilla,   
		ISNULL(LTRIM(RTRIM(meses_anticipacion_envio_listado)), '') AS meses_anticipacion_envio_listado,   
		ISNULL(LTRIM(RTRIM(dia_corte)), '') AS dia_corte,   
		ISNULL(id_funcionario, 0) AS id_funcionario,   
		ISNULL(codigo_IBS, 0) AS codigo_IBS,   
		ISNULL(LTRIM(RTRIM(codigo_institucion)), '') AS codigo_institucion,   
		ISNULL(LTRIM(RTRIM(ind_envio_automatico_listado)), '') AS ind_envio_automatico_listado,
		ISNULL(LTRIM(RTRIM(BloquearCredito)),0) AS BloquearCredito
		FROM [dbo].[Cliente]
		WHERE Codigo_Cliente = @Codigo_cliente
END

GO
/****** Object:  StoredProcedure [dbo].[GetClienteBIFConvenios]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetClienteBIFConvenios]        
	@Nombre_Cliente varchar(200)    
AS  
    
SELECT     
 Codigo_Cliente,    
 Nombre_Cliente,    
 Codigo_IBS = ISNULL(Codigo_IBS,0),    
 NumeroDocumento    
FROM     
 CLIENTE    
WHERE  
 ( Nombre_Cliente LIKE '%' + @Nombre_Cliente + '%' OR @Nombre_Cliente = '*')  
ORDER BY Nombre_Cliente ASC    


GO
/****** Object:  StoredProcedure [dbo].[GetClienteCodigoIBS]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
Creado Por: Magno Sanchez
Fecha Creacion: 06/08/2019
Descripcion: Verifica si codigo IBS existe en la tabla cliente.

*/
CREATE OR ALTER PROCEDURE [dbo].[GetClienteCodigoIBS]
@codigo_IBS int
as
select count(*) as contador from cliente
where codigo_IBS = @codigo_IBS

GO
/****** Object:  StoredProcedure [dbo].[GetClienteCuotaEnvio]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetClienteCuotaEnvio]
@Codigo_Cliente numeric ( 9, 0 ),
@DLAP   CHAR(4),
@DLMP 	CHAR(2),
@DLNE	VARCHAR(75)
AS
BEGIN
	SELECT DISTINCT (DLNE ) 
	FROM CLIENTECUOTA CC INNER JOIN Proceso P 
		ON (CC.Codigo_proceso = P.Codigo_proceso)
	WHERE Codigo_Cliente = @Codigo_Cliente
		AND DLAP	= CASE WHEN RTRIM(@DLAP) = '' THEN DLAP ELSE @DLAP END
		AND DLMP	= CASE WHEN RTRIM(@DLMP) = '' THEN DLMP ELSE @DLMP END
		AND DLNE LIKE CASE WHEN RTRIM( @DLNE  ) = '' THEN '%%' ELSE '%' + @DLNE + '%' END
		AND P.Estado = 'A2'
END


GO
/****** Object:  StoredProcedure [dbo].[getClienteEmailAviso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE OR ALTER PROCEDURE [dbo].[getClienteEmailAviso]
	-- Add the parameters for the stored procedure here
	@idAviso int
AS
BEGIN
	SELECT descripcion_aviso,asunto_mensaje,cuerpo_mensaje 
	from [dbo].[aviso] where id_aviso = @idAviso
END


GO
/****** Object:  StoredProcedure [dbo].[GetClientePorDocumento]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetClientePorDocumento]
(
	@vTipoDocumento		VARCHAR(2),
	@vNumeroDocumento	VARCHAR(12)
)
AS
BEGIN
	SET NOCOUNT ON
		
	SELECT	
			ISNULL(C.[Codigo_Cliente],-1) AS CodigoCliente,
			ISNULL(C.[Nombre_Cliente],'') AS NombreCliente,
			ISNULL(C.[FormatoArchivo],'') AS FormatoArchivo,
			ISNULL(C.[TipoFormatoArchivo],'') AS TipoFormatoArchivo,
			ISNULL(C.[Codigo_Referencia],'') AS CodigoReferencia,
			ISNULL(C.[TipoDocumento],'') AS TipoDocumento,
			ISNULL(C.[NumeroDocumento],'') AS NumeroDocumento,
			ISNULL(C.[CorreoElectronico],'') AS CorreoElectronico,
			ISNULL(C.[UsuarioCreacion],'') AS UsuarioCreacion,
			ISNULL(C.[FormatoArchivoImportacion],'') AS FormatoArchivoImportacion,
			ISNULL(C.[dia_envio_planilla],0) AS DiaEnvioPlanilla,
			ISNULL(C.[dia_cierre_planilla],0) AS DiaCierrePlanilla,
			ISNULL(C.[meses_anticipacion_envio_listado],0) AS MesesAnticipacionEnvioListado,
			ISNULL(C.[dia_corte],0) AS DiaCorte,
			ISNULL(C.[id_funcionario],0) AS IdFuncionario,
			ISNULL(C.[codigo_IBS],0) AS CodigoIBS,
			ISNULL(C.[codigo_institucion],0) AS CodigoInstitucion,
			ISNULL(C.[ind_envio_automatico_listado],'N') AS EnvioAutomaticoListado			
	FROM [dbo].[Cliente] C
	WHERE 
			C.[TipoDocumento] = @vTipoDocumento
		AND C.[NumeroDocumento] = @vNumeroDocumento
		
	SET NOCOUNT OFF
END

GO
/****** Object:  StoredProcedure [dbo].[getClienteProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getClienteProceso]
@proceso AS UNIQUEIDENTIFIER
AS BEGIN

/****************************************************************/
/* Creado por	: Alex Humberto Sanchez Ponce			*/
/* Fecha Crea	: 20080425					*/
/* Descripcion	: Obtener Cliente del Proceso			*/
/* Motivo	: Para elegir q Reporte Usar segun el Cliente	*/
/****************************************************************/

	SELECT 	Codigo_Cliente 
	FROM 	PROCESO
	WHERE	Codigo_proceso	= @proceso

END



GO
/****** Object:  StoredProcedure [dbo].[GetClientes]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetClientes]
@Nombre_Cliente NVARCHAR(100)
As
Begin
/*
*	Obtenemos informacion de los clientes
*/	
	SELECT [Codigo_Cliente], [Nombre_Cliente], 
		[TipoDocumento] =  Descripcion, 
		CodTipoDocumento = c.TipoDocumento,
		[NumeroDocumento], [CorreoElectronico],
		CanDelete = case when exists ( select null from proceso where Codigo_Cliente = c.Codigo_Cliente) then
					cast ( 0 as bit ) 
				else
					cast ( 1 as bit ) 
				end
	FROM [Cliente] C Left Outer JOIN TIPODOCUMENTO T 
			ON (C.[TipoDocumento] = T.Codigo)
	WHERE [Nombre_Cliente] LIKE '%' +  CASE WHEN RTRIM(@Nombre_Cliente) = '' THEN [Nombre_Cliente]
					ELSE @Nombre_Cliente END + '%'
	ORDER BY [Nombre_Cliente]
End

GO
/****** Object:  StoredProcedure [dbo].[GetClientesByDiaEnvio]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetClientesByDiaEnvio]
(
	@intDiaEnvio	INT
)
AS
BEGIN
	SELECT 
			TipoDocumento,
			NumeroDocumento,
			CAST(dia_envio_planilla AS INTEGER) AS dia_envio_planilla
	FROM [dbo].[Cliente]
	WHERE
			ISNULL(CAST(dia_envio_planilla AS INTEGER),0) = @intDiaEnvio
	
END

GO
/****** Object:  StoredProcedure [dbo].[GetClientesDS]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetClientesDS]
@Nombre_Cliente NVarchar(100)
as
Begin
	/*
	* Obtener la informacion de clientes usando el nombre 
	*/
	SELECT [Codigo_Cliente], [Nombre_Cliente], 
		[TipoDocumento] =  Descripcion, CodTipoDocumento = c.TipoDocumento,
		[NumeroDocumento], [CorreoElectronico] 
	FROM [Cliente] C Left Outer Join TIPODOCUMENTO T ON (C.[TipoDocumento] = T.Codigo)
	WHERE [Nombre_Cliente] Like '%' + Case WHEN RTRIM(@Nombre_Cliente) = '' THEN 	
						[Nombre_Cliente]
					  ELSE @Nombre_Cliente END + '%'
end


GO
/****** Object:  StoredProcedure [dbo].[GetClientesDS_MantenimientoCuotas]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetClientesDS_MantenimientoCuotas]  
(@Nombre_Cliente as varchar(1))  
AS  
BEGIN  
  
SELECT D.DLECUN 'CODIGO_CLIENTE',D.DLEDSC 'NOMBRE_CLIENTE',D.DLEAEN 'ANIO_ACTUAL',  
D.DLEMEN 'MES_ACTUAL',D.DLEAPA 'ULTIMO_ANIO_CARGO', D.DLEMPA 'ULTIMO_MES_CARGO',  
M.TIPO_CUOTA 'TIPO_CUOTA' , P.Parametro_ItemValor  
FROM DLEMP D ,MANTENIMIENTO_CUOTA M ,PARAMETRO P  
WHERE D.DLECUN = M.DLECUN  
AND P.Parametro_ItemID = M.TIPO_CUOTA  
order by D.DLEDSC  
END  
GO
/****** Object:  StoredProcedure [dbo].[GetClientesDS_SelectTipoCuota]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetClientesDS_SelectTipoCuota]
(
	@CodigoIBS	VARCHAR(50)
)
AS
BEGIN
	SELECT
		MC.DLECUN,
		MC.TIPO_CUOTA,
		EMP.DLEAEN,
		EMP.DLEMEN
	FROM [dbo].[Mantenimiento_Cuota] MC
	INNER JOIN [dbo].[dlemp] EMP ON MC.DLECUN = EMP.DLECUN
	WHERE
		MC.DLECUN = @CodigoIBS
END

GO
/****** Object:  StoredProcedure [dbo].[GetClientesProcesoEnviado]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetClientesProcesoEnviado]
AS
BEGIN
	SELECT distinct c.Codigo_Cliente, Nombre_Cliente
	FROM CLIENTE C INNER JOIN PROCESO P 
				ON ( C.Codigo_Cliente = P.Codigo_Cliente ) 
	WHERE Estado = 'A2'
	order by Nombre_Cliente
END


GO
/****** Object:  StoredProcedure [dbo].[GetCodigoClienteIBS]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetCodigoClienteIBS]
	
	@codigo_proceso as uniqueidentifier

AS

SELECT distinct
	'CodigoCliente' = DLCC
FROM
	clientecuota C 
WHERE 
	codigo_proceso = @codigo_proceso

GO
/****** Object:  StoredProcedure [dbo].[GetCountRegistrosEnviados]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetCountRegistrosEnviados]
@Codigo_proceso AS UNIQUEIDENTIFIER
AS
BEGIN
	SELECT COUNT (1) COUNTER 
	FROM CLIENTECUOTA 
	WHERE Codigo_proceso = @Codigo_proceso
		AND Pago = 1
END


GO
/****** Object:  StoredProcedure [dbo].[GetDatosArchivoCuotasPorVencerCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*          
 drop procedure GetDatosArchivoCuotasPorVencerCliente          
/*  CREADO: 04/07/2014 NCA, REQ: EA2013-273 OPTIMIZACION PROCESO CONVENIOS:*/      
*/          
          
CREATE OR ALTER PROCEDURE [dbo].[GetDatosArchivoCuotasPorVencerCliente]      
 @codigo_proceso as NVARCHAR(36),      
 @tipo as bit = 0      
AS                  
BEGIN       
 --0. Variables iniciales      
 DECLARE @BANDES VARCHAR(32)   --Descripcion del banco      
 DECLARE @FECGEN VARCHAR(20)   --Fecha de Generacion      
 DECLARE @CODINS VARCHAR(10)   --Codigo de la institucion      
 DECLARE @CUODES DECIMAL(14,2)  --Cuota Descontada, constante=0      
 DECLARE @CUODOB VARCHAR(43)   --Descripcion de cuota doble      
 DECLARE @codigo_cliente numeric(9,0)--Codigo de cliente      
 DECLARE @anio   VARCHAR(4)   --Anio del periodo      
 DECLARE @mes VARCHAR(2)   --Mes del periodo      
       
 --Inicializando variables      
 SET @BANDES = 'BANCO INTERAMERICANO DE FINANZAS'      
 SET @FECGEN = CONVERT(VARCHAR(20),GETDATE(),103)      
 SET @CUODES = 0      
 SET @CUODOB = '(*) Cuota doble descontar de gratificación'      
       
 --Obteniendo Codigo Institucion      
 select @CODINS = isnull(c.codigo_institucion,''),      
     @codigo_cliente = c.codigo_cliente,      
     @anio = anio_periodo,      
     @mes = mes_periodo      
 from proceso p      
  inner join cliente c on p.codigo_cliente = c.codigo_cliente      
 where p.codigo_proceso=@codigo_proceso      
          
 --1. Definimos tablas temporal          
 create table #CuotasPorVencer (        
 DLNP decimal(12,0),      
 DLCUN decimal(9,0),      
 DLCEM varchar(15),      
 DLNE varchar(75),      
 DLOAM decimal(15,2),      
 DLPRI decimal(15,2),      
 DLVCA varchar(4),      
 DLVCM varchar(2),       
 DLCNC1 decimal(3,0),      
 DLNCT decimal(3,0),      
 CPENDIENTES decimal(3,0),      
 DLITF decimal(18,2),      
 DLIC decimal(14,2),      
 DLESD varchar(1),      
 DLCM varchar(20),      
 DLMO varchar(3),      
 FechaCargoCuenta datetime,      
 DLST varchar(20),      
 DLAG decimal(3,0),      
 DLCTA decimal(12,0),      
 GP varchar(40),      
 DLSTS varchar(1),      
 FINICRE varchar(10),      
 DLDNI varchar(15),      
 PLDNPR varchar(15),      
 PLDFDE varchar(1),      
 PLCCD varchar(1),      
 DLMOD VARCHAR(1),      
 FECHA_PREPA VARCHAR(10)/*FECHA PREPAGO*/      
 )      
      
      
 create table #CuotasPorVencerResultado (        
    IDRES integer identity (1,1),      
 DLNP decimal(12,0),      
 DLCUN decimal(9,0),      
 DLCEM varchar(15),      
 DLNE varchar(75),      
 DLOAM decimal(15,2),      
 DLPRI decimal(15,2),      
 DLVCA varchar(4),      
 DLVCM varchar(2),       
 DLCNC1 decimal(3,0),      
 DLNCT decimal(3,0),      
 CPENDIENTES decimal(3,0),      
 DLITF decimal(18,2),      
 DLIC decimal(14,2),      
 DLESD varchar(1),      
 DLCM varchar(20),      
 DLMO varchar(3),      
 FechaCargoCuenta datetime,      
 DLST varchar(20),      
 DLAG decimal(3,0),      
 DLCTA decimal(12,0),      
 GP varchar(40),      
 DLSTS varchar(1),      
 FINICRE varchar(10),      
 DLDNI varchar(15),      
 PLDNPR varchar(15),      
 PLDFDE varchar(1),      
 PLCCD varchar(1),      
 BANDES varchar(43),      
 FECGEN varchar(10),      
 CODINS varchar(10),      
 CUODES decimal(14,2),      
 codigo_cliente numeric(9,0),      
 anio_periodo varchar(4),      
 mes_periodo varchar(2),      
 MODALIDAD VARCHAR(1),      
 FECHA_PREPA VARCHAR(10)      
 )      
      
/*      
 Carga tabla temporal #CuotasPorVencer      
*/      
insert #CuotasPorVencer exec GetListadoCuotasPorVencerCliente @codigo_proceso      
      
/*      
 Trabaja Soles      
*/                 
if exists(select 1 from #CuotasPorVencer where dlmo = 'SOL')      
begin      
 /*      
  Inserta Cuotas en soles      
 */      
 insert into #CuotasPorVencerResultado      
 select DLNP,DLCUN,DLCEM,DLNE,DLOAM,DLPRI,DLVCA,DLVCM,DLCNC1,      
   DLNCT,CPENDIENTES,DLITF,DLIC,DLESD,DLCM,DLMO,FechaCargoCuenta,      
   DLST,DLAG,DLCTA,GP,DLSTS,FINICRE, DLDNI,PLDNPR      
   ,PLDFDE      
   ,PLCCD      
   ,@BANDES AS BANDES, @FECGEN AS FECGEN, @CODINS as CODINS, @CUODES as CUODES      
   ,@codigo_cliente, @anio, @mes      
   ,DLMOD      
   ,FECHA_PREPA        
  from #CuotasPorVencer where dlmo = 'SOL'      
      
 /*      
  Inserta Totalizados en soles      
 */      
 /*insert into #CuotasPorVencerResultado(DLNP,DLCUN,DLCEM,DLNE,DLOAM,DLPRI,DLVCA,DLVCM,DLCNC1,      
   DLNCT,CPENDIENTES,DLITF,DLIC,DLESD,DLCM,DLMO,FechaCargoCuenta,      
   DLST,DLAG,DLCTA,GP,DLSTS,FINICRE, DLDNI,PLDNPR,PLDFDE,PLCCD,BANDES,FECGEN,CODINS,CUODES)      
 select  NULL AS DLNP, NULL AS DLCUN, '' AS DLCEM,      
   'TOTAL MONEDA:' as DLNE,      
   sum(DLOAM) as DLOAM,      
   sum(DLPRI) as DLPRI,      
   '' AS DLVCA, '' AS DLVCM, NULL AS DLCNC1,      
   NULL AS DLNCT, NULL AS CPENDIENTES,      
   sum(DLITF) as DLITF,      
   sum(DLIC) as DLIC,      
   '' AS DLESD, '' AS DLCM, '' AS DLMO, NULL AS FechaCargoCuenta,      
   '' AS DLST, NULL AS DLAG,NULL AS DLCTA, '' AS GP, '' AS DLSTS, '' AS FINICRE, '' AS DLDNI,      
    '' AS PLDNPR, '' AS PLDFDE, '' AS PLCCD      
   ,'' AS BANDES, NULL AS FECGEN, '' as CODINS, NULL as CUODES      
     from #CuotasPorVencer where dlmo = 'SOL'      
     group by dlmo      
 */      
end      
      
/*      
 Trabaja Dolares      
*/        
if exists(select 1 from #CuotasPorVencer where dlmo = 'USD')      
begin      
 /*      
  Inserta Cuotas en dolares      
 */      
 insert into #CuotasPorVencerResultado      
 select DLNP,DLCUN,DLCEM,DLNE,DLOAM,DLPRI,DLVCA,DLVCM,DLCNC1,      
   DLNCT,CPENDIENTES,DLITF,DLIC,DLESD,DLCM,DLMO,FechaCargoCuenta,      
   DLST,DLAG,DLCTA,GP,DLSTS,FINICRE, DLDNI,PLDNPR      
   ,PLDFDE      
   ,PLCCD      
   ,@BANDES AS BANDES, @FECGEN AS FECGEN, @CODINS as CODINS, @CUODES as CUODES      
   ,@codigo_cliente, @anio, @mes      
   ,DLMOD         
   ,FECHA_PREPA       
  from #CuotasPorVencer where dlmo = 'USD'      
      
 /*      
  Inserta Totalizados en dolares      
 */      
 /*insert into #CuotasPorVencerResultado(DLNP,DLCUN,DLCEM,DLNE,DLOAM,DLPRI,DLVCA,DLVCM,DLCNC1,      
   DLNCT,CPENDIENTES,DLITF,DLIC,DLESD,DLCM,DLMO,FechaCargoCuenta,      
   DLST,DLAG,DLCTA,GP,DLSTS,FINICRE, DLDNI,PLDNPR,PLDFDE,PLCCD,BANDES,FECGEN,CODINS,CUODES)      
 select  NULL AS DLNP, NULL AS DLCUN, '' AS DLCEM,      
   'TOTAL MONEDA:' as DLNE,      
   sum(DLOAM) as DLOAM,      
   sum(DLPRI) as DLPRI,      
   '' AS DLVCA, '' AS DLVCM, NULL AS DLCNC1,      
   NULL AS DLNCT, NULL AS CPENDIENTES,      
   sum(DLITF) as DLITF,      
   sum(DLIC) as DLIC,      
   '' AS DLESD, '' AS DLCM, '' AS DLMO, NULL AS FechaCargoCuenta,      
   '' AS DLST, NULL AS DLAG,NULL AS DLCTA, '' AS GP, '' AS DLSTS, '' AS FINICRE, '' AS DLDNI,      
    '' AS PLDNPR, '' AS PLDFDE, '' AS PLCCD      
   ,'' AS BANDES, NULL AS FECGEN, '' as CODINS, NULL as CUODES      
     from #CuotasPorVencer where dlmo = 'USD'      
     group by dlmo      
 */      
end      
      
/*      
 Inserta Descripcion Cuota Doble      
*/      
 /*if exists(select 1 from #CuotasPorVencer where plccd = 'S')      
 begin      
  insert into #CuotasPorVencerResultado(DLNP,DLCUN,DLCEM,DLNE,DLOAM,DLPRI,DLVCA,DLVCM,DLCNC1,      
   DLNCT,CPENDIENTES,DLITF,DLIC,DLESD,DLCM,DLMO,FechaCargoCuenta,      
   DLST,DLAG,DLCTA,GP,DLSTS,FINICRE, DLDNI,PLDNPR,PLDFDE,PLCCD,BANDES,FECGEN,CODINS,CUODES)      
  select  NULL AS DLNP, NULL AS DLCUN, '' AS DLCEM,      
    '' as DLNE,      
    NULL as DLOAM,      
    NULL as DLPRI,      
    '' AS DLVCA, '' AS DLVCM, NULL AS DLCNC1,      
    NULL AS DLNCT, NULL AS CPENDIENTES,      
    NULL as DLITF,      
    NULL as DLIC,      
    '' AS DLESD, '' AS DLCM, '' AS DLMO, NULL AS FechaCargoCuenta,      
    '' AS DLST, NULL AS DLAG,NULL AS DLCTA, '' AS GP, '' AS DLSTS, '' AS FINICRE, '' AS DLDNI,      
     '' AS PLDNPR, '' AS PLDFDE, '' AS PLCCD      
    ,@CUODOB AS BANDES, NULL AS FECGEN, '' as CODINS,       
    NULL as CUODES      
 end      
 */      
      
/*      
 Verifica Si Tipo es proceso 1:BATCH      
 (0:ONLINE esta por defecto)      
*/      
DECLARE @FECHA_PROCESO_ATERIOR DATETIME      
SELECT TOP 1   @FECHA_PROCESO_ATERIOR = Fecha_CargaAS400 FROM [dbo].[Proceso] WHERE Codigo_CLIENTE =(SELECT CODIGO_CLIENTE FROM [dbo].[Proceso] WHERE Codigo_proceso = @codigo_proceso) AND  FECHA_CARGAAS400 < (SELECT Fecha_CargaAS400 FROM [dbo].[Proceso]  
  
   
WHERE Codigo_proceso = @codigo_proceso) ORDER BY Fecha_CargaAS400 DESC      
--SELECT @FECHA_PROCESO_ATERIOR      
 if @tipo = 1      
 begin       
  /*      
   1. Inicializa tabla temporal tmp_CuotasPorVencerResultado      
  */      
  delete from tmp_CuotasPorVencerResultado      
      
  /*      
   2. Inserta informacion obtenida      
  */      
  insert into tmp_CuotasPorVencerResultado      
  select DLNP,DLCUN,DLCEM,DLNE,DLOAM,DLPRI,DLVCA,DLVCM,DLCNC1,      
   DLNCT,CPENDIENTES,DLITF,DLIC,DLESD,DLCM,DLMO,FechaCargoCuenta,      
   DLST,DLAG,DLCTA,GP,DLSTS,FINICRE, DLDNI,PLDNPR      
   ,case when PLDFDE='N' then 'NUEVO' when PLDFDE = 'S' then 'AMPLIACION' else PLDFDE end AS PLDFDE      
   ,CASE PLCCD WHEN 'S' THEN '*' ELSE '' END AS PLCCD,      
   BANDES,FECGEN,CODINS,CUODES,CODIGO_CLIENTE, ANIO_PERIODO, MES_PERIODO      
   ,case when MODALIDAD='N' then 'NUEVO' when MODALIDAD = 'S' then 'AMPLIACION' when MODALIDAD = '' AND (CONVERT(DATETIME , FECHA_PREPA) >= isnull(@FECHA_PROCESO_ATERIOR ,CONVERT(DATETIME , '19000101') ))  then  'MODIFICADO'  else MODALIDAD end AS MODALIDAD         
  from #CuotasPorVencerResultado      
      
  --No hubo Error    
 /*    
  3.a.2 Registar Nomina    
 */    
 begin try    
  exec up_RegistrarNomina  @codigo_proceso    
 end try    
 begin catch    
    
 end catch    
       
 end    
      
select DLNP,DLCUN,DLCEM,DLNE,DLOAM,DLPRI,DLVCA,DLVCM,DLCNC1,      
   DLNCT,CPENDIENTES,DLITF,DLIC,DLESD,DLCM,DLMO,CONVERT(VARCHAR(20),FechaCargoCuenta,103) as FechaCargoCuenta,      
   DLST,DLAG,DLCTA,GP,DLSTS,FINICRE, DLDNI,PLDNPR      
   ,case when PLDFDE='N' then 'NUEVO' when PLDFDE = 'S' then 'AMPLIACION' else PLDFDE end AS PLDFDE      
   ,CASE PLCCD WHEN 'S' THEN '*' ELSE '' END AS PLCCD,      
   BANDES,FECGEN,CODINS,CUODES,CODIGO_CLIENTE, ANIO_PERIODO, MES_PERIODO      
   ,case when MODALIDAD='N' then 'NUEVO' when MODALIDAD = 'S' then 'AMPLIACION' when MODALIDAD = '' AND (CONVERT(DATETIME , FECHA_PREPA) >= isnull(@FECHA_PROCESO_ATERIOR ,CONVERT(DATETIME , '19000101') )) then 'MODIFICADO'  else MODALIDAD end AS MODALIDAD
  
    
      
  from #CuotasPorVencerResultado      
                 
END           
          
/*          
      
          
*/      
/*      
PRUEBAS UNITARIAS      
*****************      
      
EXEC GetDatosArchivoCuotasPorVencerCliente '680E7BBA-883F-4C3D-BCA2-CA2E2F2825C4'      
EXEC GetDatosArchivoCuotasPorVencerCliente '72eeb24e-7af4-4f7e-86e3-6a9e90bf7784', 1      
eXEC GetListadoCuotasPorVencerCliente  '01E39DB1-FE82-4752-82A9-12495AAC6296'      
exec GetListadoCuotasPorVencerCliente_TEMP '9FD73A66-E4A6-4D2B-A4BE-BCBE34B591AB'      
SELECT * FROM PROCESO WHERE CODIGO_PROCESO='72eeb24e-7af4-4f7e-86e3-6a9e90bf7784'      
SELECT * FROM CLIENTE WHERE CODIGO_CLIENTE='190828398'      
sp_help dlcre      
SP_HELP cliente      
select * from cliente      
select isnull(c.codigo_institucion,'') from proceso p      
 inner join cliente c on p.codigo_cliente = c.codigo_cliente      
where p.codigo_proceso='72eeb24e-7af4-4f7e-86e3-6a9e90bf7784'      
      
sp_helptext GetDatosArchivoCuotasPorVencerCliente      
Select * from tmp_CuotasPorVencerResultado      
*/
GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTexto]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTexto]
@codigo_Proceso as uniqueidentifier
AS
BEGIN
-- Obtener los datos de los archivos de texto de forma leible
-- La cantidad de columnas varia de acuerdo al procedimiento almacenado que se procese al final
	declare @FormatoArchivoImportacion varchar(10)
	declare @sql as varchar (1000)
	SELECT @FormatoArchivoImportacion = FormatoArchivoImportacion 
	FROM PROCESO p 
		inner join Cliente c on ( p.Codigo_Cliente = c.Codigo_Cliente ) 
	WHERE CODIGO_PROCESO = @codigo_Proceso

	set @sql= 'execute getDatosArchivoTexto'+@FormatoArchivoImportacion + ' ''' + cast ( @codigo_Proceso as varchar(36)) + '''' 
	exec ( @sql )

END




GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoBusqueda]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoBusqueda]	
@codigo_Proceso as uniqueidentifier,
@numeropagare as varchar(20)
AS
BEGIN

declare @apellido_paterno as varchar(25)
/*SELECT @codigo_proceso = 'd2113fde-7358-4572-95a8-f00f91af7126',
@numeropagare = '233100088613'
*/
SELECT @apellido_paterno = DLPA FROM CLIENTECUOTA 
WHERE codigo_proceso = @codigo_proceso 
	AND DLNP = @numeropagare



-- Obtener los datos de los archivos de texto de forma leible
-- La cantidad de columnas varia de acuerdo al procedimiento almacenado que se procese al final
	declare @FormatoArchivoImportacion varchar(10)
	declare @sql as varchar (1000)
	SELECT @FormatoArchivoImportacion = FormatoArchivoImportacion 
	FROM PROCESO p 
		inner join Cliente c on ( p.Codigo_Cliente = c.Codigo_Cliente ) 
	WHERE CODIGO_PROCESO = @codigo_Proceso

	set @sql= 'execute getDatosArchivoTextoBusqueda'+@FormatoArchivoImportacion + ' ''' + cast ( @codigo_Proceso as varchar(36)) + ''', ''' + REPLACE ( @apellido_paterno, '''', '''''') + '''' 
	--PRINT @sql
	exec ( @sql )

END


GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoBusquedaDIREL]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoBusquedaDIREL]
@codigo_Proceso as uniqueidentifier, 
@apellido_paterno AS VARCHAR ( 25 ) 
as
begin


		-- 'Terccrep' 
		select  
		dateCode as [Id Proceso], orden as [Linea],
		substring ( lineainformacion, 1, 10 ) as [Numero Pagare],
	--	substring ( lineainformacion, 14, 6 ), 
	--	substring ( lineainformacion, 24, 1 ), 
		substring ( lineainformacion, 27, 40 ) as Nombre,  
		cast ( ltrim(rtrim(replace ( substring ( lineainformacion, 67, 11 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento]
		from TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso 
		--and dateCode = @dateCode
			and isnumeric ( substring ( lineainformacion, 1, 10 ) ) = 1
			and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''

			AND ISNUMERIC ( substring ( lineainformacion, 67, 11 ) ) = 1
			AND PROCESA = 0 
			AND substring ( lineainformacion, 27, 40 ) LIKE '%' + @apellido_paterno + '%'
--		order by orden
	
		union 
		-- ben
		select  
		dateCode as [Id Proceso], orden as [Linea],
		substring ( lineainformacion, 10, 10 ) as [Numero Pagare],
	--	substring ( lineainformacion, 14, 6 ), 
	--	substring ( lineainformacion, 24, 1 ), 
		substring ( lineainformacion, 36, 32 ) as Nombre,  
		cast ( ltrim(rtrim(replace ( substring ( lineainformacion, 83, 8 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento]
		from TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso 
			--and dateCode = @dateCode
			and isnumeric ( substring ( lineainformacion, 10, 10 ) ) = 1
			--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
				
			AND ISNUMERIC ( substring ( lineainformacion, 83, 8 ) )   = 1

			AND PROCESA = 0 
			AND substring ( lineainformacion, 36, 32 ) LIKE '%' + @apellido_paterno + '%'
	
		UNION 

		-- rem009
		select  
		dateCode as [Id Proceso], orden as [Linea],
		substring ( lineainformacion , 13 , 10 ) as [Numero Pagare],
	--	substring ( lineainformacion, 14, 6 ), 
	--	substring ( lineainformacion, 24, 1 ), 
		substring ( lineainformacion , 36 , 32 ) as Nombre,  
		cast ( ltrim(rtrim(replace ( substring ( lineainformacion , 89 , 7 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento]
		from TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso 
			--and dateCode = @dateCode
			and isnumeric ( substring ( lineainformacion , 13 , 10 ) ) = 1
			and isnumeric ( substring ( lineainformacion , 89 , 7 )) = 1
			--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
			AND PROCESA = 0 
			AND substring ( lineainformacion, 36, 32 ) LIKE '%' + @apellido_paterno + '%'

		--order by orden

		UNION 
		-- REM100
		select  
		dateCode as [Id Proceso], orden as [Linea],
		substring ( lineainformacion ,1, 10 ) as [Numero Pagare],
	--	substring ( lineainformacion, 14, 6 ), 
	--	substring ( lineainformacion, 24, 1 ), 
		substring ( lineainformacion ,35, 50 ) as Nombre,  
		cast ( ltrim(rtrim(replace ( substring ( lineainformacion ,100, 9 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento]
		from TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso 
			--and dateCode = @dateCode
			and isnumeric ( substring ( lineainformacion ,1, 10 ) ) = 1
			and isnumeric ( substring ( lineainformacion ,100, 9 )) = 1
			--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
			AND PROCESA = 0 
			AND substring ( lineainformacion, 35, 50 ) LIKE '%' + @apellido_paterno + '%'
		ORDER BY dateCode desc, orden

end




GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoBusquedaDRIT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoBusquedaDRIT]
@codigo_Proceso as uniqueidentifier, 
@apellido_paterno AS VARCHAR ( 25 )
as
BEGIN
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/
	SELECT  
	dateCode as [Id Proceso], Orden as Linea,
	SUBSTRING ( lineainformacion , 24, 40 ) Nombre, 
		SUBSTRING ( lineainformacion , 64, 9 )  Monto
	FROM TemporalArchivoTexto 
	WHERE codigo_proceso = @codigo_Proceso
		AND ISNUMERIC ( SUBSTRING ( lineainformacion , 64, 9 )   ) = 1
		AND 
		(SUBSTRING ( lineainformacion , 24, 40 ) <> 'TERAMERICANO DE FINANZAS ='
		OR
		SUBSTRING ( lineainformacion , 24, 40 ) NOT LIKE '%FINANZAS%'
		)
	AND substring ( lineainformacion, 24, 40 ) LIKE '%' + @apellido_paterno + '%'
	AND PROCESA = 0 
		ORDER BY dateCode desc, orden
END




GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoBusquedaESSALUD]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoBusquedaESSALUD]
@codigo_Proceso as uniqueidentifier, 
@apellido_paterno AS VARCHAR ( 25 )
as
BEGIN
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/
	SELECT 
	dateCode as [Id Proceso], orden as [Linea],
	--cast (substring ( lineainformacion , 1, 8 ) as numeric ) as [Numero Pagare],
	'' as [Numero Pagare],
	cast (substring ( lineainformacion , 1, 8 ) as numeric ) as [Codigo Modular],
	substring ( lineainformacion, 9 , 45 ) as Nombre, 
	cast (
	case when len ( substring ( lineainformacion , 55, 7 ) ) > 2 AND ISNUMERIC ( substring ( lineainformacion , 55, 7 ) ) = 1 then
		substring(substring ( lineainformacion , 55, 7 ), 1, len(substring ( lineainformacion , 55, 7 ))  - 2 ) + '.' 
		+  substring(substring ( lineainformacion , 55, 7 ),  len(substring ( lineainformacion , 55, 7 ))  - 1, len(substring ( lineainformacion , 55, 7 )))  
				when len ( substring ( lineainformacion , 55, 7 ) ) <= 2 AND ISNUMERIC ( substring ( lineainformacion , 55, 7 ) ) = 1 then
					substring ( lineainformacion , 55, 7 )
				when ISNUMERIC ( substring ( lineainformacion , 55, 7 ) ) = 0 then	
					'0'
				end
		as decimal(14,2) ) as [Monto Descuento]
	FROM TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso--'DC9002F0-2510-4038-B542-2B4A0019EE08'
		--and tat.dateCode = @dateCode--'20060706121109'
		AND PROCESA = 0 
		AND substring ( lineainformacion, 9, 45 ) LIKE '%' + @apellido_paterno + '%'
		ORDER BY dateCode desc, orden
END




GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoBusquedaMINSA]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoBusquedaMINSA]
@codigo_Proceso as uniqueidentifier, 
@apellido_paterno AS VARCHAR ( 25 )
as
BEGIN

/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/
	select 
	dateCode as [Id Proceso], Orden as Linea,
	replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ')  Nombre,
	cast (
	case when len ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) > 2 AND 
			ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 1 then
	
			substring(rtrim(ltrim(substring (lineainformacion , 66, 5 ))), 1, len(rtrim(ltrim(substring ( lineainformacion , 66, 5 ))))  - 2 ) 
			+ '.' +  substring(rtrim(ltrim(substring ( lineainformacion , 66, 5))),  len(rtrim(ltrim(substring ( lineainformacion , 66, 5 ))))  - 1, len(rtrim(ltrim(substring ( lineainformacion , 66, 5 )))))  
	
			when len ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) <= 2 AND ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 1 then
				ltrim(rtrim(substring ( lineainformacion , 66, 5 )))
			when ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 0 then	
				'0'
			end
	as decimal(14,2) ) as [Monto Descuento]
	from TemporalArchivoTexto 
	where codigo_proceso = @codigo_Proceso
		AND Procesa = 0 
		and rtrim ( substring ( lineainformacion , 12, 54 ) ) <> ''
		AND replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ') LIKE '%' + RTRIM(@apellido_paterno) + '%'
		ORDER BY dateCode desc, orden
END




GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoDIREL]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoDIREL]
@codigo_Proceso as uniqueidentifier
as
begin

/*	DECLARE @tipoArchivo as varchar ( 20)
	select @tipoArchivo = SUBSTRING ( lineainformacion , 1, 8) 
	from TemporalArchivoTexto 
	WHERE 
		Codigo_proceso = @codigo_Proceso
		and dateCode = @dateCode
		AND orden = 2
	ORDER BY ORDEN
*/
/*	if  @tipoArchivo  = 'Terccrep' 
	begin


		select  
		dateCode as [Id Proceso], orden as [Linea],
		substring ( lineainformacion, 1, 10 ) as [Numero Pagare],
	--	substring ( lineainformacion, 14, 6 ), 
	--	substring ( lineainformacion, 24, 1 ), 
		substring ( lineainformacion, 27, 40 ) as Nombre,  
		cast ( ltrim(rtrim(replace ( substring ( lineainformacion, 67, 11 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento]
		from TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso 
		--and dateCode = @dateCode
			and isnumeric ( substring ( lineainformacion, 1, 10 ) ) = 1
			and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
			AND PROCESA = 0 
		order by orden

	end
	ELSE
	begin	

		select @tipoArchivo = SUBSTRING ( lineainformacion , 1, 3) 
		from TemporalArchivoTexto 
		WHERE 
			Codigo_proceso = @codigo_Proceso
			and dateCode = @dateCode
			AND orden = 3
		ORDER BY ORDEN


		if @tipoArchivo  = 'BEN'
		BEGIN

			select  
			dateCode as [Id Proceso], orden as [Linea],
			substring ( lineainformacion, 10, 10 ) as [Numero Pagare],
		--	substring ( lineainformacion, 14, 6 ), 
		--	substring ( lineainformacion, 24, 1 ), 
			substring ( lineainformacion, 36, 32 ) as Nombre,  
			cast ( ltrim(rtrim(replace ( substring ( lineainformacion, 83, 8 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento]
			from TemporalArchivoTexto 
			where codigo_proceso = @codigo_Proceso 
				and dateCode = @dateCode
				and isnumeric ( substring ( lineainformacion, 10, 10 ) ) = 1
				--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
				AND PROCESA = 0 
			order by orden

		END
	
	end
*/
		-- 'Terccrep' 
		select  
		dateCode as [Id Proceso], orden as [Linea],
		substring ( lineainformacion, 1, 10 ) as [Numero Pagare],
	--	substring ( lineainformacion, 14, 6 ), 
	--	substring ( lineainformacion, 24, 1 ), 
		substring ( lineainformacion, 27, 40 ) as Nombre,  
		cast ( ltrim(rtrim(replace ( substring ( lineainformacion, 67, 11 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento]
		from TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso 
		--and dateCode = @dateCode
			and isnumeric ( substring ( lineainformacion, 1, 10 ) ) = 1
			and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''

			AND ISNUMERIC ( substring ( lineainformacion, 67, 11 ) ) = 1
			AND PROCESA = 0 
			-----20070503 SOLO CARGAR LA INFORMACION DE QUE TENGA LA MARCA 'REGISTRO COBRADO'
			and ltrim(rtrim( substring ( lineainformacion , 79, 20)  )) = 'Registro Cobrado'
--		order by orden
	
		union 
		-- ben
		select  
		dateCode as [Id Proceso], orden as [Linea],
		substring ( lineainformacion, 10, 10 ) as [Numero Pagare],
	--	substring ( lineainformacion, 14, 6 ), 
	--	substring ( lineainformacion, 24, 1 ), 
		substring ( lineainformacion, 36, 32 ) as Nombre,  
		cast ( ltrim(rtrim(replace ( substring ( lineainformacion, 83, 8 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento]
		from TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso 
			--and dateCode = @dateCode
			and isnumeric ( substring ( lineainformacion, 10, 10 ) ) = 1
			--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
				
			AND ISNUMERIC ( substring ( lineainformacion, 83, 8 ) )   = 1

			AND PROCESA = 0 
	
		UNION 

		-- rem009
		select  
		dateCode as [Id Proceso], orden as [Linea],
		substring ( lineainformacion , 13 , 10 ) as [Numero Pagare],
	--	substring ( lineainformacion, 14, 6 ), 
	--	substring ( lineainformacion, 24, 1 ), 
		substring ( lineainformacion , 36 , 32 ) as Nombre,  
		cast ( ltrim(rtrim(replace ( substring ( lineainformacion , 87, 9 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento]
		from TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso 
			--and dateCode = @dateCode
			and isnumeric ( substring ( lineainformacion , 13 , 10 ) ) = 1
			and isnumeric ( substring ( lineainformacion , 87, 9 )) = 1
			--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
			AND PROCESA = 0 
		--order by orden

		UNION 
		-- REM100
		select  
		dateCode as [Id Proceso], orden as [Linea],
		substring ( lineainformacion ,1, 10 ) as [Numero Pagare],
	--	substring ( lineainformacion, 14, 6 ), 
	--	substring ( lineainformacion, 24, 1 ), 
		substring ( lineainformacion ,35, 50 ) as Nombre,  
		cast ( ltrim(rtrim(replace ( substring ( lineainformacion ,100, 9 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento]
		from TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso 
			--and dateCode = @dateCode
			and isnumeric ( substring ( lineainformacion ,1, 10 ) ) = 1
			and isnumeric ( substring ( lineainformacion ,100, 9 )) = 1
			--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
			AND PROCESA = 0 
			and ISNUMERIC ( substring ( lineainformacion, 67, 11 ) ) = 0 -- SE CRUZA CON INFORMACION DE ARCHIVO Terccrep
		ORDER BY dateCode desc, orden

/*select
 substring ( lineainformacion ,1, 10 ) ,  
substring ( lineainformacion ,35, 50 ), 
substring ( lineainformacion ,100, 9 ) 
from temporalarchivotexto where 
codigo_proceso = 'b2227ec1-92ec-48e6-aa0c-03afcd864be7' 
and datecode = '20060809123217'
and isnumeric ( substring ( lineainformacion ,1, 10 ) )  = 1
and rtrim ( substring ( lineainformacion ,100, 50 ) ) <> ''
order by orden
*/
end



GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoDRIT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoDRIT]
@codigo_Proceso as uniqueidentifier
as
BEGIN
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/
	SELECT  
	dateCode as [Id Proceso], Orden as Linea,
	SUBSTRING ( lineainformacion , 24, 40 ) Nombre, 
		SUBSTRING ( lineainformacion , 64, 9 )  Monto
	FROM TemporalArchivoTexto 
	WHERE codigo_proceso = @codigo_Proceso
		AND ISNUMERIC ( SUBSTRING ( lineainformacion , 64, 9 )   ) = 1
		AND 
		(SUBSTRING ( lineainformacion , 24, 40 ) <> 'TERAMERICANO DE FINANZAS ='
		OR
		SUBSTRING ( lineainformacion , 24, 40 ) NOT LIKE '%FINANZAS%'
		)
	AND PROCESA = 0 
		ORDER BY dateCode desc, orden
END





GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoESSALUD]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoESSALUD]      
@codigo_Proceso as uniqueidentifier      
as      
BEGIN      
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/      
 SELECT       
 dateCode as [Id Proceso],     
 orden as [Linea],       
 --'' as [Numero Pagare],      
 cast (substring ( lineainformacion , 1, 7 ) as numeric ) as [Codigo Modular],      
 (ltrim(rtrim(substring(lineainformacion, 9, 20))) + ' ' + ltrim(rtrim(substring(lineainformacion, 30, 20 ))) + ' ' + ltrim(rtrim(substring(lineainformacion, 51, 20)))) as Nombre,
 CONVERT(DECIMAL(14,2), ltrim(rtrim(substring(lineainformacion, 72, 10)))) AS [Monto Descuento]        
 FROM TemporalArchivoTexto       
  where codigo_proceso = @codigo_Proceso AND     
  PROCESA = 0 and     
  ISNUMERIC(SUBSTRING(lineainformacion, 1, 7)) = 1        
  ORDER BY dateCode desc, orden      
END      
GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoHACHULUC]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20130117				*/
/* Observacion	: Recupera datos no procesados de Archivo para Hosp. 	*/
/*     		: De Apoyo de Chulucanas				*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoHACHULUC]
@codigo_Proceso as uniqueidentifier
AS BEGIN

	/*********************************************************************************************/
	/* Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados */
	/*********************************************************************************************/

	SELECT	dateCode	AS [Id Proceso], 
		Orden		AS Linea,
		REPLACE (RTRIM(SUBSTRING(lineainformacion, 13,50)) , '?', 'Ñ')  		AS Nombre,
		CONVERT(DECIMAL(14,2), REPLACE(REPLACE(SUBSTRING(lineainformacion , 68, 10),' ',''), ',','.')) AS [Monto Descuento]
	FROM	TemporalArchivoTexto 
	WHERE	Codigo_proceso	= @codigo_Proceso	AND
		Procesa 	= 0 			AND
		ISNUMERIC(SUBSTRING(lineainformacion, 4, 6)) = 1
	ORDER BY dateCode DESC, orden

END
GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoHAISROSA]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20130117				*/
/* Observacion	: Recupera datos no procesados de Archivo para Hosp. 	*/
/*     		: de Apoyo I Santa Rosa					*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoHAISROSA]
@codigo_Proceso as uniqueidentifier
AS BEGIN

	/*********************************************************************************************/
	/* Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados */
	/*********************************************************************************************/

	SELECT	dateCode	AS [Id Proceso], 
		Orden		AS Linea,
		REPLACE (RTRIM(SUBSTRING(lineainformacion, 13,50)) , '?', 'Ñ')  		AS Nombre,
		CONVERT(DECIMAL(14,2), REPLACE(REPLACE(SUBSTRING(lineainformacion , 68, 10),' ',''), ',','.')) AS [Monto Descuento]
	FROM	TemporalArchivoTexto 
	WHERE	Codigo_proceso	= @codigo_Proceso	AND
		Procesa 	= 0 			AND
		ISNUMERIC(SUBSTRING(lineainformacion, 4, 6)) = 1
	ORDER BY dateCode DESC, orden

END
GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoHNSMERCED]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20121119				*/
/* Observacion	: Recupera datos no procesados de Archivo para Hosp. 	*/
/*     		: Apoyo Nuestra Señora de las Mercedes 			*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoHNSMERCED]
@codigo_Proceso as uniqueidentifier
AS BEGIN

	/*********************************************************************************************/
	/* Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados */
	/*********************************************************************************************/

	SELECT	dateCode	AS [Id Proceso], 
		Orden		AS Linea,
		REPLACE (RTRIM(SUBSTRING(lineainformacion, 13,45)) , '?', 'Ñ')  		AS Nombre,
		CONVERT(DECIMAL(14,2), REPLACE(SUBSTRING(lineainformacion , 67, 11 ), ',','.')) AS [Monto Descuento]
	FROM	TemporalArchivoTexto 
	WHERE	Codigo_proceso	= @codigo_Proceso	AND
		Procesa 	= 0 			AND
		ISNUMERIC(SUBSTRING(lineainformacion, 1, 6)) = 1
	ORDER BY dateCode DESC, orden

END
GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoLuciano]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20121119				*/
/* Observacion	: Recupera datos no procesados de Archivo para Luciano 	*/
/*     		: 							*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoLuciano]
@codigo_Proceso as uniqueidentifier
AS BEGIN

	/*********************************************************************************************/
	/* Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados */
	/*********************************************************************************************/

	SELECT	dateCode	AS [Id Proceso], 
		Orden		AS Linea,
		REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 17, 40))) ,'?','Ñ') ,'  ',' '), '-',' ')	AS Nombre,
		CONVERT(DECIMAL(14,2), REPLACE(SUBSTRING(lineainformacion , 66, 11 ), ',',''))	 				AS [Monto Descuento]
	FROM	TemporalArchivoTexto 
	WHERE	Codigo_proceso	= @codigo_Proceso	AND
		Procesa 	= 0 			AND
		ISNUMERIC(SUBSTRING(lineainformacion, 1, 4)) = 1
	ORDER BY dateCode DESC, orden

END



GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoMINSA]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoMINSA]
@codigo_Proceso as uniqueidentifier
as
BEGIN
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/
	select 
	dateCode as [Id Proceso], Orden as Linea,
	replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ')  Nombre,
	cast (
	case when len ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) > 2 AND 
			ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 1 then
	
			substring(rtrim(ltrim(substring (lineainformacion , 66, 5 ))), 1, len(rtrim(ltrim(substring ( lineainformacion , 66, 5 ))))  - 2 ) 
			+ '.' +  substring(rtrim(ltrim(substring ( lineainformacion , 66, 5))),  len(rtrim(ltrim(substring ( lineainformacion , 66, 5 ))))  - 1, len(rtrim(ltrim(substring ( lineainformacion , 66, 5 )))))  
	
			when len ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) <= 2 AND ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 1 then
				ltrim(rtrim(substring ( lineainformacion , 66, 5 )))
			when ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 0 then	
				'0'
			end
	as decimal(14,2) ) as [Monto Descuento]
	from TemporalArchivoTexto 
	where codigo_proceso = @codigo_Proceso
		AND Procesa = 0 
	and rtrim ( substring ( lineainformacion , 12, 54 ) ) <> ''
		ORDER BY dateCode desc, orden
END





GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoSDBF]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoSDBF]
@codigo_Proceso as uniqueidentifier
as
BEGIN
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/
	SELECT	dateCode	AS [Id Proceso], 
		Orden		AS Linea,
		REPLACE (RTRIM(SUBSTRING(lineainformacion, 32,50)) , '?', 'Ñ')  AS Nombre,
		CONVERT(DECIMAL(14,2),LTRIM(SUBSTRING(lineainformacion,16,15))) AS [Monto Descuento]
	FROM	TemporalArchivoTexto 
	WHERE	Codigo_proceso	= @codigo_Proceso	AND
		Procesa 	= 0 
	ORDER BY dateCode desc, orden
END


GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoUESMCHULU]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20130110				*/
/* Observacion	: Recupera datos no procesados de Archivo para Unidad 	*/
/*     		: Ejecutora 403 Salud Morropon Chulucanas		*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoUESMCHULU]
@codigo_Proceso as uniqueidentifier
AS BEGIN

	/*********************************************************************************************/
	/* Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados */
	/*********************************************************************************************/

	SELECT	dateCode	AS [Id Proceso], 
		Orden		AS Linea,
		REPLACE (RTRIM(SUBSTRING(lineainformacion, 13,45)) , '?', 'Ñ')  		AS Nombre,
		CONVERT(DECIMAL(14,2), REPLACE(REPLACE(SUBSTRING(lineainformacion , 67, 11),' ',''), ',','.')) AS [Monto Descuento]
	FROM	TemporalArchivoTexto 
	WHERE	Codigo_proceso	= @codigo_Proceso	AND
		Procesa 	= 0 			AND
		ISNUMERIC(SUBSTRING(lineainformacion, 1, 6)) = 1
	ORDER BY dateCode DESC, orden

END
GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoUPAO]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/    
/* Fecha Modif : BANBIF(CRP) - 20130808    */    
/* Observacion : Recupera datos no procesados de Archivo para UPAO*/    
/************************************************************************/    
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoUPAO]    
@codigo_Proceso as uniqueidentifier    
AS BEGIN    
    
 /*********************************************************************************************/    
 /* Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados */    
 /*********************************************************************************************/    
    
 SELECT dateCode AS [Id Proceso],     
  Orden  AS Linea,    
  REPLACE (RTRIM(SUBSTRING(lineainformacion, 19,45)) , '?', 'Ñ')    AS Nombre,    
  CONVERT(DECIMAL(14,2), REPLACE(REPLACE(SUBSTRING(lineainformacion , 64, 11),' ',''), ',','')) AS [Monto Descuento]    
 FROM TemporalArchivoTexto     
 WHERE Codigo_proceso = @codigo_Proceso AND    
  Procesa  = 0    AND    
  ISNUMERIC(SUBSTRING(lineainformacion, 13, 5)) = 1    
 ORDER BY dateCode DESC, orden    
    
END
GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoUTES]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoUTES]      
@codigo_Proceso as uniqueidentifier      
as      
BEGIN      
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/      
 select       
 dateCode as [Id Proceso], Orden as Linea,      
 replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ')  Nombre,      
 cast (      
 case when len ( rtrim(ltrim(substring ( lineainformacion , 71, 7 ))) ) > 2 AND       
   ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 71, 7 ))) ) = 1 then      
       
   substring(rtrim(ltrim(substring (lineainformacion , 71, 7 ))), 1, len(rtrim(ltrim(substring ( lineainformacion , 71, 7 ))))  - 3 )       
   + '.' +  substring(rtrim(ltrim(substring ( lineainformacion , 71, 7))),  len(rtrim(ltrim(substring ( lineainformacion , 71, 7 ))))  - 1, len(rtrim(ltrim(substring ( lineainformacion , 71, 7 )))))        
       
   when len ( rtrim(ltrim(substring ( lineainformacion , 71, 7 ))) ) <= 2 AND ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 71, 7 ))) ) = 1 then      
    ltrim(rtrim(substring ( lineainformacion , 71, 7 )))      
   when ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 71, 7 ))) ) = 0 then       
    '0'      
   end      
 as decimal(14,2) ) as [Monto Descuento]      
 from TemporalArchivoTexto       
 where codigo_proceso = @codigo_Proceso      
  AND Procesa = 0       
 and rtrim ( substring ( lineainformacion , 12, 54 ) ) <> ''      
  ORDER BY dateCode desc, orden      
END      
      



GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoUTESNO6]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/  
/* Fecha Modif : BANBIF(CRP) - 20130808    */  
/* Observacion : Recupera datos no procesados de Archivo para UTES 06*/  
/************************************************************************/  
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoUTESNO6]  
@codigo_Proceso as uniqueidentifier  
AS BEGIN  
  
 /*********************************************************************************************/  
 /* Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados */  
 /*********************************************************************************************/  
  
 SELECT dateCode AS [Id Proceso],   
  Orden  AS Linea,  
  REPLACE (RTRIM(SUBSTRING(lineainformacion, 13,45)) , '?', 'Ñ')    AS Nombre,  
  CONVERT(DECIMAL(14,2), REPLACE(REPLACE(SUBSTRING(lineainformacion , 67, 11),' ',''), ',','.')) AS [Monto Descuento]  
 FROM TemporalArchivoTexto   
 WHERE Codigo_proceso = @codigo_Proceso AND  
  Procesa  = 0    AND  
  ISNUMERIC(SUBSTRING(lineainformacion, 1, 6)) = 1  
 ORDER BY dateCode DESC, orden  
  
END
GO
/****** Object:  StoredProcedure [dbo].[getDatosArchivoTextoVDBF]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosArchivoTextoVDBF]
@codigo_Proceso as uniqueidentifier
as
BEGIN
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/
	SELECT	dateCode	AS [Id Proceso], 
		Orden		AS Linea,
		REPLACE (RTRIM(SUBSTRING(lineainformacion, 32,50)) , '?', 'Ñ')  AS Nombre,
		CONVERT(DECIMAL(14,2),LTRIM(SUBSTRING(lineainformacion,16,15))) AS [Monto Descuento]
	FROM	TemporalArchivoTexto 
	WHERE	Codigo_proceso	= @codigo_Proceso	AND
		Procesa 	= 0 
	ORDER BY dateCode desc, orden
END




GO
/****** Object:  StoredProcedure [dbo].[getDatosPagosIBSOnline]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getDatosPagosIBSOnline]
@codigo_proceso AS UNIQUEIDENTIFIER
as 
SELECT ISNULL(C.codigo_IBS,'') AS codigo_IBS, CONVERT(VARCHAR,GETDATE(),12 ) AS FECHA
  FROM [Proceso] P
   INNER JOIN CLIENTE C ON C.CODIGO_CLIENTE = P.CODIGO_CLIENTE
  WHERE CODIGO_PROCESO = @codigo_proceso  

GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesado]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesado]
@Codigo_proceso 	AS uniqueidentifier,
@dateCode		as varchar ( 14),
@orden			as int
AS
BEGIN
-- Obtener los datos de los archivos de texto de forma leible
-- La cantidad de columnas varia de acuerdo al procedimiento almacenado que se procese al final
	declare @FormatoArchivoImportacion varchar(10)
	declare @sql as varchar (1000)
	SELECT @FormatoArchivoImportacion = FormatoArchivoImportacion 
	FROM PROCESO p 
		inner join Cliente c on ( p.Codigo_Cliente = c.Codigo_Cliente ) 
	WHERE CODIGO_PROCESO = @codigo_Proceso

	set @sql= 'execute getDatosRegistroNoProcesado'+@FormatoArchivoImportacion + ' ''' 
			+ cast ( @codigo_Proceso as varchar(36)) + '''' 
			+ ',''' +@dateCode + ''',' + cast ( @orden as varchar ( 8 ) )
	exec ( @sql )

END



GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoDIREL]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoDIREL]
@codigo_Proceso as uniqueidentifier,
@dateCode		as varchar ( 14),
@orden			as int
as
BEGIN

set nocount on
-- Obtenemos la informacion del periodo
declare @Anio_periodo as char(4)
declare @Mes_Periodo as char(2)

select @Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo 
from proceso 
where codigo_proceso = @Codigo_proceso

set nocount off


	DECLARE @tipoArchivo as varchar ( 20)
	select @tipoArchivo = SUBSTRING ( lineainformacion , 1, 8) 
	from TemporalArchivoTexto 
	WHERE 
		Codigo_proceso = @codigo_Proceso
		and dateCode = @dateCode
		AND orden = 2
	ORDER BY ORDEN

	if  @tipoArchivo  = 'Terccrep' 
	begin
		select  
		dateCode as [Id Proceso], orden as [Linea],
		substring ( lineainformacion, 1, 10 ) as [Numero Pagare],
		substring ( lineainformacion, 27, 40 ) as Nombre,  
		cast ( ltrim(rtrim(replace ( substring ( lineainformacion, 67, 11 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento],
		 @Anio_periodo as Anio_periodo, @Mes_Periodo as Mes_Periodo 
		from TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso 
			and isnumeric ( substring ( lineainformacion, 1, 10 ) ) = 1
			and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
			AND PROCESA = 0 
			and orden = @orden
		order by orden
	end
	else
	begin
	
		select @tipoArchivo = SUBSTRING ( lineainformacion , 1, 3) 
		from TemporalArchivoTexto 
		WHERE 
			Codigo_proceso = @codigo_Proceso
			and dateCode = @dateCode
			AND orden = 3
		ORDER BY ORDEN


		if @tipoArchivo  = 'BEN'
		BEGIN

			select  
			dateCode as [Id Proceso], orden as [Linea],
			substring ( lineainformacion, 10, 10 ) as [Numero Pagare],
		--	substring ( lineainformacion, 14, 6 ), 
		--	substring ( lineainformacion, 24, 1 ), 
			substring ( lineainformacion, 36, 32 ) as Nombre,  
			cast ( ltrim(rtrim(replace ( substring ( lineainformacion, 83, 8 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento],
			 @Anio_periodo as Anio_periodo, @Mes_Periodo as Mes_Periodo 
			from TemporalArchivoTexto 
			where codigo_proceso = @codigo_Proceso 
				and dateCode = @dateCode
				and isnumeric ( substring ( lineainformacion, 10, 10 ) ) = 1
				--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
				AND PROCESA = 0 
				and orden = @orden
			order by orden


		end

		/*if @tipoArchivo  = 'REM'
		BEGIN*/


			select @tipoArchivo = SUBSTRING ( lineainformacion , 1, 6) 
			from TemporalArchivoTexto 
			WHERE 
				Codigo_proceso = @codigo_Proceso
				and dateCode = @dateCode
				AND orden = 3
			ORDER BY ORDEN
			--SELECT 1
			if @tipoArchivo = 'REM009' 
			begin
				select  
				dateCode as [Id Proceso], orden as [Linea],
				substring ( lineainformacion , 13 , 10 ) as [Numero Pagare],
				substring ( lineainformacion , 36 , 32 ) as Nombre,  
				cast ( ltrim(rtrim(replace ( substring ( lineainformacion , 89 , 7 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento],
				 @Anio_periodo as Anio_periodo, @Mes_Periodo as Mes_Periodo 
				from TemporalArchivoTexto 
				where codigo_proceso = @codigo_Proceso 
					and dateCode = @dateCode
					and isnumeric ( substring ( lineainformacion , 13 , 10 ) ) = 1
					--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
					AND PROCESA = 0 
					and orden = @orden
				order by orden
			end
			
			select @tipoArchivo = SUBSTRING ( lineainformacion , 1, 6) 
			from TemporalArchivoTexto 
			WHERE 
				Codigo_proceso = @codigo_Proceso
				and dateCode = @dateCode
				AND orden = 2
			ORDER BY ORDEN
			if @tipoArchivo = 'REM100' 
			begin

				select  
				dateCode as [Id Proceso], orden as [Linea],
				substring ( lineainformacion ,1, 10 ) as [Numero Pagare],
				substring ( lineainformacion ,35, 50 ) as Nombre,  
				cast ( ltrim(rtrim(replace ( substring ( lineainformacion ,100, 9 ), ',', ''))) as decimal(14,2) )  as [Monto Descuento],
				 @Anio_periodo as Anio_periodo, @Mes_Periodo as Mes_Periodo 
				from TemporalArchivoTexto 
				where codigo_proceso = @codigo_Proceso 
					and dateCode = @dateCode
					and isnumeric ( substring ( lineainformacion ,1, 10 ) ) = 1
					and rtrim ( substring ( lineainformacion ,100, 50 ) )  <> ''
					AND PROCESA = 0 
					and orden = @orden
				order by orden

			END

		--END

	end
END



GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoDRIT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoDRIT]
@Codigo_proceso 	AS uniqueidentifier,
@dateCode		as varchar ( 14),
@orden			as int
as
BEGIN

set nocount on
-- Obtenemos la informacion del periodo
declare @Anio_periodo as char(4)
declare @Mes_Periodo as char(2)

select @Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo 
from proceso 
where codigo_proceso = @Codigo_proceso

set nocount off

/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/
	SELECT 
	dateCode as [Id Proceso], orden as [Linea],
	SUBSTRING ( lineainformacion , 24, 40 ) Nombre, 
		ltrim(rtrim(SUBSTRING ( lineainformacion , 64, 9 )))  [Monto Descuento], '' AS [Numero Pagare], 
	'' AS [Monto Descuento],
	 @Anio_periodo as Anio_periodo, @Mes_Periodo as Mes_Periodo 
	FROM TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso
		and dateCode = @dateCode--'20060706121109'
		AND orden = @orden 
		AND PROCESA = 0 
		AND ISNUMERIC ( SUBSTRING ( lineainformacion , 64, 9 )   ) = 1
		AND 
		(SUBSTRING ( lineainformacion , 24, 40 ) <> 'TERAMERICANO DE FINANZAS ='
		OR
		SUBSTRING ( lineainformacion , 24, 40 ) NOT LIKE '%FINANZAS%'
		)

END



GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoESSALUD]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoESSALUD]  
@Codigo_proceso  AS uniqueidentifier,  
@dateCode  as varchar ( 14),  
@orden   as int  
AS   
BEGIN  
  
set nocount on  
-- Obtenemos la informacion del periodo  
declare @Anio_periodo as char(4)  
declare @Mes_Periodo as char(2)  
  
select @Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo   
from proceso   
where codigo_proceso = @Codigo_proceso  
  
set nocount off  
  
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/  
 SELECT   
	dateCode as [Id Proceso], 
	orden as [Linea],  
	'' as [Numero Pagare],  
	cast (substring ( lineainformacion , 1, 7 ) as numeric ) as [Codigo Modular],  	
	(ltrim(rtrim(substring(lineainformacion, 9, 20))) + ' ' + ltrim(rtrim(substring(lineainformacion, 30, 20 ))) + ' ' + ltrim(rtrim(substring(lineainformacion, 51, 20)))) as Nombre,
	CONVERT(DECIMAL(14,2), ltrim(rtrim(substring(lineainformacion, 72, 10)))) as [Monto Descuento], 
	@Anio_periodo as Anio_periodo, 
	@Mes_Periodo as Mes_Periodo   
 FROM TemporalArchivoTexto   
  where codigo_proceso = @codigo_Proceso  
  and dateCode = @dateCode
  AND orden = @orden   
  AND PROCESA = 0   
END  
  
GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoHACHULUC]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20130117				*/
/* Observacion	: Recupera el registro de un dato no procesado del Hosp.*/
/*     		: Apoyo de Chulucanas					*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoHACHULUC]
@Codigo_proceso 	AS uniqueidentifier,
@dateCode		AS VARCHAR(14),
@orden			AS INT
AS BEGIN

SET NOCOUNT ON

-- Obtenemos la informacion del periodo
DECLARE @Anio_periodo	AS CHAR(4)
DECLARE @Mes_Periodo	AS CHAR(2)

SELECT	@Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo 
FROM	proceso 
WHERE	codigo_proceso = @Codigo_proceso

/************************************************************************************************/
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados	*/
/************************************************************************************************/

SELECT	dateCode 	AS [Id Proceso], 
	orden 		AS [Linea],
	'' 		AS [Numero Pagare],
	'' 		AS [Codigo Modular],
	REPLACE (RTRIM(SUBSTRING(lineainformacion, 13,50)), '?', 'Ñ')  		AS Nombre,
	CONVERT(DECIMAL(14,2), REPLACE(REPLACE(SUBSTRING(lineainformacion, 68, 10),' ',''), ',','.')) AS [Monto Descuento],
 	@Anio_periodo 	AS Anio_periodo, 
	@Mes_Periodo 	AS Mes_Periodo 
FROM	TemporalArchivoTexto 
WHERE	codigo_proceso	= @codigo_Proceso 	AND 
	dateCode 	= @dateCode		AND 
	orden 		= @orden 		AND 
	PROCESA 	= 0 

END



GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoHAISROSA]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20130117				*/
/* Observacion	: Recupera el registro de un dato no procesado del Hosp.*/
/*     		: de Apoyo I Santa Rosa					*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoHAISROSA]
@Codigo_proceso 	AS uniqueidentifier,
@dateCode		AS VARCHAR(14),
@orden			AS INT
AS BEGIN

SET NOCOUNT ON

-- Obtenemos la informacion del periodo
DECLARE @Anio_periodo	AS CHAR(4)
DECLARE @Mes_Periodo	AS CHAR(2)

SELECT	@Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo 
FROM	proceso 
WHERE	codigo_proceso = @Codigo_proceso

/************************************************************************************************/
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados	*/
/************************************************************************************************/

SELECT	dateCode 	AS [Id Proceso], 
	orden 		AS [Linea],
	'' 		AS [Numero Pagare],
	'' 		AS [Codigo Modular],
	REPLACE (RTRIM(SUBSTRING(lineainformacion, 13,50)), '?', 'Ñ')  		AS Nombre,
	CONVERT(DECIMAL(14,2), REPLACE(REPLACE(SUBSTRING(lineainformacion, 68, 10),' ',''), ',','.')) AS [Monto Descuento],
 	@Anio_periodo 	AS Anio_periodo, 
	@Mes_Periodo 	AS Mes_Periodo 
FROM	TemporalArchivoTexto 
WHERE	codigo_proceso	= @codigo_Proceso 	AND 
	dateCode 	= @dateCode		AND 
	orden 		= @orden 		AND 
	PROCESA 	= 0 

END



GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoHNSMERCED]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20121119				*/
/* Observacion	: Recupera el registro de un dato no procesado del Hosp.*/
/*     		: Apoyo Nuestra Señora de las Mercedes para insertarlo	*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoHNSMERCED]
@Codigo_proceso 	AS uniqueidentifier,
@dateCode		AS VARCHAR(14),
@orden			AS INT
AS BEGIN

SET NOCOUNT ON

-- Obtenemos la informacion del periodo
DECLARE @Anio_periodo	AS CHAR(4)
DECLARE @Mes_Periodo	AS CHAR(2)

SELECT	@Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo 
FROM	proceso 
WHERE	codigo_proceso = @Codigo_proceso

/************************************************************************************************/
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados	*/
/************************************************************************************************/

SELECT	dateCode 	AS [Id Proceso], 
	orden 		AS [Linea],
	'' 		AS [Numero Pagare],
	'' 		AS [Codigo Modular],
	REPLACE (RTRIM(SUBSTRING(lineainformacion, 13,45)) , '?', 'Ñ')  		AS Nombre,
	CONVERT(DECIMAL(14,2), REPLACE(SUBSTRING(lineainformacion , 67, 11 ), ',','.')) AS [Monto Descuento],
 	@Anio_periodo 	AS Anio_periodo, 
	@Mes_Periodo 	AS Mes_Periodo 
FROM	TemporalArchivoTexto 
WHERE	codigo_proceso	= @codigo_Proceso 	AND 
	dateCode 	= @dateCode		AND 
	orden 		= @orden 		AND 
	PROCESA 	= 0 

END



GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoLuciano]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20121119				*/
/* Observacion	: Recupera el registro de un dato no procesado de 	*/
/*     		: Luciano para insertarlo				*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoLuciano]
@Codigo_proceso 	AS uniqueidentifier,
@dateCode		AS VARCHAR(14),
@orden			AS INT
AS BEGIN

SET NOCOUNT ON

-- Obtenemos la informacion del periodo
DECLARE @Anio_periodo	AS CHAR(4)
DECLARE @Mes_Periodo	AS CHAR(2)

SELECT	@Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo 
FROM	proceso 
WHERE	codigo_proceso = @Codigo_proceso

/************************************************************************************************/
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados	*/
/************************************************************************************************/

SELECT	dateCode 	AS [Id Proceso], 
	orden 		AS [Linea],
	'' 		AS [Numero Pagare],
	'' 		AS [Codigo Modular],
	REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 17, 40))) ,'?','Ñ') ,'  ',' '), '-',' ')	AS Nombre,
	CONVERT(DECIMAL(14,2), REPLACE(SUBSTRING(lineainformacion , 66, 11 ), ',',''))	 				AS [Monto Descuento],
 	@Anio_periodo 	AS Anio_periodo, 
	@Mes_Periodo 	AS Mes_Periodo 
FROM	TemporalArchivoTexto 
WHERE	codigo_proceso	= @codigo_Proceso 	AND 
	dateCode 	= @dateCode		AND 
	orden 		= @orden 		AND 
	PROCESA 	= 0 

END



GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoMINSA]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoMINSA]
@Codigo_proceso 	AS uniqueidentifier,
@dateCode		as varchar ( 14),
@orden			as int
AS 
BEGIN

set nocount on
-- Obtenemos la informacion del periodo
declare @Anio_periodo as char(4)
declare @Mes_Periodo as char(2)

select @Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo 
from proceso 
where codigo_proceso = @Codigo_proceso

set nocount off

/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/
	SELECT 
		dateCode as [Id Proceso], Orden as Linea,
		'' as [Numero Pagare],
		replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ')  Nombre,
		cast (
		case when len ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) > 2 AND 
				ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 1 then
		
				substring(rtrim(ltrim(substring (lineainformacion , 66, 5 ))), 1, len(rtrim(ltrim(substring ( lineainformacion , 66, 5 ))))  - 2 ) 
				+ '.' +  substring(rtrim(ltrim(substring ( lineainformacion , 66, 5))),  len(rtrim(ltrim(substring ( lineainformacion , 66, 5 ))))  - 1, len(rtrim(ltrim(substring ( lineainformacion , 66, 5 )))))  
		
				when len ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) <= 2 AND ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 1 then
					ltrim(rtrim(substring ( lineainformacion , 66, 5 )))
				when ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 0 then	
					'0'
				end
		as decimal(14,2) ) as [Monto Descuento],
	 @Anio_periodo as Anio_periodo, @Mes_Periodo as Mes_Periodo 
	FROM TemporalArchivoTexto 
		where codigo_proceso = @codigo_Proceso
		and dateCode = @dateCode--'20060706121109'
		AND orden = @orden 
		AND PROCESA = 0 
		and rtrim ( substring ( lineainformacion , 12, 54 ) ) <> ''

END


GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoSDBF]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoSDBF]
@Codigo_proceso 	AS uniqueidentifier,
@dateCode		as varchar (14),
@orden			as int
AS BEGIN

SET NOCOUNT ON
-- Obtenemos la informacion del periodo
DECLARE	@Anio_periodo	AS CHAR(4)
DECLARE	@Mes_Periodo	AS CHAR(2)

SELECT	@Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo 
FROM	Proceso
WHERE	Codigo_proceso = @Codigo_proceso

SET NOCOUNT OFF

/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/

	SELECT	dateCode	AS [Id Proceso], 
		Orden		AS Linea,
		'' as [Numero Pagare],
		REPLACE (RTRIM(SUBSTRING(lineainformacion, 32,50)) , '?', 'Ñ')  AS Nombre,
		CONVERT(DECIMAL(14,2),LTRIM(SUBSTRING(lineainformacion,16,15))) AS [Monto Descuento],
		@Anio_periodo 	AS Anio_periodo, 
		@Mes_Periodo 	AS Mes_Periodo 
	FROM	TemporalArchivoTexto 
	WHERE	Codigo_proceso	= @codigo_Proceso	AND
		dateCode	= @dateCode		AND
		orden 		= @orden 		AND
		PROCESA 	= 0

END







GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoUESMCHULU]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20130110				*/
/* Observacion	: Recupera el registro de un dato no procesado de 	*/
/*     		: Unidad Ejecutora 403 Salud Morropon Chulucanas	*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoUESMCHULU]
@Codigo_proceso 	AS uniqueidentifier,
@dateCode		AS VARCHAR(14),
@orden			AS INT
AS BEGIN

SET NOCOUNT ON

-- Obtenemos la informacion del periodo
DECLARE @Anio_periodo	AS CHAR(4)
DECLARE @Mes_Periodo	AS CHAR(2)

SELECT	@Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo 
FROM	proceso 
WHERE	codigo_proceso = @Codigo_proceso

/************************************************************************************************/
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados	*/
/************************************************************************************************/

SELECT	dateCode 	AS [Id Proceso], 
	orden 		AS [Linea],
	'' 		AS [Numero Pagare],
	'' 		AS [Codigo Modular],
	REPLACE (RTRIM(SUBSTRING(lineainformacion, 13,45)) , '?', 'Ñ')  		AS Nombre,
	CONVERT(DECIMAL(14,2), REPLACE(REPLACE(SUBSTRING(lineainformacion , 67, 11),' ',''), ',','.')) AS [Monto Descuento],
 	@Anio_periodo 	AS Anio_periodo, 
	@Mes_Periodo 	AS Mes_Periodo 
FROM	TemporalArchivoTexto 
WHERE	codigo_proceso	= @codigo_Proceso 	AND 
	dateCode 	= @dateCode		AND 
	orden 		= @orden 		AND 
	PROCESA 	= 0 

END



GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoUPAO]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/    
/* Fecha Modif : BANBIF(CRP) - 20130808    */    
/* Observacion : Recupera el registro de un dato no procesado de UPAO */    
/************************************************************************/    
CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoUPAO]    
@Codigo_proceso  AS uniqueidentifier,    
@dateCode  AS VARCHAR(14),    
@orden   AS INT    
AS BEGIN    
    
SET NOCOUNT ON    
    
-- Obtenemos la informacion del periodo    
DECLARE @Anio_periodo AS CHAR(4)    
DECLARE @Mes_Periodo AS CHAR(2)    
    
SELECT @Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo     
FROM proceso     
WHERE codigo_proceso = @Codigo_proceso    
    
/************************************************************************************************/    
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados */    
/************************************************************************************************/    
    
SELECT dateCode  AS [Id Proceso],     
 orden   AS [Linea],    
 ''   AS [Numero Pagare],    
 ''   AS [Codigo Modular],    
 REPLACE (RTRIM(SUBSTRING(lineainformacion, 19,45)) , '?', 'Ñ')    AS Nombre,    
 CONVERT(DECIMAL(14,2), REPLACE(REPLACE(SUBSTRING(lineainformacion , 64, 11),' ',''), ',','')) AS [Monto Descuento],    
  @Anio_periodo  AS Anio_periodo,     
 @Mes_Periodo  AS Mes_Periodo     
FROM TemporalArchivoTexto     
WHERE codigo_proceso = @codigo_Proceso  AND     
 dateCode  = @dateCode  AND     
 orden   = @orden   AND     
 PROCESA  = 0     
    
END    
    
GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoUTES]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoUTES]      
@Codigo_proceso  AS uniqueidentifier,      
@dateCode  as varchar ( 14),      
@orden   as int      
AS       
BEGIN      
      
set nocount on      
-- Obtenemos la informacion del periodo      
declare @Anio_periodo as char(4)      
declare @Mes_Periodo as char(2)      
      
select @Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo       
from proceso       
where codigo_proceso = @Codigo_proceso      
      
set nocount off      
      
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/      
 SELECT       
  dateCode as [Id Proceso], Orden as Linea,      
  '' as [Numero Pagare],      
  replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ')  Nombre,      
  cast (      
  case when len ( rtrim(ltrim(substring ( lineainformacion , 71,7 ))) ) > 2 AND       
    ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 71,7 ))) ) = 1 then      
        
    substring(rtrim(ltrim(substring (lineainformacion , 71,7 ))), 1, len(rtrim(ltrim(substring ( lineainformacion , 71,7 ))))  - 3 )       
    + '.' +  substring(rtrim(ltrim(substring ( lineainformacion , 71,7))),  len(rtrim(ltrim(substring ( lineainformacion , 71,7 ))))  - 1, len(rtrim(ltrim(substring ( lineainformacion , 71,7 )))))        
        
    when len ( rtrim(ltrim(substring ( lineainformacion ,71,7 ))) ) <= 2 AND ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 71,7 ))) ) = 1 then      
     ltrim(rtrim(substring ( lineainformacion , 71,7 )))      
    when ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 71,7))) ) = 0 then       
     '0'      
    end      
  as decimal(14,2) ) as [Monto Descuento],      
  @Anio_periodo as Anio_periodo, @Mes_Periodo as Mes_Periodo       
 FROM TemporalArchivoTexto       
  where codigo_proceso = @codigo_Proceso      
  and dateCode = @dateCode--'20060706121109'      
  AND orden = @orden       
  AND PROCESA = 0       
  and rtrim ( substring ( lineainformacion , 12, 54 ) ) <> ''      
      
END  


GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoUTESNO6]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/  
/* Fecha Modif : BANBIF(CRP) - 20130808    */  
/* Observacion : Recupera el registro de un dato no procesado de UTES O6 */  
/************************************************************************/  
CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoUTESNO6]  
@Codigo_proceso  AS uniqueidentifier,  
@dateCode  AS VARCHAR(14),  
@orden   AS INT  
AS BEGIN  
  
SET NOCOUNT ON  
  
-- Obtenemos la informacion del periodo  
DECLARE @Anio_periodo AS CHAR(4)  
DECLARE @Mes_Periodo AS CHAR(2)  
  
SELECT @Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo   
FROM proceso   
WHERE codigo_proceso = @Codigo_proceso  
  
/************************************************************************************************/  
/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados */  
/************************************************************************************************/  
  
SELECT dateCode  AS [Id Proceso],   
 orden   AS [Linea],  
 ''   AS [Numero Pagare],  
 ''   AS [Codigo Modular],  
 REPLACE (RTRIM(SUBSTRING(lineainformacion, 13,45)) , '?', 'Ñ')    AS Nombre,  
 CONVERT(DECIMAL(14,2), REPLACE(REPLACE(SUBSTRING(lineainformacion , 67, 11),' ',''), ',','.')) AS [Monto Descuento],  
  @Anio_periodo  AS Anio_periodo,   
 @Mes_Periodo  AS Mes_Periodo   
FROM TemporalArchivoTexto   
WHERE codigo_proceso = @codigo_Proceso  AND   
 dateCode  = @dateCode  AND   
 orden   = @orden   AND   
 PROCESA  = 0   
  
END  
  
  
GO
/****** Object:  StoredProcedure [dbo].[getDatosRegistroNoProcesadoVDBF]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getDatosRegistroNoProcesadoVDBF]
@Codigo_proceso 	AS uniqueidentifier,
@dateCode		as varchar (14),
@orden			as int
AS BEGIN

SET NOCOUNT ON
-- Obtenemos la informacion del periodo
DECLARE	@Anio_periodo	AS CHAR(4)
DECLARE	@Mes_Periodo	AS CHAR(2)

SELECT	@Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo 
FROM	Proceso
WHERE	Codigo_proceso = @Codigo_proceso

SET NOCOUNT OFF

/*Obtener la informacion de los archivos de forma leible y solo filtrando los no procesados*/

	SELECT	dateCode	AS [Id Proceso], 
		Orden		AS Linea,
		'' as [Numero Pagare],
		REPLACE (RTRIM(SUBSTRING(lineainformacion, 32,50)) , '?', 'Ñ')  AS Nombre,
		CONVERT(DECIMAL(14,2),LTRIM(SUBSTRING(lineainformacion,16,15))) AS [Monto Descuento],
		@Anio_periodo 	AS Anio_periodo, 
		@Mes_Periodo 	AS Mes_Periodo 
	FROM	TemporalArchivoTexto 
	WHERE	Codigo_proceso	= @codigo_Proceso	AND
		dateCode	= @dateCode		AND
		orden 		= @orden 		AND
		PROCESA 	= 0

END









GO
/****** Object:  StoredProcedure [dbo].[GetDatosZonaUse]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
/*Reporte de Efectividad*/  

CREATE OR ALTER PROCEDURE [dbo].[GetDatosZonaUse]    
    
 @Codigo_proceso as uniqueidentifier    

AS    
    
SELECT DISTINCT    
 DLCZGR      
FROM     
 DLCEC D INNER JOIN CLIENTECUOTA C ON D.DLCCDG = C.DLCC    
WHERE      
 CODIGO_PROCESO = @Codigo_proceso    


GO
/****** Object:  StoredProcedure [dbo].[GetDetalleErrorRegistro]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetDetalleErrorRegistro]
@codigo AS UNIQUEIDENTIFIER
AS
BEGIN
	SELECT ea.[Codigo_proceso], [CodigoBanco], [Moneda] = RTRIM( ISNULL([Moneda], '') ) , 
		[NumeroPagare] = replace ( isnull( [NumeroPagare], ''), '''', ''), 
		[CodigoModular] = replace ( isnull([CodigoModular], ''), '''', ''), 
		[NombreTrabajador], [CodigoReferencia] = rtrim(ISNULL([CodigoReferencia], '')), 
		[Anio] = isnull([Anio], ''), [Mes] = isnull( [Mes], ''), 
		[Cuota] = CAST (
				case when ISNUMERIC ( [Cuota] ) = 0 then	
					'0'	
				else
					[Cuota]
				end
			/*case when len ( [Cuota] ) > 2 AND ISNUMERIC ( [Cuota] ) = 1 then
				substring([Cuota], 1, len([Cuota])  - 2 ) + '.' +  substring([Cuota],  len([Cuota])  - 1, len([Cuota]))  
			when len ( [Cuota] ) <= 2 AND ISNUMERIC ( [Cuota] ) = 1 then
				[Cuota]
			when ISNUMERIC ( [Cuota] ) = 0 then	
				'0'
			end*/
		as decimal(14,2)),
		[SituacionLaboral] = RTRIM(isnull ( [SituacionLaboral] , '')), 
		[MontoDescuento] = --CAST (
				case when ISNUMERIC ( rtrim([MontoDescuento]) ) = 0 then	
					''--'0'
				else
					rtrim([MontoDescuento])
				end
			/*case when len ( rtrim([MontoDescuento]) ) > 2 AND ISNUMERIC ( rtrim([MontoDescuento] )) = 1 then
				substring(rtrim([MontoDescuento]), 1, len(rtrim([MontoDescuento]))  - 2 ) + '.' +  substring(rtrim([MontoDescuento]),  len(rtrim([MontoDescuento]))  - 1, len(rtrim([MontoDescuento])))  
			when len (rtrim([MontoDescuento]) ) <= 2 AND ISNUMERIC ( rtrim([MontoDescuento]) ) = 1 then
				rtrim([MontoDescuento])
			when ISNUMERIC ( rtrim([MontoDescuento]) ) = 0 then	
				''--'0'
			end*/,
		--as decimal(14,2)), 
		ea.[Estado], Anio_periodo ,Mes_Periodo, [codigo] 
	FROM [ErrorArchivoDescuentos] ea inner join proceso p
				on ( ea.[Codigo_proceso] = p.[Codigo_proceso] )
	WHERE [codigo] = @codigo
END


GO
/****** Object:  StoredProcedure [dbo].[GetDocumentoClientesRegistrados]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetDocumentoClientesRegistrados]
AS
BEGIN
	SELECT TipoDocumento,
			[NumeroDocumento]
	FROM [Cliente]
END


GO
/****** Object:  StoredProcedure [dbo].[GetEmails]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetEmails]
@Codigo_proceso as uniqueidentifier
AS
BEGIN
-- Obtenemos la informacion del cliente y los correos electronicos 
-- a los que debe llegar la informacion
	SELECT p.Codigo_Cliente as Codigo_Cliente, Nombre_Cliente, CorreoElectronico, Anio_periodo,  Mes_Periodo
		FROM CLIENTE C INNER JOIN PROCESO P 
			ON (C.Codigo_Cliente = p.Codigo_Cliente) 
	where p.Codigo_proceso = @Codigo_proceso
END

GO
/****** Object:  StoredProcedure [dbo].[getErroresArchivo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getErroresArchivo]
@codigo_proceso as uniqueidentifier
AS
BEGIN
	SELECT  orden,
		lineainformacion,                                                                                                                                                                                                                                            
                                                                                                                                                     
		fecha, dateCode
	FROM TemporalArchivoTexto 
	WHERE PROCESA = 0 	
	and Codigo_proceso = @codigo_proceso
	ORDER BY dateCode desc, orden
END


GO
/****** Object:  StoredProcedure [dbo].[GetEstadoErrorRegistro]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetEstadoErrorRegistro]
@CodigoError as char(2)
AS
BEGIN
	SELECT [CodigoId], [CodigoNombre], [CodigoDescripcion]
	FROM [CodigoEstado]
	where Tabla = 'ClienteCuota'
		and [CodigoId] = @CodigoError
END


GO
/****** Object:  StoredProcedure [dbo].[GetEstadoProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetEstadoProceso]
@Codigo_proceso uniqueidentifier
AS
BEGIN
--Obtenemos el estado del proceso de datos
	select Estado from Proceso where Codigo_proceso = @Codigo_proceso
END


GO
/****** Object:  StoredProcedure [dbo].[GetEstadosTrabajador]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetEstadosTrabajador]          
@Codigo_proceso VARCHAR ( 36 )               
/* Modificado por: Christian Rivera      
 Fecha: 11-11-2014      
 Motivo: EA 273-Mejoras convenios      
 Descripcion: Se añaden las empresas SAVIA PERU e ICPNA en el filtro de empresas especiales      
*/      
AS              
BEGIN              
            
 declare @codigo_cliente as int            
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso            
            
-- IF (@codigo_cliente in( 190828082,190828080) )          
-- IF (@codigo_cliente in(190828082,190828080,190828393,190828950) )          
 IF (@codigo_cliente in(190828082,190828080,190828393,190828950,190828743) ) --se añade CAFAE - INS CRIVERA 06-03-2015         
      
 BEGIN            
          
 SELECT distinct VET.codigoFlag 'dlst' , nombreCortoFlag, precedenciaFlag              
 from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (SUBSTRING(CC.DLCR,1,2) = VET.codigoFlag)              
 WHERE Codigo_proceso = @Codigo_proceso              
 ORDER BY precedenciaFlag           
          
 END            
 ELSE            
 BEGIN            
             
  SELECT distinct dlst , nombreCortoFlag, precedenciaFlag              
 from ClienteCuota CC inner join VW_EstadoTrabajador VET ON (CC.dlst = VET.codigoFlag)              
 WHERE Codigo_proceso = @Codigo_proceso              
 ORDER BY precedenciaFlag            
          
 END            
END 
GO
/****** Object:  StoredProcedure [dbo].[GetExisteErrorTabla]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetExisteErrorTabla]
@codigo_proceso as uniqueidentifier
AS
BEGIN
set nocount on 
declare @b as bit
	--Obtenemos un valor que nos permitira determinar si tenemos errores en la tabla de proceso
	if exists ( select 1 from [ErrorArchivoDescuentos] where codigo_proceso = @codigo_proceso)
	begin
		set @b  = 1 
	end
	else
	begin
		set @b  = 0
	end
set nocount off
select @b   as bool
END


GO
/****** Object:  StoredProcedure [dbo].[GetFinalGeneracionArchivo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetFinalGeneracionArchivo]
@Codigo_proceso AS UNIQUEIDENTIFIER,
@usuario	varchar(30) = '' 
AS
BEGIN
--DEVUELVE SI EL PROCESO TIENE LA MARCA DE FINAL DE GENERACION DE ARCHIVO O ERROR DE GENERACION
	SET NOCOUNT ON
		Declare @b as Bit
		Set @b = 0 
		If Exists ( Select 1 From Proceso Where Codigo_Proceso = @Codigo_proceso and Estado = 'P2' ) 
		begin
			Update Proceso 
			Set Estado = 'G0'
			WHERE Codigo_proceso = @Codigo_proceso
			EXECUTE AddLogInfo '', @Codigo_proceso, 'P2', 'G0', 'GetFinalGeneracionArchivo', @usuario
		end
		If exists ( Select 1 From proceso Where Codigo_proceso = @codigo_proceso and TmpStatusGen = 'P2' ) 
		begin
			--Actualizamos el flag temporal de generacion de archivo
			-- Al final de la generacion este flag debe regresar al estado P2
			Update proceso 
			Set TmpStatusGen = 'G0'
			WHERE Codigo_proceso = @codigo_proceso
			EXECUTE AddLogInfo '', @Codigo_proceso, 'P2', 'G0', 'GetFinalGeneracionArchivo', @usuario
		END
		IF EXISTS ( SELECT 1 FROM PROCESO WHERE Codigo_proceso = @codigo_proceso and TmpStatusGen IN ('G1', 'EG'))
		BEGIN
			Set @b = 1
		END
	SET NOCOUNT OFF
	SELECT @b  AS BIT
END


GO
/****** Object:  StoredProcedure [dbo].[getFormatoExportacion]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getFormatoExportacion]
@Codigo_proceso VARCHAR ( 36 ) 
AS
BEGIN
DECLARE @Codigo_Cliente AS NUMERIC ( 9,0 ) 
-- TipoFormatoArchivo
-- csv txt both
SET NOCOUNT ON
	SELECT @Codigo_Cliente = Codigo_Cliente FROM PROCESO WHERE CODIGO_PROCESO = @Codigo_proceso


	SELECT 	1	AS Orden,
		DescripcionFormatoArchivo, FormatoArchivo, TipoFormatoArchivo  
	INTO 	#TMP
	FROM 	FormatoArchivoCliente 
	WHERE 	CODIGO_CLIENTE = @Codigo_Cliente 

	INSERT INTO #TMP
	SELECT 	0,	FormatoArchivo,  FormatoArchivo , TipoFormatoArchivo 
	FROM 	CLIENTE 
	WHERE 	CODIGO_CLIENTE = @Codigo_Cliente 

SET NOCOUNT OFF

	SELECT  DescripcionFormatoArchivo,  FormatoArchivo , TipoFormatoArchivo FROM #TMP 
	order by Orden asc
END



GO
/****** Object:  StoredProcedure [dbo].[getFormatoExportacion1]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getFormatoExportacion1]
@Codigo_proceso VARCHAR ( 36 ) 
AS
BEGIN
DECLARE @Codigo_Cliente AS NUMERIC ( 9,0 ) 
-- TipoFormatoArchivo
-- csv txt both
SET NOCOUNT ON
	SELECT @Codigo_Cliente = Codigo_Cliente FROM PROCESO WHERE CODIGO_PROCESO = @Codigo_proceso


	SELECT 	1	AS Orden,
		DescripcionFormatoArchivo, FormatoArchivo, TipoFormatoArchivo  
	INTO 	#TMP
	FROM 	FormatoArchivoCliente 
	WHERE 	CODIGO_CLIENTE = @Codigo_Cliente 

	INSERT INTO #TMP
	SELECT 	0,	FormatoArchivo,  FormatoArchivo , TipoFormatoArchivo 
	FROM 	CLIENTE 
	WHERE 	CODIGO_CLIENTE = @Codigo_Cliente 

SET NOCOUNT OFF

	SELECT  DescripcionFormatoArchivo,  FormatoArchivo , TipoFormatoArchivo FROM #TMP 
	order by Orden asc
END



GO
/****** Object:  StoredProcedure [dbo].[GetFuncionarioCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetFuncionarioCliente]  
@codigo_cliente numeric(9,0)  
AS  
BEGIN  
 
 select nombre_funcionario,email_funcionario, telefono_funcionario   from fObtenerFuncionario(@codigo_cliente)
  
END  

/*
	drop procedure GetFuncionarioCliente
*/

/*
	PRUEBAS UNITARIAS
*/
/*
exec GetFuncionarioCliente 190827919
*/
GO
/****** Object:  StoredProcedure [dbo].[GetFuncionarioConvenios]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetFuncionarioConvenios]  
/*  
Autor: Christian Rivera  
Fecha: 10-06-2014  
Motivo: EA 273-Mejoras convenios  
Descripcion: Obtiene los datos de los funcionarios de Convenios  
*/  
as  
select id_funcionario as Codigo,   
  nombre_funcionario as Descripcion   
from funcionario_convenios  
where estado_funcionario = 1
GO
/****** Object:  StoredProcedure [dbo].[GetFuncionarios]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetFuncionarios]
as

SELECT 
	id_funcionario, 
	nombre_funcionario,              
	email_funcionario,                                  
	telefono_funcionario, 
	estado_funcionario, 
	usuario_creacion,               
	fecha_creacion,          
	usuario_modificacion,           
	fecha_modificacion
FROM dbo.funcionario_convenios
WHERE
	estado_funcionario = 1
GO
/****** Object:  StoredProcedure [dbo].[GetInfoClienteProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetInfoClienteProceso]
@Codigo_proceso AS NVARCHAR (36)
AS
BEGIN
-- Obtenemos la informacion del cliente usando el 
-- codigo de cliente 
	SELECT TipoDocumento, NumeroDocumento, Anio_periodo, Mes_Periodo
	FROM CLIENTE C INNER JOIN PROCESO P 
		ON (C.Codigo_Cliente = P.Codigo_Cliente) 
	WHERE Codigo_proceso = @Codigo_proceso
END


GO
/****** Object:  StoredProcedure [dbo].[GetInfoPagoNoPago]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetInfoPagoNoPago]
@Codigo_proceso AS nvarchar ( 36 )
AS
BEGIN
	SELECT DLNP, DLCM, DLNE, Pago 
	FROM ClienteCuota
	WHERE Codigo_proceso = @Codigo_proceso 
END


GO
/****** Object:  StoredProcedure [dbo].[GetInfoProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetInfoProceso]
@Codigo_Cliente 	numeric,
@Anio_periodo		char(4),
@Mes_Periodo		char(2),
@Fecha_ProcesoAS400	char(8)
AS
BEGIN
/* Obtener la informacion del proceso de carga de convenios*/
	SELECT [Codigo_proceso], [Estado], 
	CanReprocess = case when [Estado] = 'A2' THEN
				CAST ( 0 AS BIT )
			ELSE	CAST ( 1 AS BIT ) 
			END
	FROM [Proceso]
	where [Anio_periodo]		= @Anio_periodo
		and [Mes_Periodo]	= @Mes_Periodo
		and [Codigo_Cliente]	= @Codigo_Cliente 
		and Fecha_ProcesoAS400	= @Fecha_ProcesoAS400
END


GO
/****** Object:  StoredProcedure [dbo].[GetInfoProcesoCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetInfoProcesoCliente]
@Codigo_proceso AS UNIQUEIDENTIFIER
as
BEGIN
-- Obtenemos el mes y el año del proceso, y datos de tipo y numero de documento del cliente para fines de informacion
-- 20040316 - Adicionamos Fecha_ProcesoAS400 como clave alterna del proceso
	select Nombre_Cliente, Anio_periodo, Mes_Periodo, Fecha_ProcesoAS400, TipoDocumento, NumeroDocumento
	from proceso p inner join cliente c 
		on ( p.Codigo_Cliente = c.Codigo_Cliente)  
	where codigo_proceso = @Codigo_proceso
END


GO
/****** Object:  StoredProcedure [dbo].[getInformacionFirmantes]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20121120				*/
/* Observacion	: Modificar el SP para que busque Firmantes en base	*/
/*     		: al Cliente						*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[getInformacionFirmantes]
@UserId		varchar(100)	,
@proceso 	as varchar(36)
AS
BEGIN
SET NOCOUNT ON 

DECLARE	@Codigo_Cliente AS NUMERIC

/*****************************/
/* Aqui obtenemos el Cliente */
/*****************************/
SELECT	@Codigo_Cliente	= [Codigo_Cliente]
FROM	[Proceso]
WHERE	Codigo_Proceso	= @proceso

/******************************************/
/* Aqui obtenemos los datos de las Firmas */
/******************************************/
SELECT	CF.EjecutivoId, EjecutivoNombre, EjecutivoCargo, EjecutivoImagePath
INTO	#TMP
FROM	ClienteFirma CF 
INNER JOIN FirmaEjecutivo FE ON (CF.EjecutivoId = FE.EjecutivoId)
WHERE	Codigo_Cliente = @Codigo_Cliente AND 
	UserId = ''
ORDER BY orden 

SET NOCOUNT OFF

IF EXISTS ( SELECT NULL FROM #TMP ) 
BEGIN
	SELECT * FROM #TMP
END
ELSE
BEGIN
	SELECT EjecutivoId =0, EjecutivoNombre= '', EjecutivoCargo= '', EjecutivoImagePath = 'sign/VOID0.bmp'
	UNION 
	SELECT EjecutivoId =0, EjecutivoNombre= '', EjecutivoCargo= '', EjecutivoImagePath = 'sign/VOID1.bmp'
END

END


GO
/****** Object:  StoredProcedure [dbo].[getInformacionFormatoSalida]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[getInformacionFormatoSalida]
@codigoProceso as uniqueidentifier
AS
BEGIN
	/*
	* Obtener la informacion del formato de salida para el cliente de acuerdo 
	* al numero de proceso proporcionado
	*/
SET NOCOUNT ON
	DECLARE @Codigo_Cliente NUMERIC ( 9 ) 
	SELECT @Codigo_Cliente = Codigo_Cliente FROM PROCESO WHERE Codigo_proceso = @codigoProceso

SET NOCOUNT OFF
	select 
		FormatoArchivoImportacion
	from cliente 
	WHERE Codigo_Cliente = @Codigo_Cliente
END


GO
/****** Object:  StoredProcedure [dbo].[GetListaClienteUltimoProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetListaClienteUltimoProceso]
AS
BEGIN
	DECLARE	@CODIGO_CLIENTE	INT

	DECLARE	@TABLA1	TABLE
	(
		Codigo_Cliente		INT,
		Nombre_Cliente		VARCHAR(100),
		Tipo_Documento		VARCHAR(1),
		Numero_Documento	VARCHAR(20),
		Codigo_IBS			INT	
	)

	DECLARE @TABLA2	TABLE
	(
		Codigo_Cliente		INT,
		Nombre_Cliente		VARCHAR(100),
		Tipo_Documento		VARCHAR(1),
		Numero_Documento	VARCHAR(20),
		Codigo_IBS			INT,	
		Codigo_Proceso		VARCHAR(1000),
		Estado				VARCHAR(10),
		Anio_Periodo		INT,
		Mes_Periodo			INT	
	)

	INSERT INTO @TABLA1
	SELECT
		P.CODIGO_CLIENTE,
		C.NOMBRE_CLIENTE,
		C.TIPODOCUMENTO,
		C.NUMERODOCUMENTO,
		C.CODIGO_IBS	
	FROM [dbo].[Proceso] P
	INNER JOIN [dbo].[Cliente] C ON P.CODIGO_CLIENTE = C.CODIGO_CLIENTE
	INNER JOIN [dbo].[AlertaCliente] AC ON C.Codigo_Cliente = AC.iClienteId
	WHERE
			C.CODIGO_IBS > 0
	GROUP BY P.CODIGO_CLIENTE, C.NOMBRE_CLIENTE,C.TIPODOCUMENTO,C.NUMERODOCUMENTO,C.CODIGO_IBS
	ORDER BY P.CODIGO_CLIENTE

	SET ROWCOUNT 1

	SELECT @CODIGO_CLIENTE = CODIGO_CLIENTE FROM @TABLA1

	WHILE ((SELECT COUNT(*) FROM @TABLA1) > 0)
		BEGIN
			SET ROWCOUNT 0
			
			DECLARE @CODIGO_PROCESO	VARCHAR(1000)

			SET @CODIGO_PROCESO = (SELECT TOP 1 Codigo_Proceso FROM [dbo].[Proceso] WHERE Codigo_Cliente = @CODIGO_CLIENTE AND Estado IN ( 'P2' , 'G1' ) ORDER BY CAST(Anio_Periodo AS INTEGER) DESC, CAST(Mes_Periodo AS INTEGER) DESC)

			IF NOT ISNULL(@CODIGO_PROCESO,'') = ''
				BEGIN
					INSERT INTO @TABLA2
					SELECT 
						CODIGO_CLIENTE,
						NOMBRE_CLIENTE,
						TIPO_DOCUMENTO,
						NUMERO_DOCUMENTO,
						CODIGO_IBS,
						(SELECT TOP 1 ISNULL(Codigo_Proceso,'') FROM [dbo].[Proceso] WHERE Codigo_Cliente = @CODIGO_CLIENTE AND Estado  IN ( 'P2' , 'G1' ) ORDER BY CAST(Anio_Periodo AS INTEGER) DESC, CAST(Mes_Periodo AS INTEGER) DESC),
						(SELECT TOP 1 ISNULL(Estado,'') FROM [dbo].[Proceso] WHERE Codigo_Cliente = @CODIGO_CLIENTE AND Estado  IN ( 'P2' , 'G1' ) ORDER BY CAST(Anio_Periodo AS INTEGER) DESC, CAST(Mes_Periodo AS INTEGER) DESC),
						(SELECT TOP 1 ISNULL(Anio_Periodo,0) FROM [dbo].[Proceso] WHERE Codigo_Cliente = @CODIGO_CLIENTE AND Estado  IN ( 'P2' , 'G1' ) ORDER BY CAST(Anio_Periodo AS INTEGER) DESC, CAST(Mes_Periodo AS INTEGER) DESC),
						(SELECT TOP 1 ISNULL(Mes_Periodo,0) FROM [dbo].[Proceso] WHERE Codigo_Cliente = @CODIGO_CLIENTE AND Estado  IN ( 'P2' , 'G1' ) ORDER BY CAST(Anio_Periodo AS INTEGER) DESC, CAST(Mes_Periodo AS INTEGER) DESC)
					FROM @TABLA1
					WHERE
						CODIGO_CLIENTE = @CODIGO_CLIENTE

				END
			
			DELETE @TABLA1 WHERE CODIGO_CLIENTE = @CODIGO_CLIENTE

			SET ROWCOUNT 1

			SELECT @CODIGO_CLIENTE = CODIGO_CLIENTE FROM @TABLA1
				
		END

	SET ROWCOUNT 0

	SELECT * FROM @TABLA2
END

/*

Pruebas Unitarias

exec [dbo].[GetListaClienteUltimoProceso]

select * from alertacliente

*/




GO
/****** Object:  StoredProcedure [dbo].[GetListadoCuotasPorVencer]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetListadoCuotasPorVencer]
@Codigo_proceso AS NVARCHAR (36),
@DLST		varchar (1 ), --Status del Trabajador
@DLMO 		varchar (3 ),
@DLAG		decimal
AS
BEGIN
	--declare @Codigo_proceso 	uniqueidentifier
	/*DECLARE @Anhio as decimal
	declare @mes as decimal*/
	--set @Codigo_proceso = '1BA92ACB-3114-499D-A1DC-5533E4BB8F36'
	
		SELECT DLNP, CRE.DLCUN, CC.DLNE, CRE.DLOAM, CRE.DLPRI, 2000+HCCR.DLVCA as DLVCA, HCCR.DLVCM,
			CNT.DLCNC1, max(HCCR.DLNCT) - CC.NUMCUOTAS AS DLNCT,
			CNT.DLCNC1-( max(HCCR.DLNCT)   - CC.NUMCUOTAS ) AS CPENDIENTES,
			CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO, 
			FechaCargoCuenta = case when isdate (
					cast ( 2000 + DLVCA as nvarchar (4) )  +
					case when len ( cast (DLVCM as nvarchar ( 2 ) )) = 1 then 
						'0'+ cast (DLVCM as nvarchar ( 2 ) )
					else
						cast (DLVCM as nvarchar ( 2 ) )
					end
					+
					case when len ( cast (DLVCD as nvarchar ( 2 )) ) = 1 then 
						'0' + cast ( DLVCD as nvarchar (2 ) )
					else
						cast (DLVCD as nvarchar ( 2 ) )
					end 
				) = 1 then
				
				cast ( 
					cast ( 2000 + DLVCA as nvarchar (4) )  +
					case when len ( cast (DLVCM as nvarchar ( 2 ) )) = 1 then 
						'0'+ cast (DLVCM as nvarchar ( 2 ) )
					else
						cast (DLVCM as nvarchar ( 2 ) )
					end
					+
					case when len ( cast (DLVCD as nvarchar ( 2 )) ) = 1 then 
						'0' + cast ( DLVCD as nvarchar (2 ) )
					else
						cast (DLVCD as nvarchar ( 2 ) )
					end 
				as datetime ) 
				else
			null end,  cc.DLST,  CC.DLAG
		FROM CLIENTECUOTA CC INNER JOIN DLCRE CRE 
				ON ( CC.DLCC =  CRE.DLCCC 
				     AND CC.DLAN = CRE.DLAÑO
				     AND CC.DLAG = CRE.DLAGC
				     AND CC.DLCO = CRE.DLCOC 
				     AND CRE.DLACC = CC.DLNP)	
			INNER JOIN DLCNT CNT ON (CNT.DLCACC = CC.DLNP)
			LEFT JOIN HistoricoDLCCR HCCR 
					on ( HCCR.DLACC = CC.DLNP 
						and HCCR.[Codigo_proceso] = cc.[Codigo_proceso] 
						AND CNT.DLCACC = CC.DLNP)
	WHERE cc.[Codigo_proceso] = @codigo_proceso
		and cc.DLST = case when rtrim(ltrim(@DLST)) = '-' then cc.DLST else @DLST end 
		and cc.DLMO = case when rtrim ( @DLMO ) = '' then cc.DLMO else @DLMO end
		AND CC.DLAG = @DLAG 
	GROUP BY DLNP, CRE.DLCUN, CC.DLNE, CRE.DLOAM, CRE.DLPRI, HCCR.DLVCA, HCCR.DLVCM,
			CNT.DLCNC1, HCCR.DLNCT , --HCCR1.DLNCT,
			 CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO, CC.NUMCUOTAS, HCCR.DLVCD, 
			 cc.DLST,  cc.DLMO, CC.DLAG
	ORDER BY DLNE
END



GO
/****** Object:  StoredProcedure [dbo].[GetListadoCuotasPorVencerCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/                          

/*     Se agrega campos: nro propuesta,reenganche,cuota doble,fecha desembolso,estado trabajador,dni*/              



/************************************************************************/                          


CREATE OR ALTER PROCEDURE [dbo].[GetListadoCuotasPorVencerCliente]                                                     



@Codigo_proceso AS NVARCHAR (36)                                                      



AS                                                      



BEGIN                                                      

DECLARE @L_PARAMETROID INT
SET	@L_PARAMETROID = 10                         


 DECLARE @NumeroDocumento AS nvarchar(12)                                                    



 DECLARE @CODIGO_CLIENTE AS INT                                          



 DECLARE @CODIGO_CLIENTE_IBS AS INT                                                     



 DECLARE @TIPO_CUOTA AS INT                                                     



 --Envio de la informacion del cronograma futuro en formato CSV                                                      



                                         



 SET NOCOUNT ON                                                       



                                         



 SELECT @NumeroDocumento = NumeroDocumento                                                       



 FROM CLIENTE C INNER JOIN PROCESO P                                                       



    ON (C.Codigo_Cliente = P.Codigo_Cliente)                                                      



 WHERE Codigo_proceso = @Codigo_proceso                                                      



 SET NOCOUNT OFF                                                      



                                                    



 SELECT @CODIGO_CLIENTE = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                                                    



                                         



 SELECT  TOP 1 @CODIGO_CLIENTE_IBS = DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @Codigo_proceso                                                    



 GROUP BY DLCC                                                    



                                                    



 SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                                                    



                   



 SELECT @NumeroDocumento = NumeroDocumento                                                 



 FROM CLIENTE C INNER JOIN PROCESO P                                                 



 ON (C.Codigo_Cliente = P.Codigo_Cliente)                                                



 WHERE Codigo_proceso = @Codigo_proceso                                          



                                       



 SET NOCOUNT ON                



                                            



                                                                                  



 IF @TIPO_CUOTA = 1                                                    



 BEGIN                                                  



                                        



              



  SELECT DLNP, CRE.DLCUN,                               



  CASE WHEN CRE.DLCEM <> '' THEN                       



        --ADD 06/11/2013 NCA: PARA CASOS EN QUE DLCEM TENGA DATOS PERO SE REQUIERA APAREZCA DNI EN CAMPO CODIGO TRABAJADOR                 



        --ADD 02/07/2014 SE AÑADE EMPRESAS AGRICOLA SAN JUAN, LA POSITIVA, SANITAS Y GILDEMEISTER CAMBIOS HM                   



        CASE WHEN @NumeroDocumento IN ('20100091896','20512217452','20132373958','20440374248','20162580672','20174738085','20481592063','20156058719','20132373958','20174738085','20481592063','20156058719','20221084684','20100018625','20418108151','20228
319768','20515351541','20307146798','20302241598','20543725821','20301837896','20266352337','20132243230', '20103272964', '20506006024' , '20100210909','20523470761', '20438933272','20337889167') THEN 



         convert(varchar(8),DLDNI)                      



        ELSE                      



         CONVERT(VARCHAR(10), RTRIM(LTRIM(CRE.DLCEM)))                             



        END                      



        --END ADD                      



 --ELSE case when  @NumeroDocumento = '20100152356'         --modificado javier castañeda                            



 ELSE case when  @NumeroDocumento IN ('20100152356', '20483721553','20100085225','20204621242','20522346030','20100091896','20512217452','20132373958','20174738085','20481592063','20156058719','20132373958','20440374248','20162580672','20174738085','20481
592063','20156058719', '20221084684','20100018625','20418108151','20228319768'



,'20515351541','20307146798','20302241598','20543725821','20301837896','20266352337','20132243230', '20103272964', '20506006024' , '20100210909', '20523470761','20438933272','20337889167')        --modificado ENRIQUE SALINAS 04/04/2012                    


    



  



  then  convert(varchar(8),DLDNI) else '' end  END'DLCEM',                                           



  CC.DLNE, CRE.DLOAM, CRE.DLPRI, --2000+HCCR.DLVCA as DLVCA, HCCR.DLVCM,                                                      



  SUBSTRING (                                                       



  MIN(cast ( 2000 + HCCR.DLVCA as nvarchar (4) )  +                                                      



  case when len ( cast (HCCR.DLVCM as nvarchar ( 2 ) )) = 1 then                                  



  '0'+ cast (HCCR.DLVCM as nvarchar ( 2 ) )                                                      



  else                                                      



  cast (HCCR.DLVCM as nvarchar ( 2 ) ) end),1, 4 )  as DLVCA,                                                       



  SUBSTRING (                                                       



  min(cast ( 2000 + HCCR.DLVCA as nvarchar (4) )  +                                                      



  case when len ( cast (HCCR.DLVCM as nvarchar ( 2 ) )) = 1 then                                                       



  '0'+ cast (HCCR.DLVCM as nvarchar ( 2 ) )                                                      



  else                                                      



  cast (HCCR.DLVCM as nvarchar ( 2 ) ) end),5, 2 ) as DLVCM,                                                      



  CNT.DLCNC1,                                                       



  min(HCCR.DLNCT) - 1    AS DLNCT,                                                      



  CNT.DLCNC1 - (min(HCCR.DLNCT) - 1)  AS CPENDIENTES,                                   



  SUM(HCCR.DLITF) AS DLITF,                



  CC.DLIC, CC.DLESD,                                                       



  DLCM = CASE  WHEN @NumeroDocumento in('20453537537','20100152356') THEN -- RESPINOZA 20080111 - Adicionar codigo modular a empresa ANGELES MINERIA Y CONSTRUCCION S.A.C.                                              



  convert(varchar(20),DLDNI)                            



  WHEN @NumeroDocumento = '20132243230' THEN -- AHSP 20080714: CMAC Trujillo desea el DNI                                                      



  convert(varchar(20),DLDNI)        --DLDNI   



  



WHEN @NumeroDocumento = '20438933272' THEN -- AHSP 20080714: TRANSPORTES LINEA DESEA DNI                                                       



  convert(varchar(20),DLDNI)        --DLDNI     



 



WHEN @NumeroDocumento = '20337889167' THEN -- AHSP 20080714: TRANSPORTES LINEA DESEA DNI                                                       



  convert(varchar(20),DLDNI)        --DLDNI  



                                                     



  ELSE                                                      



  convert(varchar(20), ISNULL(CC.DLCM, ''))        



  END ,                                                       



  DLMO = rtrim(CC.DLMO),                    



  FechaCargoCuenta = MIN(case when isdate (                                                      



  cast ( 2000 + HCCR.DLVCA as nvarchar (4) )  +                                                      



 case when len ( cast (HCCR.DLVCM as nvarchar ( 2 ) )) = 1 then                                                       



  '0'+ cast (HCCR.DLVCM as nvarchar ( 2 ) )                                    



  else                                                      



  cast (HCCR.DLVCM as nvarchar ( 2 ) )                                                      



  end  + case when len ( cast (HCCR.DLVCD as nvarchar ( 2 )) ) = 1 then '0' + cast ( HCCR.DLVCD as nvarchar (2 ) )                                                      



  else                                                      



  cast (HCCR.DLVCD as nvarchar ( 2 ) )                                                      



  end) = 1 then                                                    



  cast ( cast ( 2000 + HCCR.DLVCA as nvarchar (4) )  +                                                      



  case when len ( cast (HCCR.DLVCM as nvarchar ( 2 ) )) = 1 then                                                       



  '0'+ cast (HCCR.DLVCM as nvarchar ( 2 ) ) else                                                      



  cast (HCCR.DLVCM as nvarchar ( 2 ) )                                                      



  end +                                                      



  case when len ( cast (HCCR.DLVCD as nvarchar ( 2 )) ) = 1 then                              



  '0' + cast ( HCCR.DLVCD as nvarchar (2 ) ) else                                                      



  cast (HCCR.DLVCD as nvarchar ( 2 ) )                                                      



  end as datetime )                                                       



  else                                                      



  null end)                                



  --,DLST  = rtrim( CASE WHEN @CODIGO_CLIENTE in( 190828082,190828080,190828393,190828950)                                                     



  --,DLST  = rtrim( CASE WHEN @CODIGO_CLIENTE in( 190828082,190828080,190828393,190828950,190828743) --se añade CAFAE - INS CRIVERA 06-03-2015     
    ,DLST  = rtrim( CASE WHEN @CODIGO_CLIENTE in( SELECT vValor FROM dbo.SystemParameters WHERE iGrupoId = @L_PARAMETROID)

   THEN SUBSTRING(CC.DLCR,1,2) ELSE( CASE WHEN cc.DLST IS NULL OR cc.DLST = '' THEN '' ELSE cc.DLST END ) END),                                                      



  DLAG  = rtrim(CC.DLAG), DLCTA = rtrim(CRE.DLCTA),                                                      



  RTRIM(LTRIM(DLMO +  rtrim(ltrim(rtrim( CASE WHEN cc.DLST IS NULL OR cc.DLST = '' THEN '' ELSE cc.DLST END ))) +   CAST(DLAG AS CHAR(3)) +  CAST(DLCTA AS CHAR(12)))) AS GP 



/* ADD 26/06/2014 NCA: EA2013-273 GENERACION ARCHIVOS DESCUENTOS*/              



  ,CRE.DLSTS /* Tipo Trabajador */              



  ,CASE WHEN @NumeroDocumento IN ('AUX000879711') THEN convert(varchar,convert(datetime, CRE.FINICRE),103) ELSE null END AS FINICRE /* Fecha Desembolso */                



  ,CRE.DLDNI /* Nro DNI */              



  ,CRE.PLDNPR /* Nro de Propuesta */              



  ,CRE.PLDFDE   /* Reenganche */              



  ,CRE.PLCCD /* Cuotas Dobles */              



  ,CR.DLMOD    /* Modalidad */              



  ,isnull(CR.FECHA_PREPA,'') as FECHA_PREPA  /*FECHA PREPAGO*/              



/* END ADD*/               



  FROM CLIENTECUOTA CC INNER JOIN DLCRE CRE                                                       



  ON ( CC.DLCC =  CRE.DLCCC                                                 



  AND CC.DLAN = CRE.DLAÑO                                                      



  AND CC.DLAG = CRE.DLAGC                                                      



  AND CC.DLCO = CRE.DLCOC                                                       



  AND CRE.DLACC = CC.DLNP)     



  INNER JOIN DLCNT CNT ON (CNT.DLCACC = CC.DLNP)                                                      



  LEFT JOIN HistoricoDLCCR HCCR                                                       



  on ( HCCR.DLACC = CC.DLNP                                                       



  and HCCR.[Codigo_proceso] = cc.[Codigo_proceso]                                                       



  AND CNT.DLCACC = CC.DLNP)                      



  left JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP AND CR.Codigo_proceso = cc.Codigo_proceso)                                              



  WHERE cc.[Codigo_proceso] =  @codigo_proceso                                    



  AND DLIC >= 0                                                      



  GROUP BY DLNP, CRE.DLCUN,CRE.DLCEM, CC.DLNE, CRE.DLOAM, CRE.DLPRI, --HCCR.DLVCA, HCCR.DLVCM,                                                      



  CNT.DLCNC1,CC.DLCR, --HCCR.DLNCT , --HCCR1.DLNCT,                                                      



  --HCCR.DLITF,                                                      



  CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO, CC.NUMCUOTAS,-- HCCR.DLVCD,                                 



  cc.DLST,  cc.DLMO, CC.DLAG, CRE.DLCTA, CRE.DLDNI                                                      



/* ADD 26/06/2014 NCA: EA2013-273 GENERACION ARCHIVOS DESCUENTOS*/              



  ,CRE.DLSTS /* Tipo Trabajador */              



  ,CRE.FINICRE /* Fecha Desembolso */      ,CRE.PLDNPR /* Nro de Propuesta */              



  ,CRE.PLDFDE   /* Reenganche */              



  ,CRE.PLCCD /* Cuotas Dobles */              



--  ,CRE.DLMOD    /* Modalidad */              



  ,CR.DLMOD    /* Modalidad */              



  ,CR.FECHA_PREPA  /*FECHA PREPAGO*/              



/* END ADD*/              



  ORDER BY GP, DLCTA, DLNE ,DLST                                           



                                        



 END                                        



 ELSE IF @TIPO_CUOTA = 2                                        



 BEGIN                                        



                                         



                                  



                                          



  SELECT DLNP, CRE.DLCUN,                               



 --CASE WHEN CRE.DLCEM <> '' THEN CONVERT(VARCHAR(10), CONVERT(INT,CRE.DLCEM)) ELSE  '' END 'DLCEM',                                          



 CASE WHEN CRE.DLCEM <> '' THEN                       



       --ADD 06/11/2013 NCA: PARA CASOS EN QUE DLCEM TENGA DATOS PERO SE REQUIERA APAREZCA DNI EN CAMPO CODIGO TRABAJADOR               



       --ADD 02/07/2014 SE AÑADE EMPRESAS AGRICOLA SAN JUAN, LA POSITIVA, SANITAS Y GILDEMEISTER CAMBIOS HM                          



       CASE WHEN @NumeroDocumento IN ('20100091896','20512217452','20132373958','20440374248','20162580672','20174738085','20481592063','20156058719','20132373958','20174738085','20481592063','20156058719', '20221084684','20100018625','20418108151','2022
8319768','20515351541','20307146798','20302241598','20543725821','20301837896','20266352337','20132243230' , '20103272964', '20506006024' , '20100210909',





  



     



     



        



          



             



'20523470761','20438933272','20337889167') THEN                      



        convert(varchar(8),DLDNI)                      



       ELSE                      



        CONVERT(VARCHAR(10), RTRIM(LTRIM(CRE.DLCEM)))                             



       END                      



       --END ADD                      



 --ELSE case when  @NumeroDocumento = '20100152356'    --rhj(no estaba como el original)                             



 ELSE case when  @NumeroDocumento IN ('20100152356', '20483721553','20100085225','20204621242','20522346030','20100091896','20512217452','20132373958','20174738085','20481592063','20156058719','20132373958','20440374248','20162580672','20174738085','20481
592063','20156058719', '20221084684','20100018625','20418108151','20228319768'                    



          ,'20515351541','20307146798','20302241598','20543725821','20301837896','20266352337','20132243230' , '20103272964', '20506006024' , '20100210909',  '20523470761','20438933272','20337889167')  --modificado ENRIQUE SALINAS 04/04/2012              


            



  then  convert(varchar(8),DLDNI) else '' end  END'DLCEM',                                          



  CC.DLNE, CRE.DLOAM, CRE.DLPRI, --2000+HCCR.DLVCA as DLVCA, HCCR.DLVCM,                                                      



  SUBSTRING (     



  MIN(cast ( 2000 + HCCR.DLVCA as nvarchar (4) )  +                                                      



  case when len ( cast (HCCR.DLVCM as nvarchar ( 2 ) )) = 1 then                                                       



  '0'+ cast (HCCR.DLVCM as nvarchar ( 2 ) )                                                      



  else                                                      



  cast (HCCR.DLVCM as nvarchar ( 2 ) ) end),1, 4 )  as DLVCA,                                    



                          



 --SUBSTRING (                                                       



 -- MIN(cast (CC.DLAP as nvarchar (4) )  +                                                      



 -- case when len ( cast (CC.DLMP as nvarchar ( 2 ) )) = 1 then                                                       



 --    '0'+ cast (CC.DLMP as nvarchar ( 2 ) )                                                      



 --    else                                                 



 --    cast (CC.DLMP as nvarchar ( 2 ) ) end),1, 4 )  as DLVCA,                                    



                                   



  SUBSTRING (                                                       



  min(cast ( 2000 + HCCR.DLVCA as nvarchar (4) )  +                                                      



  case when len ( cast (HCCR.DLVCM as nvarchar ( 2 ) )) = 1 then                                                       



  '0'+ cast (HCCR.DLVCM as nvarchar ( 2 ) )                               



  else                                 



  cast (HCCR.DLVCM as nvarchar ( 2 ) ) end),5, 2 ) as DLVCM,                                                      



                                   



 -- SUBSTRING (                                                       



 -- min(cast ( CC.DLAP as nvarchar (4) )  +                                                      



 --    case when len ( cast (CC.DLMP as nvarchar ( 2 ) )) = 1 then                                                       



 --    '0'+ cast (CC.DLMP as nvarchar ( 2 ) )                                                      



 --    else                                                      



 --    cast (CC.DLMP as nvarchar ( 2 ) ) end),5, 2 ) as DLVCM,                          



                                   



  CNT.DLCNC1,                                                       



  min(HCCR.DLNCT) - 1    AS DLNCT,               



  CNT.DLCNC1 - (min(HCCR.DLNCT) - 1)  AS CPENDIENTES,                                                      



  SUM(HCCR.DLITF) AS DLITF,                                                      



  CR.DLIMC 'DLIC', CC.DLESD,                                                       



  DLCM = CASE WHEN @NumeroDocumento = '20453537537' THEN -- RESPINOZA 20080111 - Adicionar codigo modular a empresa ANGELES MINERIA Y CONSTRUCCION S.A.C.                                                      



  DLDNI                                                      



  WHEN @NumeroDocumento = '20132243230' THEN -- AHSP 20080714: CMAC Trujillo desea el DNI                                                      



  DLDNI    



WHEN @NumeroDocumento = '20438933272' THEN -- AHSP 20080714: TRANSPORTES LINEA DESEA DNI                                                       



DLDNI       --DLDNI     



WHEN @NumeroDocumento = '20337889167' THEN -- AHSP 20080714: TRANSPORTES LINEA DESEA DNI                                                       



DLDNI       --DLDNI  



                                                  



  ELSE                                                      



  ISNULL(CC.DLCM, '')                                                      



  END ,                                                       



  DLMO = rtrim(CC.DLMO),                                                       



 -- FechaCargoCuenta = MIN(case when isdate (                                                      



 -- cast ( 2000 + HCCR.DLVCA as nvarchar (4) )  +                                                      



 -- case when len ( cast (HCCR.DLVCM as nvarchar ( 2 ) )) = 1 then                                                       



 -- '0'+ cast (HCCR.DLVCM as nvarchar ( 2 ) )                                                 



 -- else                                                      



 -- cast (HCCR.DLVCM as nvarchar ( 2 ) )                                               



 -- end  + case when len ( cast (HCCR.DLVCD as nvarchar ( 2 )) ) = 1 then '0' + cast ( HCCR.DLVCD as nvarchar (2 ) )                                                      



 -- else                                                     



 -- cast (HCCR.DLVCD as nvarchar ( 2 ) )                                                      



 -- end) = 1 then                                                      



 -- cast ( cast ( 2000 + HCCR.DLVCA as nvarchar (4) )  +                                                      



 -- case when len ( cast (HCCR.DLVCM as nvarchar ( 2 ) )) = 1 then                                                       



 -- '0'+ cast (HCCR.DLVCM as nvarchar ( 2 ) ) else                                                      



 -- cast (HCCR.DLVCM as nvarchar ( 2 ) )                                                      



 -- end +                                                      



 -- case when len ( cast (HCCR.DLVCD as nvarchar ( 2 )) ) = 1 then                                                       



 -- '0' + cast ( HCCR.DLVCD as nvarchar (2 ) ) else                                                      



 -- cast (HCCR.DLVCD as nvarchar ( 2 ) )                                                      



 -- end as datetime )            



 -- else                                                      



 -- null end),                                 



                                 



 FechaCargoCuenta = MIN(case when isdate (                                                      



  cast ( CC.DLAP as nvarchar (4) )  +                                                      



  case when len ( cast (CC.DLMP as nvarchar ( 2 ) )) = 1 then                                                       



  '0'+ cast (CC.DLMP as nvarchar ( 2 ) )                                                      



  else                                            



  cast (CC.DLMP as nvarchar ( 2 ) )                                                    



  end  + case when len ( cast (HCCR.DLVCD as nvarchar ( 2 )) ) = 1 then '0' + cast ( HCCR.DLVCD as nvarchar (2 ) )                                                      



  else                                                      



  cast (HCCR.DLVCD as nvarchar ( 2 ) )                                   



  end) = 1 then       



  cast ( cast (CC.DLAP as nvarchar (4) )  +                                                      



  case when len ( cast (CC.DLMP as nvarchar ( 2 ) )) = 1 then                                     



  '0'+ cast (CC.DLMP as nvarchar ( 2 ) ) else                                                      



  cast (CC.DLMP as nvarchar ( 2 ) )                                                  



  end +                                                      



  case when len ( cast (HCCR.DLVCD as nvarchar ( 2 )) ) = 1 then                                                       



  '0' + cast ( HCCR.DLVCD as nvarchar (2 ) ) else                                                      



  cast (HCCR.DLVCD as nvarchar ( 2 ) )                                                      



  end as datetime )                                                       



  else                                                      



  null end),                                                               



--  DLST  = rtrim( CASE WHEN @CODIGO_CLIENTE in( 190828082,190828080,190828393,190828950)                                                     


                                               
  --DLST  = rtrim( CASE WHEN @CODIGO_CLIENTE in( 190828082,190828080,190828393,190828950,190828743) --se añade CAFAE - INS CRIVERA 06-03-2015     
   DLST  = rtrim( CASE WHEN @CODIGO_CLIENTE in( SELECT vValor FROM dbo.SystemParameters WHERE iGrupoId = @L_PARAMETROID)


   THEN SUBSTRING(CC.DLCR,1,2) ELSE( CASE WHEN cc.DLST IS NULL OR cc.DLST = '' THEN '' ELSE cc.DLST END ) END),                                                      



                                 



  DLAG  = rtrim(CC.DLAG), DLCTA = rtrim(CRE.DLCTA),                                                      



  RTRIM(LTRIM(DLMO +  rtrim(ltrim(rtrim( CASE WHEN cc.DLST IS NULL OR cc.DLST = '' THEN '' ELSE cc.DLST END ))) +   CAST(DLAG AS CHAR(3)) +  CAST(DLCTA AS CHAR(12)))) AS GP                                                       



  --INTO #TMP              



/* ADD 26/06/2014 NCA: EA2013-273 GENERACION ARCHIVOS DESCUENTOS*/              



  ,CRE.DLSTS /* Tipo Trabajador */              



  ,CASE WHEN @NumeroDocumento IN ('AUX000879711') THEN convert(varchar,convert(datetime, CRE.FINICRE),103) ELSE null END AS FINICRE /* Fecha Desembolso */                



  ,CRE.DLDNI /* Nro DNI */              



  ,CRE.PLDNPR /* Nro de Propuesta */              



  ,CRE.PLDFDE   /* Reenganche */              



  ,CRE.PLCCD /* Cuotas Dobles */               



  --,CRE.DLMOD    /* Modalidad */              



   ,CR.DLMOD    /* Modalidad */              



   ,isnull(CR.FECHA_PREPA,'') as FECHA_PREPA  /*FECHA PREPAGO*/              



/* END ADD*/                



  FROM CLIENTECUOTA CC INNER JOIN DLCRE CRE                                                       



  ON ( CC.DLCC =  CRE.DLCCC                                                 



  AND CC.DLAN = CRE.DLAÑO                                                      



  AND CC.DLAG = CRE.DLAGC                                                      



  AND CC.DLCO = CRE.DLCOC                                                       



  AND CRE.DLACC = CC.DLNP)                                                       



  INNER JOIN DLCNT CNT ON (CNT.DLCACC = CC.DLNP)                                                      



  LEFT JOIN HistoricoDLCCR HCCR                                                       



  on ( HCCR.DLACC = CC.DLNP                                                       



  and HCCR.[Codigo_proceso] = cc.[Codigo_proceso]                                                       



  AND CNT.DLCACC = CC.DLNP)           



  INNER JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP AND CR.Codigo_proceso = cc.Codigo_proceso)   --- PARA LA CUOTA DEL MES                                                                            






  



     



             



  WHERE cc.[Codigo_proceso] = @codigo_proceso                                    



  AND DLIC >= 0                                                      



  GROUP BY DLNP, CRE.DLCUN,CRE.DLCEM, CC.DLNE, CRE.DLOAM, CRE.DLPRI, --HCCR.DLVCA, HCCR.DLVCM,                              



  CNT.DLCNC1,CC.DLCR,CR.DLIMC, --HCCR.DLNCT , --HCCR1.DLNCT,                                                      



  --HCCR.DLITF,                                                      



  CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO, CC.NUMCUOTAS,-- HCCR.DLVCD,                                                       



  cc.DLST,  cc.DLMO, CC.DLAG, CRE.DLCTA, CRE.DLDNI              



/* ADD 26/06/2014 NCA: EA2013-273 GENERACION ARCHIVOS DESCUENTOS*/              


  ,CRE.DLSTS /* Tipo Trabajador */              



  ,CRE.FINICRE /* Fecha Desembolso */              



  ,CRE.PLDNPR /* Nro de Propuesta */              



  ,CRE.PLDFDE   /* Reenganche */              



  ,CRE.PLCCD /* Cuotas Dobles */              



  ,CR.DLMOD    /* Modalidad */              



  ,CR.FECHA_PREPA /*FECHA PREPAGO*/              



/* END ADD*/               



  ORDER BY GP, DLCTA, DLNE ,DLST                                          



                                        



 END                                        



 ELSE IF @TIPO_CUOTA = 3                                        



 BEGIN                           



                              



  --CC.DLAP                                  



  --CC.DLMP                                  



                                  



   SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                                            



   INTO #TEMPO                                            



   FROM ClienteCuota CC                                            



   INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                                            



   INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso AND CR.Codigo_proceso = CC.Codigo_proceso                                             



   AND CC.DLNP = CR.DLACC                                            



   AND(CONVERT(INT,                                            



   CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                                             



   CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END +                        



   CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END                                       



   )                                             



   <                                             



 CONVERT(INT,                                            



   CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                                             



   CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END +                                             



   CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                                            



   )                                            



   OR                                            



                                                     



   CONVERT(INT,                               



   CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                                             



   CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                       



   )                                            



   =                                            



   CONVERT(INT,                                            



    CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                                             



        CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                                



   )                                            



   )                                            



   )                                        



  WHERE DLIC >= 0                                        



   GROUP BY CR.DLACC                                            



                                        



                                        



                     



  SELECT DLNP, CRE.DLCUN,                              



  --CASE WHEN CRE.DLCEM <> '' THEN CONVERT(VARCHAR(10), CONVERT(INT,CRE.DLCEM)) ELSE  '' END 'DLCEM',                                          



 CASE WHEN CRE.DLCEM <> '' THEN                       



        --ADD 06/11/2013 NCA: PARA CASOS EN QUE DLCEM TENGA DATOS PERO SE REQUIERA APAREZCA DNI EN CAMPO CODIGO TRABAJADOR               



        --ADD 02/07/2014 SE AÑADE EMPRESAS AGRICOLA SAN JUAN, LA POSITIVA, SANITAS Y GILDEMEISTER CAMBIOS HM                          



        CASE WHEN @NumeroDocumento IN ('20100091896','20512217452','20132373958','20440374248','20162580672','20174738085','20481592063','20156058719','20132373958','20174738085','20481592063','20156058719', '20221084684','20100018625','20418108151','2022
8319768','20515351541','20307146798','20302241598','20543725821','20301837896','20266352337','20132243230' , '20103272964', '20506006024' , '20100210909'

 



 



    



  



        



          



            



, '20523470761','20438933272','20337889167') THEN                      



         convert(varchar(8),DLDNI)                      



        ELSE                      



         CONVERT(VARCHAR(10), RTRIM(LTRIM(CRE.DLCEM)))                             



        END                      



        --END ADD                      



 --ELSE case when  @NumeroDocumento = '20100152356'                            



 ELSE case when  @NumeroDocumento IN ('20100152356', '20483721553','20100085225','20204621242','20522346030','20100091896','20512217452','20132373958','20440374248','20162580672','20174738085','20481592063','20156058719','20132373958','20174738085','20481
592063','20156058719', '20221084684','20100018625','20418108151','20228319768'                    



          ,'20515351541','20307146798','20302241598','20543725821','20301837896','20266352337','20132243230' , '20103272964', '20506006024' , '20100210909', '20523470761','20438933272','20337889167')    --modificado ENRIQUE SALINAS 04/04/2012 SE AGREAG EMPRESA UNIDAD E

                      



  then  convert(varchar(8),DLDNI) else '' end  END'DLCEM',                                          



  CC.DLNE, CRE.DLOAM, CRE.DLPRI, --2000+HCCR.DLVCA as DLVCA, HCCR.DLVCM,                                                      



 -- SUBSTRING (                    



 -- MIN(cast ( 2000 + DLVCA as nvarchar (4) )  +                                                      



 -- case when len ( cast (DLVCM as nvarchar ( 2 ) )) = 1 then                                                  



 --    '0'+ cast (DLVCM as nvarchar ( 2 ) )                                                      



 --    else                                                      



 --    cast (DLVCM as nvarchar ( 2 ) ) end),1, 4 )  as DLVCA,                                     



                                   



 SUBSTRING (                                        



  MIN(cast (CC.DLAP as nvarchar (4) )  +                                                      



  case when len ( cast (CC.DLMP as nvarchar ( 2 ) )) = 1 then                                                       



  '0'+ cast (CC.DLMP as nvarchar ( 2 ) )                                                      



  else                                                      



  cast (CC.DLMP as nvarchar ( 2 ) ) end),1, 4 )  as DLVCA,                                                                                



 -- SUBSTRING (                                                       



 -- min(cast ( 2000 + DLVCA as nvarchar (4) )  +                                                      



 --    case when len ( cast (DLVCM as nvarchar ( 2 ) )) = 1 then                                                       



 --    '0'+ cast (DLVCM as nvarchar ( 2 ) )                                                      



 --    else                                                      



 --    cast (DLVCM as nvarchar ( 2 ) ) end),5, 2 ) as DLVCM,                               



                                             



  SUBSTRING (                                                       



  min(cast ( CC.DLAP as nvarchar (4) )  +                                                      



  case when len ( cast (CC.DLMP as nvarchar ( 2 ) )) = 1 then                                     



  '0'+ cast (CC.DLMP as nvarchar ( 2 ) )                                                      



  else                                                      



  cast (CC.DLMP as nvarchar ( 2 ) ) end),5, 2 ) as DLVCM,                                   



                                            



  CNT.DLCNC1,                                                       



  min(HCCR.DLNCT) - 1    AS DLNCT,                                                      



  CNT.DLCNC1 - (min(HCCR.DLNCT) - 1)  AS CPENDIENTES,                                                      



  SUM(HCCR.DLITF) AS DLITF,                                                      



  T.CUOTA 'DLIC', CC.DLESD,                                                       



  DLCM = CASE  WHEN @NumeroDocumento = '20453537537' THEN -- RESPINOZA 20080111 - Adicionar codigo modular a empresa ANGELES MINERIA Y CONSTRUCCION S.A.C.                               



  DLDNI                                               



  WHEN @NumeroDocumento = '20132243230' THEN -- AHSP 20080714: CMAC Trujillo desea el DNI                                                      



  DLDNI       



  WHEN @NumeroDocumento = '20438933272' THEN -- AHSP 20080714: CMAC Trujillo desea el DNI                                                      



  DLDNI  



      



  WHEN @NumeroDocumento = '20337889167' THEN -- AHSP 20080714: CMAC Trujillo desea el DNI                                                      



  DLDNI  



   

   

   WHEN @NumeroDocumento = '20512217452' THEN --AGUALIMA



  DLDNI  

   

      

   WHEN @NumeroDocumento = '20132373958' THEN --CHIMU AGROPECUARIA SA



  DLDNI  

   

   

      WHEN @NumeroDocumento = '20440374248' THEN --GOBIERNO REGIONAL LA LIBERTAD

  DLDNI  

       WHEN @NumeroDocumento = '20162580672' THEN --GOBIERNO REGIONAL LA LIBERTAD

  DLDNI  

   

         WHEN @NumeroDocumento = '20174738085' THEN --MUNICIPALIDAD DISTRITAL DE VICTOR LARCO HERRERA

  DLDNI  

   

                                        

   

         WHEN @NumeroDocumento = '20481592063' THEN --SERVICIO DE GESTION AMBIENTAL DE TRUJILLO

  DLDNI  

   





      

         WHEN @NumeroDocumento = '20156058719' THEN --PROYECTO ESPECIAL CHAVIMOCHIC

  DLDNI  

   

  ELSE                                                      



  ISNULL(CC.DLCM, '')                                                      



  END ,                                                       



  DLMO = rtrim(CC.DLMO),                                                       



 -- FechaCargoCuenta = MIN(case when isdate (                                                      



 -- cast ( 2000 + DLVCA as nvarchar (4) )  +                               



 -- case when len ( cast (DLVCM as nvarchar ( 2 ) )) = 1 then                                                       



 -- '0'+ cast (DLVCM as nvarchar ( 2 ) )                                                      



 -- else                                                      



 -- cast (DLVCM as nvarchar ( 2 ) )                                                  



 -- end  + case when len ( cast (DLVCD as nvarchar ( 2 )) ) = 1 then '0' + cast ( DLVCD as nvarchar (2 ) )                                                      



 -- else                                 



 -- cast (DLVCD as nvarchar ( 2 ) )                                                      



 -- end) = 1 then                                                      



 -- cast ( cast ( 2000 + DLVCA as nvarchar (4) )  +                                        



 -- case when len ( cast (DLVCM as nvarchar ( 2 ) )) = 1 then       



 -- '0'+ cast (DLVCM as nvarchar ( 2 ) ) else                                                      



 -- cast (DLVCM as nvarchar ( 2 ) )                                                      



 -- end +                                                      



 -- case when len ( cast (DLVCD as nvarchar ( 2 )) ) = 1 then                                                       



 -- '0' + cast ( DLVCD as nvarchar (2 ) ) else                                                      



 -- cast (DLVCD as nvarchar ( 2 ) )                                                      



 -- end as datetime )                                                       



 -- else             



 -- null end),                   



                                   



 -- CC.DLAP                                  



 -- CC.DLMP                                  



                                   



 FechaCargoCuenta = MIN(case when isdate (                                    



  cast ( CC.DLAP as nvarchar (4) )  +                                                      



  case when len ( cast (CC.DLMP as nvarchar ( 2 ) )) = 1 then                                                       



  '0'+ cast (CC.DLMP as nvarchar ( 2 ) )                                                      



  else                                                      



  cast (CC.DLMP as nvarchar ( 2 ) )                                                      



  end  + case when len ( cast (HCCR.DLVCD as nvarchar ( 2 )) ) = 1 then '0' + cast ( HCCR.DLVCD as nvarchar (2 ) )                                      



  else                                                      



  cast (HCCR.DLVCD as nvarchar ( 2 ) )                             



  end) = 1 then                                                      



  cast ( cast (CC.DLAP as nvarchar (4) )  +                                                      



  case when len ( cast (CC.DLMP as nvarchar ( 2 ) )) = 1 then                                                       



  '0'+ cast (CC.DLMP as nvarchar ( 2 ) ) else                                                      



  cast (CC.DLMP as nvarchar ( 2 ) )                                                      



  end +                                              



  case when len ( cast (HCCR.DLVCD as nvarchar ( 2 )) ) = 1 then                                                       



  '0' + cast ( HCCR.DLVCD as nvarchar (2 ) ) else                                                      



  cast (HCCR.DLVCD as nvarchar ( 2 ) )                                                      



  end as datetime )                                                       



  else                                                      



  null end),                              



                                   



  --DLST  = rtrim( CASE WHEN @CODIGO_CLIENTE in( 190828082,190828080,190828393,190828950)                                                     



  --DLST  = rtrim( CASE WHEN @CODIGO_CLIENTE in( 190828082,190828080,190828393,190828950,190828743) --se añade CAFAE - INS CRIVERA 06-03-2015           
   DLST  = rtrim( CASE WHEN @CODIGO_CLIENTE in( SELECT vValor FROM dbo.SystemParameters WHERE iGrupoId = @L_PARAMETROID)


   THEN SUBSTRING(CC.DLCR,1,2) ELSE( CASE WHEN cc.DLST IS NULL OR cc.DLST = '' THEN '' ELSE cc.DLST END ) END),                                                      



  DLAG  = rtrim(CC.DLAG), DLCTA = rtrim(CRE.DLCTA),                                                      



  RTRIM(LTRIM(DLMO +  rtrim(ltrim(rtrim( CASE WHEN cc.DLST IS NULL OR cc.DLST = '' THEN '' ELSE cc.DLST END ))) +   CAST(DLAG AS CHAR(3)) +  CAST(DLCTA AS CHAR(12)))) AS GP                                                       



  --INTO #TMP              



/* ADD 26/06/2014 NCA: EA2013-273 GENERACION ARCHIVOS DESCUENTOS*/              



  ,CRE.DLSTS /* Tipo Trabajador */              



  ,CASE WHEN @NumeroDocumento IN ('AUX000879711') THEN convert(varchar,convert(datetime, CRE.FINICRE),103) ELSE null END AS FINICRE /* Fecha Desembolso */                


  ,CRE.DLDNI /* Nro DNI */              



  ,CRE.PLDNPR /* Nro de Propuesta */              



  ,CRE.PLDFDE   /* Reenganche */              



  ,CRE.PLCCD /* Cuotas Dobles */              



  --,CRE.DLMOD    /* Modalidad */              



    ,CR.DLMOD    /* Modalidad */              



    ,isnull(CR.FECHA_PREPA,'') as FECHA_PREPA /*FECHA PREPAGO*/              



/* END ADD*/                       



                                           



  FROM CLIENTECUOTA CC INNER JOIN DLCRE CRE                                                       



  ON ( CC.DLCC =  CRE.DLCCC                                                 



  AND CC.DLAN = CRE.DLAÑO                                                      



  AND CC.DLAG = CRE.DLAGC                                   



  AND CC.DLCO = CRE.DLCOC                                                       



  AND CRE.DLACC = CC.DLNP)                                                       



  INNER JOIN DLCNT CNT ON (CNT.DLCACC = CC.DLNP)                                                      



  LEFT JOIN HistoricoDLCCR HCCR                                                       



  on ( HCCR.DLACC = CC.DLNP                                                       



  and HCCR.[Codigo_proceso] = cc.[Codigo_proceso]                                                       



  AND CNT.DLCACC = CC.DLNP)                                        



  --INNER JOIN DLCCR CR ON (CR.DLACC = CC.DLNP AND DLVCA = (CC.DLAP - 2000) AND DLVCM =CC.DLMP )   --- PARA LA CUOTA DEL MES                                                                                      



  INNER JOIN #TEMPO T ON (T.PAGARE = CC.DLNP)                                            



  left JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP AND CR.Codigo_proceso = cc.Codigo_proceso)       



  WHERE cc.[Codigo_proceso] = @codigo_proceso                                    



  AND DLIC >= 0                                                      



  GROUP BY DLNP, CRE.DLCUN,CRE.DLCEM, CC.DLNE, CRE.DLOAM, CRE.DLPRI, --HCCR.DLVCA, HCCR.DLVCM,                                                      



  CNT.DLCNC1,CC.DLCR, --HCCR.DLNCT , --HCCR1.DLNCT,                                                      



  --HCCR.DLITF,                                                      



  CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO, CC.NUMCUOTAS,-- HCCR.DLVCD,                                              



  cc.DLST,  cc.DLMO, CC.DLAG, CRE.DLCTA, CRE.DLDNI ,T.CUOTA              



/* ADD 26/06/2014 NCA: EA2013-273 GENERACION ARCHIVOS DESCUENTOS*/              



  ,CRE.DLSTS /* Tipo Trabajador */              



  ,CRE.FINICRE /* Fecha Desembolso */              



  ,CRE.PLDNPR /* Nro de Propuesta */              



  ,CRE.PLDFDE   /* Reenganche */              



  ,CRE.PLCCD /* Cuotas Dobles */              



  --,CRE.DLMOD    /* Modalidad */              



   ,CR.DLMOD  /* Modalidad */              



  ,CR.FECHA_PREPA /*FECHA PREPAGO*/                                           



/* END ADD*/                



  ORDER BY GP, DLCTA, DLNE ,DLST                                         



                                           



 END                                        



                              



SET NOCOUNT OFF                                               



                                                      



END              



              



              



/*              



PRUEBAS UNITARIAS              



*****************              



EXEC DBO.GetListadoCuotasPorVencerCliente  '72eeb24e-7af4-4f7e-86e3-6a9e90bf7784'              



sp_helptext GetListadoCuotasPorVencerCliente              



*/ 
GO
/****** Object:  StoredProcedure [dbo].[GetListadoCuotasPorVencerCliente_OLD]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetListadoCuotasPorVencerCliente_OLD]
@Codigo_proceso AS NVARCHAR (36)
AS
BEGIN
SET NOCOUNT ON 
		SELECT DLNP, CRE.DLCUN, CC.DLNE, CRE.DLOAM, CRE.DLPRI, 2000+HCCR.DLVCA as DLVCA, HCCR.DLVCM,
			CNT.DLCNC1, min(HCCR.DLNCT) - CC.NUMCUOTAS AS DLNCT,
			CNT.DLCNC1-( min(HCCR.DLNCT)   - CC.NUMCUOTAS ) AS CPENDIENTES,
			HCCR.DLITF,
			CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO, 
			FechaCargoCuenta = case when isdate (
					cast ( 2000 + DLVCA as nvarchar (4) )  +
					case when len ( cast (DLVCM as nvarchar ( 2 ) )) = 1 then 
						'0'+ cast (DLVCM as nvarchar ( 2 ) )
					else
						cast (DLVCM as nvarchar ( 2 ) )
					end
					+
					case when len ( cast (DLVCD as nvarchar ( 2 )) ) = 1 then 
						'0' + cast ( DLVCD as nvarchar (2 ) )
					else
						cast (DLVCD as nvarchar ( 2 ) )
					end 
				) = 1 then
				
				cast ( 
					cast ( 2000 + DLVCA as nvarchar (4) )  +
					case when len ( cast (DLVCM as nvarchar ( 2 ) )) = 1 then 
						'0'+ cast (DLVCM as nvarchar ( 2 ) )
					else
						cast (DLVCM as nvarchar ( 2 ) )
					end
					+
					case when len ( cast (DLVCD as nvarchar ( 2 )) ) = 1 then 
						'0' + cast ( DLVCD as nvarchar (2 ) )
					else
						cast (DLVCD as nvarchar ( 2 ) )
					end 
				as datetime ) 
				else
			null end,  cc.DLST,  CC.DLAG, CRE.DLCTA,
		 DLMO +  DLST +   CAST(DLAG AS CHAR(3)) +  CAST(DLCTA AS CHAR(12)) AS GP 
	--INTO #TMP
	FROM CLIENTECUOTA CC INNER JOIN DLCRE CRE 
				ON ( CC.DLCC =  CRE.DLCCC 
				     AND CC.DLAN = CRE.DLAÑO
				     AND CC.DLAG = CRE.DLAGC
				     AND CC.DLCO = CRE.DLCOC 
				     AND CRE.DLACC = CC.DLNP)	
			INNER JOIN DLCNT CNT ON (CNT.DLCACC = CC.DLNP)
			LEFT JOIN HistoricoDLCCR HCCR 
					on ( HCCR.DLACC = CC.DLNP 
						and HCCR.[Codigo_proceso] = cc.[Codigo_proceso] 
						AND CNT.DLCACC = CC.DLNP)
	WHERE cc.[Codigo_proceso] = @codigo_proceso
	GROUP BY DLNP, CRE.DLCUN, CC.DLNE, CRE.DLOAM, CRE.DLPRI, HCCR.DLVCA, HCCR.DLVCM,
			CNT.DLCNC1, HCCR.DLNCT , --HCCR1.DLNCT,
			HCCR.DLITF,
			 CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO, CC.NUMCUOTAS, HCCR.DLVCD, 
			 cc.DLST,  cc.DLMO, CC.DLAG, CRE.DLCTA
	ORDER BY DLNE
SET NOCOUNT OFF
END



GO
/****** Object:  StoredProcedure [dbo].[GetListadoCuotasPorVencerCliente2]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
CREATE OR ALTER PROCEDURE [dbo].[GetListadoCuotasPorVencerCliente2]  
 @codigo_proceso as NVARCHAR(36),  
 @modalidad as char(1),  
 @situacionTrabajador as varchar(20)  
AS  
BEGIN  
  
 create table #CuotasPorVencer (    
 DLNP decimal(12,0),  
 DLCUN decimal(9,0),  
 DLCEM varchar(15),  
 DLNE varchar(75),  
 DLOAM decimal(15,2),  
 DLPRI decimal(15,2),  
 DLVCA varchar(4),  
 DLVCM varchar(2),   
 DLCNC1 decimal(3,0),  
 DLNCT decimal(3,0),  
 CPENDIENTES decimal(3,0),  
 DLITF decimal(18,2),  
 DLIC decimal(14,2),  
 DLESD varchar(1),  
 DLCM varchar(20),  
 DLMO varchar(3),  
 FechaCargoCuenta datetime,  
 DLST varchar(20),  
 DLAG decimal(3,0),  
 DLCTA decimal(12,0),  
 GP varchar(40),  
 DLSTS varchar(1),  
 FINICRE varchar(10),  
 DLDNI varchar(15),  
 PLDNPR varchar(15),  
 PLDFDE varchar(1),  
 PLCCD varchar(1),  
 DLMOD VARCHAR(1),  
 FECHA_PREPA VARCHAR(10)  
 )  
   
 DECLARE @FECHA_PROCESO_ATERIOR DATETIME  
SELECT TOP 1   @FECHA_PROCESO_ATERIOR = Fecha_CargaAS400 FROM [dbo].[Proceso] WHERE Codigo_CLIENTE =(SELECT CODIGO_CLIENTE FROM [dbo].[Proceso] WHERE Codigo_proceso = @codigo_proceso) AND  FECHA_CARGAAS400 < (SELECT Fecha_CargaAS400 FROM [dbo].[Proceso] WHERE Codigo_proceso = @codigo_proceso) ORDER BY Fecha_CargaAS400 DESC  
  
   
 insert #CuotasPorVencer exec GetListadoCuotasPorVencerCliente @codigo_proceso  
  
 Select DLNP,DLCUN,DLCEM,DLNE,DLOAM,DLPRI,DLVCA,DLVCM,DLCNC1,DLNCT,CPENDIENTES,DLITF,DLIC,DLESD,DLCM,DLMO,FechaCargoCuenta,DLST,DLAG,DLCTA,GP,DLSTS,FINICRE,DLDNI,PLDNPR,PLDFDE,PLCCD,  
 (case when  DLMOD= 'N' or DLMOD='S' then DLMOD WHEN DLMOD = '' AND (CONVERT(DATETIME , FECHA_PREPA) >= isnull(@FECHA_PROCESO_ATERIOR ,CONVERT(DATETIME , '19000101') )) THEn 'M' else '' end) as DLMOD  --,FECHA_PREPA   
  from #CuotasPorVencer where   
  (@modalidad=(case when  DLMOD= 'N' or DLMOD='S' then DLMOD WHEN DLMOD = '' AND (CONVERT(DATETIME , FECHA_PREPA) >= isnull(@FECHA_PROCESO_ATERIOR ,CONVERT(DATETIME , '19000101') )) THEn 'M' else '' end) or @modalidad='-')   
  and (DLST=@situacionTrabajador or @situacionTrabajador='-' )  
 order by DLNE,DLMO asc   
   
END  
  
GO
/****** Object:  StoredProcedure [dbo].[GetListadoCuotasPorVencerResumen]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetListadoCuotasPorVencerResumen]
@Codigo_proceso AS NVARCHAR (36),
@DLST		varchar (1 ), --Status del Trabajador
@DLMO 		varchar (3 ),
@DLAG		decimal
AS
BEGIN
set NOCOUNT ON 
	--declare @Codigo_proceso 	uniqueidentifier
	/*DECLARE @Anhio as decimal
	declare @mes as decimal*/
	--set @Codigo_proceso = '1BA92ACB-3114-499D-A1DC-5533E4BB8F36'
	
		SELECT DLNP, CRE.DLCUN, CC.DLNE, CRE.DLOAM, CRE.DLPRI, 2000+HCCR.DLVCA as DLVCA, HCCR.DLVCM,
			CNT.DLCNC1, min(HCCR.DLNCT) - CC.NUMCUOTAS AS DLNCT,
			CNT.DLCNC1-( min(HCCR.DLNCT)   - CC.NUMCUOTAS ) AS CPENDIENTES,
			CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO, 
			FechaCargoCuenta = case when isdate (
					cast ( 2000 + DLVCA as nvarchar (4) )  +
					case when len ( cast (DLVCM as nvarchar ( 2 ) )) = 1 then 
						'0'+ cast (DLVCM as nvarchar ( 2 ) )
					else
						cast (DLVCM as nvarchar ( 2 ) )
					end
					+
					case when len ( cast (DLVCD as nvarchar ( 2 )) ) = 1 then 
						'0' + cast ( DLVCD as nvarchar (2 ) )
					else
						cast (DLVCD as nvarchar ( 2 ) )
					end 
				) = 1 then
				
				cast ( 
					cast ( 2000 + DLVCA as nvarchar (4) )  +
					case when len ( cast (DLVCM as nvarchar ( 2 ) )) = 1 then 
						'0'+ cast (DLVCM as nvarchar ( 2 ) )
					else
						cast (DLVCM as nvarchar ( 2 ) )
					end
					+
					case when len ( cast (DLVCD as nvarchar ( 2 )) ) = 1 then 
						'0' + cast ( DLVCD as nvarchar (2 ) )
					else
						cast (DLVCD as nvarchar ( 2 ) )
					end 
				as datetime ) 
				else
			null end
	into #tmp
	FROM CLIENTECUOTA CC INNER JOIN DLCRE CRE 
				ON ( CC.DLCC =  CRE.DLCCC 
				     AND CC.DLAN = CRE.DLAÑO
				     AND CC.DLAG = CRE.DLAGC
				     AND CC.DLCO = CRE.DLCOC 
				     AND CRE.DLACC = CC.DLNP)	
			INNER JOIN DLCNT CNT ON (CNT.DLCACC = CC.DLNP)
			LEFT JOIN HistoricoDLCCR HCCR 
					on ( HCCR.DLACC = CC.DLNP 
						and HCCR.[Codigo_proceso] = cc.[Codigo_proceso] 
						AND CNT.DLCACC = CC.DLNP)
	WHERE cc.[Codigo_proceso] = @codigo_proceso
		and cc.DLST = case when rtrim(ltrim(@DLST)) = '-' then cc.DLST else @DLST end 
		and cc.DLMO = case when rtrim ( @DLMO ) = '' then cc.DLMO else @DLMO end
		AND CC.DLAG = @DLAG 
	GROUP BY DLNP, CRE.DLCUN, CC.DLNE, CRE.DLOAM, CRE.DLPRI, HCCR.DLVCA, HCCR.DLVCM,
			CNT.DLCNC1, HCCR.DLNCT , --HCCR1.DLNCT,
			 CC.DLIC, CC.DLESD, CC.DLCM, CC.DLMO, CC.NUMCUOTAS, HCCR.DLVCD
	ORDER BY DLNE
set NOCOUNT OFF
select  count (1 ) as COUNTER,
		SUM( DLOAM) as SOAM , 
		SUM( DLPRI) AS SPRI, 
		SUM( DLIC )  AS SIC
from #tmp
END


GO
/****** Object:  StoredProcedure [dbo].[GetMensajeEstado]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetMensajeEstado]
@CodigoId CHAR(2),
@Tabla varchar(30)
AS
BEGIN
	SELECT [CodigoNombre], [CodigoDescripcion], [Orden] 
	FROM [CodigoEstado]
	WHERE RTRIM(LTRIM(CodigoId)) = RTRIM(LTRIM(@CodigoId))
		 AND 	RTRIM(LTRIM(Tabla)) = RTRIM(LTRIM(@Tabla))
END


GO
/****** Object:  StoredProcedure [dbo].[GetMesesEnvioArchivoAS400]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetMesesEnvioArchivoAS400]  
@Anio as char(4)  
AS  
BEGIN  
 --realizamos la seleccion de mes del proceso  
 SELECT DISTINCT cast (Mes_Periodo as int ) Mes_Periodo  FROM PROCESO   
 where Anio_periodo  = CASE WHEN RTRIM (@Anio) = '' THEN Anio_periodo  ELSE (@Anio) END  
  AND Estado IN('A2'  ,'A3')
 order by cast (Mes_Periodo as int )   
END  
GO
/****** Object:  StoredProcedure [dbo].[GetMesesProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetMesesProceso]
@Anio as char(4)
AS
BEGIN
	--realizamos la seleccion de mes del proceso
	SELECT DISTINCT cast ( Mes_Periodo  as numeric(3)) Mes_Periodo FROM PROCESO where Anio_periodo  = @Anio
	 order by cast ( Mes_Periodo  as numeric(3))
END


GO
/****** Object:  StoredProcedure [dbo].[GetMesesProcesoDescuentosCompletado]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetMesesProcesoDescuentosCompletado]
@Anio as char(4)
AS
BEGIN
	--realizamos la seleccion de mes del proceso
	SELECT DISTINCT cast ( Mes_Periodo  as int) as Mes_Periodo FROM PROCESO 
	where Anio_periodo  = CASE WHEN RTRIM (@Anio) = '' THEN Anio_periodo  ELSE (@Anio) END
		AND Estado IN ( 'D2', 'A1', 'A2', 'A3', 'EA')
	order by cast ( Mes_Periodo  as int)
END




GO
/****** Object:  StoredProcedure [dbo].[GetMesesProcesoEspera]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetMesesProcesoEspera]
@Anio as char(4)
AS
BEGIN
	--realizamos la seleccion de mes del proceso
	SELECT DISTINCT cast ( Mes_Periodo  as int) Mes_Periodo FROM PROCESO p
	where Anio_periodo  = CASE WHEN RTRIM (@Anio) = '' THEN Anio_periodo  ELSE (@Anio) END
		--AND Estado in ( 'G1', 'EG', 'D2')
		and ([Estado] IN ( 'G1', 'EG', 'D0', 'ED' )
			or (Estado = 'D2' 
				and (select count (1) from clientecuota
					 where Estado not in (  'C0', 'CC', 'CD', 'CL') 
					and [Codigo_proceso] = p.[Codigo_proceso]) > 0))
	order by cast ( Mes_Periodo  as int)
END





GO
/****** Object:  StoredProcedure [dbo].[GetMesesProcesoSeguimiento]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE OR ALTER PROCEDURE [dbo].[GetMesesProcesoSeguimiento]  
@Anio as char(4)  
AS  
BEGIN  
 --realizamos la seleccion de mes del proceso  
 SELECT DISTINCT cast ( Mes_Periodo  as int) Mes_Periodo FROM PROCESO   
 where Anio_periodo  = CASE WHEN RTRIM (@Anio) = '' THEN Anio_periodo  ELSE (@Anio) END  
  AND Estado  IN ('D2', 'ED', 'A1', 'A2', 'EA' ,'A3')  
 order by cast ( Mes_Periodo  as int)  
END  
  
  
  
GO
/****** Object:  StoredProcedure [dbo].[GetModalidad]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetModalidad]  
@Codigo_proceso VARCHAR(36)   
AS                  
BEGIN          
  
DECLARE @FECHA_PROCESO_ATERIOR DATETIME  
SELECT TOP 1   @FECHA_PROCESO_ATERIOR = Fecha_CargaAS400 FROM [dbo].[Proceso] WHERE Codigo_CLIENTE =(SELECT CODIGO_CLIENTE FROM [dbo].[Proceso] WHERE Codigo_proceso = @codigo_proceso) AND  FECHA_CARGAAS400 < (SELECT Fecha_CargaAS400 FROM [dbo].[Proceso] WHERE Codigo_proceso = @codigo_proceso) ORDER BY Fecha_CargaAS400 DESC  
  
Select * from (
  SELECT DISTINCT case when  CR.DLMOD= 'N' or CR.DLMOD='S' then CR.DLMOD   
  WHEN CR.DLMOD = '' AND (CONVERT(DATETIME , CR.FECHA_PREPA) >= isnull(@FECHA_PROCESO_ATERIOR ,CONVERT(DATETIME , '19000101') )) THEn 'M'   
    else '' end  as codigoModalidad,  
  (CASE WHEN CR.DLMOD='N' THEN 'Creditos nuevos'  
  WHEN CR.DLMOD='S' THEN 'Reenganches'  
  WHEN CR.DLMOD = '' AND (CONVERT(DATETIME , CR.FECHA_PREPA) >= isnull(@FECHA_PROCESO_ATERIOR ,CONVERT(DATETIME , '19000101') )) THEn 'Creditos Modificados' end) as textoModalidad  
  FROM CLIENTECUOTA CC INNER JOIN DLCRE CRE                                           
  ON ( CC.DLCC =  CRE.DLCCC                                     
  AND CC.DLAN = CRE.DLAÑO                                          
  AND CC.DLAG = CRE.DLAGC                                          
  AND CC.DLCO = CRE.DLCOC                                           
  AND CRE.DLACC = CC.DLNP)  
  left JOIN HistoricoDLCCR CR ON (CR.DLACC = CC.DLNP AND CR.DLVCA = (CC.DLAP - 2000) AND CR.DLVCM =CC.DLMP AND CR.Codigo_proceso = CC.CODIGO_PROCESO)    
  WHERE CC.CODIGO_PROCESO=@Codigo_proceso)t
  where t.textoModalidad is not null
    
END  
GO
/****** Object:  StoredProcedure [dbo].[GetNombreArchivoProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***********************************************************************************************
Nombre:		GetNombreArchivoProceso
Objetivo:	Obtener el nombre del archivos a procesar.
Modificacion: Se obtiene bajo un nuevo formato los nombres para los archivos TXTCAS, PRN1 Y PRN2 (1 mes antes de la fecha proceso)
Creador:	08/11/2016 NCA TI-EA2016-10682_Creación de nuevo formato de reporte.
***********************************************************************************************/  
CREATE OR ALTER PROCEDURE [dbo].[GetNombreArchivoProceso]    

@Codigo_proceso AS UNIQUEIDENTIFIER,      
@formato AS VARCHAR(50)=NULL
AS      

BEGIN      

/*RESPINOZA -  MODIFICACION PARA MINSA - SE DEBE OBTENER EL NOMBRE DEL ARCHIVO CON OTRO FORMATO*/      

DECLARE @NumeroDocumento nvarchar(12)      

DECLARE @CODIGOBANCO  VARCHAR (4)      

DECLARE @PERIODO  VARCHAR (4)      

DECLARE @PERIODOANTERIOR VARCHAR (4) -- mmYY      

DECLARE @PERIODOANTERIORYYmm VARCHAR (4)      

DECLARE @PERIODOANTERIORmmYYYY VARCHAR (6)      

      

DECLARE @formato_   varchar (50)      

 SET NOCOUNT ON       

 IF(@formato IN('PRNMinsaPensionistasYNombrados','TXTMinsaCAS','ESSALUDCESANTES','ESSALUDACTIVOS',
				'ESSALUDDESEMBOLSOS','MDGPEXCELCESANTES','MDGPEXCELACTIVOS','MDGPTXTCESANTES','MDGPTXTACTIVOS'))
 BEGIN

	DECLARE @FECHAPERIODO DATE,@MESPERIODO VARCHAR(2),@ANIOPERIODO VARCHAR(4),@CODIGOINSTITUCION VARCHAR(4)

	WITH CLIENTES AS 
	(	
			SELECT C.Codigo_cliente,C.codigo_IBS,
			CASE WHEN CAS.CODIGO_IBS IS NULL THEN C.CODIGO_INSTITUCION ELSE 
				CASE @formato WHEN 'TXTMinsaCAS' THEN CAS.CODIGO_INSTITUCION ELSE C.CODIGO_INSTITUCION END
			END AS CODIGO_INSTITUCION 
			FROM CLIENTE C 
			LEFT JOIN ClienteXCodInstitucionCAS CAS
			ON C.CODIGO_IBS=CAS.CODIGO_IBS
	)
	SELECT 
	@FECHAPERIODO =DATEFROMPARTS(P.ANIO_PERIODO,P.MES_PERIODO,1),
	@CODIGOINSTITUCION=RIGHT(CLI.codigo_institucion,4)
	FROM PROCESO P INNER JOIN CLIENTES CLI 
	ON CLI.Codigo_Cliente=P.Codigo_Cliente
	WHERE P.CODIGO_PROCESO=@Codigo_proceso

	SET @ANIOPERIODO=CAST(DATEPART(YEAR,DATEADD(MONTH,-1,@FECHAPERIODO)) AS VARCHAR) 
	SET @MESPERIODO=DATEPART(MONTH,DATEADD(MONTH,-1,@FECHAPERIODO)) --CASE LEN(DATEADD(MONTH,-1,P.MES_PERIODO)) WHEN 1 THEN '0'+DATEADD(MONTH,-1,P.MES_PERIODO) ELSE DATEADD(MONTH,-1,P.MES_PERIODO) END,
	SET @MESPERIODO= CASE LEN(@MESPERIODO) WHEN 1 THEN '0'+@MESPERIODO ELSE @MESPERIODO END
	
	IF(@formato IN ('ESSALUDCESANTES','ESSALUDACTIVOS'))
	BEGIN
		SELECT CASE LEN(LTRIM(RTRIM(@CODIGOINSTITUCION))) WHEN 0 THEN '000' ELSE ISNULL(@CODIGOINSTITUCION,'000') END+'_'+@MESPERIODO+@ANIOPERIODO+'_'+CASE @formato 
		WHEN 'ESSALUDCESANTES' THEN 'ces' ELSE 'act' END		
	END
	ELSE IF(@formato='ESSALUDDESEMBOLSOS')
	BEGIN
		SET @ANIOPERIODO=CAST(DATEPART(YEAR,DATEADD(MONTH,-2,@FECHAPERIODO)) AS VARCHAR) 
		SET @MESPERIODO=DATEPART(MONTH,DATEADD(MONTH,-2,@FECHAPERIODO))
		SET @MESPERIODO= CASE LEN(@MESPERIODO) WHEN 1 THEN '0'+@MESPERIODO ELSE @MESPERIODO END

		SELECT @CODIGOINSTITUCION+'_'+@MESPERIODO+@ANIOPERIODO
	END
	ELSE IF(@formato IN('MDGPEXCELCESANTES','MDGPTXTCESANTES'))
	BEGIN
		SELECT 'Listado_cesante'+@MESPERIODO
	END
	ELSE IF(@formato IN('MDGPEXCELACTIVOS','MDGPTXTACTIVOS'))
	BEGIN
		SELECT 'Listado_actividad'+@MESPERIODO
	END
	ELSE
	BEGIN
		SELECT CASE LEN(LTRIM(RTRIM(@CODIGOINSTITUCION))) WHEN 0 THEN '0000' ELSE ISNULL(@CODIGOINSTITUCION,'0000') END+@MESPERIODO+RIGHT(@ANIOPERIODO,2)
	END
 END
 ELSE
 BEGIN

  SELECT @NumeroDocumento = NumeroDocumento,      

  @PERIODO = SUBSTRING('00' + LTRIM(RTRIM(Mes_Periodo)) , LEN(LTRIM(RTRIM(Mes_Periodo))) + 1, 2 )      

  + SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([Anio_periodo] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [Anio_periodo] AS VARCHAR(4)), 3, 2 )))) + 1, 2 ),       

  @PERIODOANTERIOR = substring(      

     replace (       

     CONVERT ( VARCHAR ( 8 ) ,      

     DATEADD ( MONTH, -1 ,      

     CAST (       

     CAST ([Anio_periodo] AS VARCHAR(4))--SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([Anio_periodo] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [Anio_periodo] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )      

     +SUBSTRING('00' + LTRIM(RTRIM(Mes_Periodo)) , LEN(LTRIM(RTRIM(Mes_Periodo))) + 1, 2 )      

     + '01' AS DATETIME  )        

     )      

     ,      

     4)      

     ,      

     '.',      

     ''      

     )      

     ,3,4),      

  @PERIODOANTERIORYYmm = substring(      

     replace (       

     CONVERT ( VARCHAR ( 8 ) ,      

     DATEADD ( MONTH, -1 ,      

     CAST (       

     CAST ([Anio_periodo] AS VARCHAR(4))--SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([Anio_periodo] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [Anio_periodo] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )      

     +SUBSTRING('00' + LTRIM(RTRIM(Mes_Periodo)) , LEN(LTRIM(RTRIM(Mes_Periodo))) + 1, 2 )      

     + '01' AS DATETIME  )        

     )      

     ,      

     2)      

     ,      

     '.',      

     ''      

     )      

     , 1, 4),      

  @PERIODOANTERIORmmYYYY = REPLACE(substring(      

     replace (       

     CONVERT ( VARCHAR ( 10 ) ,      

     DATEADD ( MONTH, -1 ,      

     CAST (       

     CAST ([Anio_periodo] AS VARCHAR(4))--SUBSTRING('00' + LTRIM(RTRIM(SUBSTRING ( CAST ([Anio_periodo] AS VARCHAR(4)), 3, 2 ))) , LEN(LTRIM(RTRIM(SUBSTRING ( CAST ( [Anio_periodo] AS VARCHAR(4)), 3, 2 )))) + 1, 2 )      

     +SUBSTRING('00' + LTRIM(RTRIM(Mes_Periodo)) , LEN(LTRIM(RTRIM(Mes_Periodo))) + 1, 2 )      

     + '01' AS DATETIME  )        

     )      

     ,      

     103)      

     ,      

     '.',      

     ''      

     )      

     ,3,10)      

     , '/', ''),      

  @formato_ = ltrim(rtrim (formatoArchivo))      

  FROM CLIENTE C INNER JOIN PROCESO P       

    ON (C.Codigo_Cliente = P.Codigo_Cliente)      

  WHERE Codigo_proceso = @Codigo_proceso

 -- @Codigo_proceso      

 SET NOCOUNT OFF      
 
if @formato_ = 'MINSA'  OR   @formato_ = 'BNP'

BEGIN      

 SET NOCOUNT ON       

  /* MOD NCA 08/11/2016 TI-EA2016-10682 */
 
 SELECT  @CODIGOBANCO   = dbo.uf_ObtenerCodigoBanco_x_Ruc(@NumeroDocumento)    

 /* END */

 SET NOCOUNT OFF      

      

 SELECT  @CODIGOBANCO + @PERIODOANTERIOR--@PERIODO      

END      

ELSE      

BEGIN      

 if (@NumeroDocumento = '20185603483')  -- DIRECCION REGIONAL DE EDUCACION AMAZONAS CHACHAPOYAS      

 BEGIN      

   SELECT @PERIODOANTERIORYYmm + '15'      

 END      

 else if (@NumeroDocumento = '20368981355')  -- DIRECCION REGIONAL DE EDUCACION AMAZONAS CHACHAPOYAS      

 BEGIN      

   SELECT @PERIODOANTERIORYYmm + '15'      

 END      

 ELSE IF @NumeroDocumento = '20148421014'      

 BEGIN      

      

  SELECT @PERIODOANTERIORmmYYYY      

 END  

 ELSE IF @NumeroDocumento = '20484014907'  

  BEGIN  

   SELECT replace (      

   replace (      

   replace (      

   replace (      

   replace (      

   replace (      

   replace (       

    case when charindex ( ' ', Nombre_Cliente  ) > 0 then       

     substring ( Nombre_Cliente , 0, charindex ( ' ', Nombre_Cliente  ))      

    else      

     Nombre_Cliente      

    end,       

   '<', '-'),       

   '>', '-'),       

   ':', '-'),       

   '"', '-'),       

   '/', '-'),       

   '\', '-'),       

   '|', '-')       

  FROM PROCESO P JOIN CLIENTE C       

    ON (P.Codigo_Cliente = C.Codigo_Cliente)      

  WHERE Codigo_Proceso = @Codigo_proceso 

  END      

 ELSE      

 BEGIN      

      

  --Crea el nombre del archivo de proceso       

  SELECT replace (      

   replace (      

   replace (      

   replace (      

   replace (      

   replace (      

   replace (       

    case when charindex ( ' ', Nombre_Cliente  ) > 0 then       

     substring ( Nombre_Cliente , 0, charindex ( ' ', Nombre_Cliente  ))      

    else      

     Nombre_Cliente      

    end,       

   '<', '-'),       

   '>', '-'),       

   ':', '-'),       

   '"', '-'),       

   '/', '-'),       

   '\', '-'),       

   '|', '-')      

          

       

   + '-' +        

   LTRIM(RTRIM(Anio_periodo)) +       

   LTRIM(RTRIM(Mes_Periodo)) + '-'  +       

   CONVERT (VARCHAR(8), Fecha_CargaAS400, 112)      

  FROM PROCESO P JOIN CLIENTE C       

    ON (P.Codigo_Cliente = C.Codigo_Cliente)      

  WHERE Codigo_Proceso = @Codigo_Proceso       

 END      

END      
END
END      
-- [dbo].[GetNombreArchivoProceso] -- FIN

GO
/****** Object:  StoredProcedure [dbo].[GetNombreFormatoArchivo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE OR ALTER PROCEDURE [dbo].[GetNombreFormatoArchivo]
@Codigo_proceso as uniqueidentifier      
as      
begin      
    
-- SANFERNANDO 190827950    
DECLARE @CODIGO_CLIENTE VARCHAR(9)    
    

select FormatoArchivo = case       
 when rtrim(isnull(FormatoArchivo, '')) = '' then      
 'Default'      
 else      
 FormatoArchivo      
 end      
 from proceso p inner join cliente c       
 on ( p.Codigo_Cliente = c.Codigo_Cliente )      
 where p.Codigo_proceso = @Codigo_proceso  
    
END    

GO
/****** Object:  StoredProcedure [dbo].[GetPagosRealizados]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetPagosRealizados]
@DLNE	VARCHAR(75),
@DLCM	VARCHAR(20)
AS
BEGIN
set nocount on
	if rtrim(@DLNE) = '' and rtrim(@DLCM ) = ''
	begin
		return 
	end 
set nocount off
	SELECT  DLAP,   
			DLMP,
			DLMO,
			DLIC,
			DLID, 
			DLESD = case when DLESD = '1' then 'VENCIDO O TIENE DOC VCDO.' else 'VIGENTE' end, 
			DeudaPeriodo,
			 EnvioAS = CASE WHEN EXISTS (SELECT 1 FROM PROCESO 
							WHERE PROCESO.Codigo_proceso = CLIENTECUOTA.[Codigo_proceso] 	
							AND ESTADO = 'A2' ) THEN 'Enviado a IBS'--CAST ( 1 AS BIT )
					ELSE 'Sin enviar a IBS' END
	/*[DLCC], [DLAN], [DLAG], [DLCO], [DLMO], [DLNP], 
		[DLCM], [DLNE], [DLPA], [DLMA], [DLMN], [DLCR],	
		[DLAP], [DLMP], [DLIC], [DLST], [DLID], [DLFP],
		[DLER], [DeudaPeriodo], [Codigo_proceso], 
		[Estado]*/ 
	FROM CLIENTECUOTA
	WHERE RTRIM(LTRIM(DLNE)) = CASE WHEN RTRIM(LTRIM(@DLNE)) = '' THEN  RTRIM(LTRIM(DLNE)) ELSE @DLNE END 
		AND DLCM = CASE WHEN RTRIM(LTRIM(@DLCM)) = '' THEN DLCM ELSE @DLCM END  
END


GO
/****** Object:  StoredProcedure [dbo].[GetProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*          
	Autor: Noel Callapiña
	Fecha: 16/07/2014       
	Motivo: EA 273-Mejoras convenios          
	Descripcion: Obtiene codigo de proceso x codigo de cliente, anio y mes.
*/ 
CREATE OR ALTER PROCEDURE [dbo].[GetProceso]    
	@codigo_cliente  numeric(9,0),     
	@anio_periodo   char(4),     
	@mes_periodo   char(2)
as    
begin    
set nocount on    
 declare @id as varchar (255)    
 set @id = '-1'    
	select @id = codigo_proceso from proceso 
		where codigo_cliente = @codigo_cliente and anio_periodo = @anio_periodo and mes_periodo = @mes_periodo
set nocount off     
 select @id as pid    
end   

/*
	PRUEBAS UNITARIAS
	*****************
	
exec getproceso 190828602,2014,8

/*
	drop procedure getproceso
*/
*/ 

GO
/****** Object:  StoredProcedure [dbo].[getProceso_ID]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getProceso_ID]    
@empresa_id as int,
@mes as int,
@anio as int    
as    
SELECT Codigo_proceso FROM PROCESO 
WHERE CODIGO_CLIENTE = @empresa_id
and mes_periodo = @mes
and anio_periodo = @anio 

GO
/****** Object:  StoredProcedure [dbo].[getProceso_porEmpresa]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getProceso_porEmpresa]  
@empresa_id as int  
as  
SELECT Codigo_proceso,Anio_Periodo , Mes_Periodo FROM PROCESO WHERE CODIGO_CLIENTE = @empresa_id   
ORDER BY Anio_periodo DESC, CONVERT(numeric,Mes_Periodo) DESC   


GO
/****** Object:  StoredProcedure [dbo].[GetProcesos]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetProcesos]
@Anio_periodo CHAR(4), 
@Mes_Periodo CHAR(2)
as
begin
--obtenemos la informacion de los procesos que se han realizado para un mes, 
--año de todos los clientes
	SELECT p.Codigo_proceso, p.Estado, NombreEstado = (select TOP 1 CodigoNombre 
						from dbo.CodigoEstado
						WHERE CodigoId = p.Estado), 
		p.Codigo_Cliente, C.Nombre_Cliente,
		C.TipoDocumento,C.NumeroDocumento,
		p.Anio_periodo, p.Mes_Periodo,
		NumRegs = (select count (1 )  from clientecuota where Codigo_proceso = p.Codigo_proceso ),
		ShowDelete = CASE WHEN rtrim(p.Estado) = 'A1' or rtrim(p.Estado) =  'A2' or rtrim(p.Estado) =   'A3' then
					CAST ( 0 AS BIT)
				ELSE
					CAST ( 1 AS BIT)
				END,
		CanGenFile = case WHEN (select count (1 )  from clientecuota where Codigo_proceso = p.Codigo_proceso )>0 then	
					cast ( 1 as bit )
				ELSE 
					CAST ( 0 AS BIT ) 
				END,
		Fecha_ProcesoAS400,
		GeneracionArchivo = case when not Fecha_DescargaArchivo is null then 
						'Descargado el ' + convert (  char(10),  Fecha_DescargaArchivo, 103) + '. '
					else 
						''
					end +
					case when not Fecha_EnvioEmail is null then 
						'Enviado vía e-mail el ' + convert (  char(10), Fecha_EnvioEmail, 103) + '.'
					else 
						''
					end 
	FROM [Proceso] P 
			INNER JOIN CLIENTE C 
				ON ( C.Codigo_Cliente = P.Codigo_Cliente )
	WHERE [Anio_periodo] = 
		CASE WHEN RTRIM(@Anio_periodo ) = '' THEN Anio_periodo ELSE @Anio_periodo END
		AND Mes_Periodo = CASE WHEN  RTRIM(@Mes_Periodo) = '' THEN Mes_Periodo  
		ELSE @Mes_Periodo END
	ORDER BY Anio_periodo, Mes_Periodo, Nombre_Cliente
end
GO
/****** Object:  StoredProcedure [dbo].[GetProcesosDescuentoCompletado]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetProcesosDescuentoCompletado]  
@Anio_periodo char(4),  
@Mes_Periodo char(2)  
AS  
BEGIN  
declare @fMax as int  
set @fMax = 21  
 SELECT [Codigo_proceso], P.[Codigo_Cliente], C.Nombre_Cliente,   
  [Fecha_Proceso] = case when (Estado = 'A2' or Estado = 'EA' ) THEN  
     Fecha_EnvioAS400  
    ELSE  
     Fecha_procesoAD   
    END,    
  [Estado],   
  CodigoNombre = CodigoNombre +   case when ( select count (1) from clientecuota where Estado not in (  'C0', 'CC', 'CD', 'CL','A3') and [Codigo_proceso] = p.[Codigo_proceso]) > 0 then   
   ' ' --  ' - ' +'Contiene errores'  
  else '' end,   
  [Anio_periodo],   
  [Mes_Periodo],   
  Numreg = (select COUNT (1 ) FROM [ClienteCuota] WHERE [Codigo_proceso] = P.[Codigo_proceso]),  
  CanProcess =cast ( 1 as bit ) /*case when (Estado = 'D2' or Estado = 'A2'  or Estado = 'A1' )   
   and ( select count (1) from clientecuota where Estado not in (  'C0', 'CC', 'CD', 'CL')  and [Codigo_proceso] = p.[Codigo_proceso]) = 0   
   and (datepart(hour, getdate())> 8 and datepart(hour, getdate()) <@fMax)  
   and (Fecha_EnvioAS400 is null   
    or   
     ( datepart ( day,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( day, getdate())  
      and datepart ( month,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( month, getdate())  
      and datepart ( year,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( year, getdate())   
     ))  
     then   
      cast ( 1 as bit )   
  when (Estado = 'EA' and ( select count (1) from clientecuota where Estado not in (  'C0', 'CC', 'CD', 'CL')  and [Codigo_proceso] = p.[Codigo_proceso]) = 0   
   and (datepart(hour, getdate())> 8 and datepart(hour, getdate()) <@fMax)) then  
    cast (1 as bit)  
  else cast ( 1 as bit ) end*/  
 ,  
  MensajeEnvio = 'Enviar información a AS/400'/*case when ( select count (1) from clientecuota where Estado not in (  'C0', 'CC', 'CD', 'CL')  and [Codigo_proceso] = p.[Codigo_proceso]) = 0 then  
     case when (datepart(hour, getdate())> 8 and datepart(hour, getdate()) <@fMax) then  
      case when Estado = 'D2' then 'Enviar información a AS/400'   
       when (Estado = 'A2')   
        and ( datepart ( day,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( day, getdate())  
        and datepart ( month,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( month, getdate())  
        and datepart ( year,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( year, getdate())   
        ) then 'Re-enviar información a AS/400'  
       when Estado = 'EA' then   
        'Re-enviar información a AS/400'  
       end  
     else  
      'Solo se realizan procesos de 8am a 9pm.'  
     end   
    else  
     'El archivo aún contiene errores.'  
    end*/,  
  Fecha_CargaAS400,  
  Fecha_ProcesoAS400   
  /*CanProcess = case when (Estado = 'D2' or Estado = 'EA' or Estado = 'A2' )   
     and ( select count (1) from clientecuota where Estado not in (  'C0', 'CC', 'CD', 'CL')  and [Codigo_proceso] = p.[Codigo_proceso]) = 0   
     and (datepart(hour, getdate())> 8 and datepart(hour, getdate()) <21)  
     and (Fecha_EnvioAS400 is null   
      or   
     ( datepart ( day,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( day, getdate())  
      and datepart ( month,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( month, getdate())  
      and datepart ( year,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( year, getdate())   
     ))  
     then   
      cast ( 1 as bit )   
     else cast ( 0 as bit ) end,  
  MensajeEnvio = case when ( select count (1) from clientecuota where Estado not in (  'C0', 'CC', 'CD', 'CL')  and [Codigo_proceso] = p.[Codigo_proceso]) = 0 then  
     case when (datepart(hour, getdate())> 8 and datepart(hour, getdate()) <21) then  
      case when Estado = 'D2' then 'Enviar información a AS/400'   
       when (Estado = 'EA' or Estado = 'A2')   
        and ( datepart ( day,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( day, getdate())  
        and datepart ( month,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( month, getdate())  
        and datepart ( year,  isnull( Fecha_EnvioAS400, '19000101')) = datepart ( year, getdate())   
        ) then 'Re-enviar información a AS/400'  
       end  
     else  
      'Solo se realizan procesos de 8am a 9pm.'  
     end   
    else  
     'El archivo aún contiene errores.'  
    end*/  
 FROM [Proceso] P inner join Cliente C   
  ON (P.[Codigo_Cliente] = C.Codigo_Cliente )  
  INNER JOIN CODIGOESTADO CE ON (  
   P.Estado = CE.CodigoId and tabla='Proceso'  
  )  
 WHERE [Estado]  IN ( 'D2', 'A1', /*'A2',*/ 'A3', 'EA')  
 and Anio_periodo =case when rtrim( @Anio_periodo ) = '' then Anio_periodo  
    else @Anio_periodo end  
 and Mes_Periodo = case when rtrim( @Mes_Periodo ) = '' then  Mes_Periodo  
    else @Mes_Periodo end   
END  
  
GO
/****** Object:  StoredProcedure [dbo].[GetProcesosEnvioArchivoAS400]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE OR ALTER PROCEDURE [dbo].[GetProcesosEnvioArchivoAS400]  
@Anio_periodo CHAR(4),   
@Mes_Periodo CHAR(2)  
AS  
BEGIN  
 -- Obtenemos la informacion de los proceso que han sido marcados como informacion enviada a AS400  
 SELECT [Codigo_proceso], C.Nombre_Cliente, NombreEstado = (SELECT TOP 1 CodigoNombre   
       FROM CodigoEstado  
       WHERE CodigoId = p.Estado),   
  [Anio_periodo], [Mes_Periodo],  
  NumReg = (select count (1 )  from clientecuota where Codigo_proceso = p.Codigo_proceso AND Pago = 1 ),  
  [Fecha_ProcesoAS400], P.[Codigo_Cliente], [Fecha_CargaAS400],  
  [Fecha_GeneracionCF], [Fecha_DescargaArchivo], [Fecha_EnvioEmail],   
  [TmpStatusGen], [Fecha_ProcesoAD], [Fecha_EnvioAS400], TipoDocumento, NumeroDocumento,  
  FInicial =  convert ( varchar ( 10), Fecha_CargaAS400, 103),  
  FFinal = convert ( varchar ( 10), dateadd ( mm , 1,  
    cast (  
    CAST ([Anio_periodo] AS VARCHAR(4))+  
    SUBSTRING('00' + LTRIM(RTRIM(Mes_Periodo)) , LEN(LTRIM(RTRIM(Mes_Periodo)))+1, 2 )+  
    '01' as datetime )   ) -1  
   , 103)  
 FROM [Proceso] p INNER JOIN CLIENTE C   
    ON ( C.Codigo_Cliente = P.Codigo_Cliente )  
 WHERE  [Anio_periodo]  = CASE WHEN RTRIM(@Anio_periodo ) = '' THEN Anio_periodo ELSE @Anio_periodo END  
  AND Mes_Periodo = CASE WHEN RTRIM(@Mes_Periodo) = '' THEN Mes_Periodo ELSE @Mes_Periodo END  
  AND Estado IN ('A2','A3')  
 ORDER BY [Nombre_Cliente]  
END  
  
  
  
GO
/****** Object:  StoredProcedure [dbo].[GetProcesosEsperaArchivoDescuento]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--
--exec GetProcesosEsperaArchivoDescuento @Anio_periodo=N'2011',@Mes_Periodo=N'4'
--

  
 CREATE OR ALTER PROCEDURE [dbo].[GetProcesosEsperaArchivoDescuento]    
@Anio_periodo char(4),    
@Mes_Periodo char(2)    
AS    
BEGIN    
 SELECT [Codigo_proceso], P.[Codigo_Cliente], C.Nombre_Cliente, Fecha_proceso=[Fecha_GeneracionCF],      
  [Estado], CodigoNombre, [Anio_periodo], [Mes_Periodo], Fecha_CargaAS400, Fecha_ProcesoAS400    
 FROM [Proceso] P inner join Cliente C     
  ON (P.[Codigo_Cliente] = C.Codigo_Cliente )    
  INNER JOIN CODIGOESTADO CE ON (    
   P.Estado = CE.CodigoId and tabla='Proceso'    
  )    
 WHERE --[Estado] IN ( 'G1', 'EG', 'D2')    
    ([Estado] IN ( 'G1', 'EG', 'D0', 'ED' )    
     or (Estado = 'D2'     
       and (select count (1) from clientecuota    
         where Estado not in (  'C0', 'CC', 'CD', 'CL')     
         and [Codigo_proceso] = p.[Codigo_proceso]) > 0)  
     OR (ESTADO = 'A2' AND (select count (1) from clientecuota    
         where Estado not in ( 'E4')     
         and [Codigo_proceso] = p.[Codigo_proceso]) > 0)
     OR (ESTADO = 'A3' AND (select count (1) from clientecuota    
         where Estado not in ( 'E4')     
         and [Codigo_proceso] = p.[Codigo_proceso]) > 0) )    
   And Anio_periodo = Case When Rtrim( @Anio_periodo ) = '' then Anio_periodo    
      else @Anio_periodo end    
   And Mes_Periodo = Case When Rtrim( @Mes_Periodo ) = '' then  Mes_Periodo    
      else @Mes_Periodo end     
 ORDER BY [Anio_periodo], [Mes_Periodo], C.Nombre_Cliente    
END    
GO
/****** Object:  StoredProcedure [dbo].[GetProcesosEsperaArchivoDescuentoByNombreCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetProcesosEsperaArchivoDescuentoByNombreCliente]
(
	@vAnioPeriodo	VARCHAR(4),
	@vMesPeriodo	VARCHAR(2),
	@vNombreCliente	varchar(100)
)
AS
BEGIN
	SELECT 
		P.Codigo_proceso,
		P.Codigo_Cliente, 
		C.Nombre_Cliente, 
		P.Fecha_GeneracionCF AS Fecha_proceso,
		P.Estado, 
		CE.CodigoNombre, 
		P.Anio_periodo, 
		P.Mes_Periodo, 
		P.Fecha_CargaAS400, 
		P.Fecha_ProcesoAS400    
	FROM [dbo].[Proceso] P 
	INNER JOIN [dbo].[Cliente] C ON P.Codigo_Cliente = C.Codigo_Cliente
	INNER JOIN [dbo].[CODIGOESTADO] CE ON P.Estado = CE.CodigoId AND CE.tabla='Proceso'
	WHERE
		 --[Estado] IN ( 'G1', 'EG', 'D2')    
			(
				P.Estado IN ( 'G1', 'EG', 'D0', 'ED' )
			OR	(P.Estado = 'D2' AND (SELECT COUNT(1) FROM [dbo].[ClienteCuota] WHERE Estado NOT IN ('C0', 'CC', 'CD', 'CL')
					AND Codigo_proceso = P.Codigo_proceso) > 0)  
			OR	(P.Estado = 'A2' AND (SELECT COUNT(1) FROM [dbo].[ClienteCuota] WHERE Estado NOT IN ( 'E4')
					AND Codigo_proceso = P.Codigo_proceso) > 0)
			OR	(P.ESTADO = 'A3' AND (SELECT COUNT(1) FROM [dbo].[ClienteCuota] WHERE Estado NOT IN ( 'E4')
					AND Codigo_proceso = P.Codigo_proceso) > 0) 
			)
		AND P.Anio_periodo =	CASE 
									WHEN RTRIM(@vAnioPeriodo) = '' THEN P.Anio_periodo
									ELSE @vAnioPeriodo
								END
		AND P.Mes_Periodo = 
								CASE
									WHEN RTRIM(@vMesPeriodo) = '' THEN P.Mes_Periodo
									ELSE @vMesPeriodo
								END
		AND C.Nombre_Cliente LIKE @vNombreCliente + '%'
	ORDER BY P.Anio_periodo, P.Mes_Periodo, C.Nombre_Cliente
END

/* Plan de Pruebas

exec [dbo].[GetProcesosEsperaArchivoDescuentoByNombreCliente] '2016','3','A'

*/
GO
/****** Object:  StoredProcedure [dbo].[GetProcesosRealizados]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetProcesosRealizados]
AS
BEGIN
	-- Obtenemos la informacion de los clientes y procesos que han sido realizados
	-- Esta informacion va a ser utilizada para evitar mostrar en la interfaz de carga
	-- estos clientes y se evite realizar la carga nuevamente
	SELECT TipoDocumento, NumeroDocumento, Anio_periodo, Mes_Periodo 
	FROM CLIENTE C
		INNER JOIN PROCESO P ON (C.Codigo_Cliente = P.Codigo_Cliente)
	WHERE Anio_periodo in (  year ( dateadd ( mm ,1,  getdate ()  ) ), year ( getdate ()) )
	and Mes_periodo	in ( month ( dateadd ( mm ,1,  getdate ()  ) ),  month ( getdate()))
END


GO
/****** Object:  StoredProcedure [dbo].[GetProcesosSeguimiento]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetProcesosSeguimiento]
@Anio_periodo CHAR(4), 
@Mes_Periodo CHAR(2)
AS
BEGIN
	-- RESPINOZA 20060601
	-- Obtenemos la informacion de los proceso que han sido marcados como informacion enviada a AS400
	SELECT [Codigo_proceso], C.Nombre_Cliente, NombreEstado = (SELECT TOP 1 CodigoNombre 
							FROM CodigoEstado
							WHERE CodigoId = p.Estado), 
		[Anio_periodo], [Mes_Periodo],
		NumReg = (select count (1 )  from clientecuota where Codigo_proceso = p.Codigo_proceso AND Pago = 1 ),
		[Fecha_ProcesoAS400], P.[Codigo_Cliente], [Fecha_CargaAS400],
		[Fecha_GeneracionCF], [Fecha_DescargaArchivo], [Fecha_EnvioEmail], 
		[TmpStatusGen], [Fecha_ProcesoAD], [Fecha_EnvioAS400],
		Fecha_CorteSeguimiento,
		TipoDocumento, NumeroDocumento
	FROM [Proceso] p INNER JOIN CLIENTE C 
				ON ( C.Codigo_Cliente = P.Codigo_Cliente )
	WHERE 	[Anio_periodo] 	= CASE WHEN RTRIM(@Anio_periodo ) = ''	THEN Anio_periodo	ELSE @Anio_periodo END
		AND Mes_Periodo = CASE WHEN RTRIM(@Mes_Periodo) = ''	THEN Mes_Periodo	ELSE @Mes_Periodo END
		----AND Estado  IN ('D2', 'ED', 'A1', 'A2', 'EA')
	ORDER BY  Anio_periodo, Mes_Periodo, C.Nombre_Cliente--[Fecha_ProcesoAS400]
END




GO
/****** Object:  StoredProcedure [dbo].[GetRegistroErrorEnvio]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



 CREATE OR ALTER PROCEDURE [dbo].[GetRegistroErrorEnvio]  
@codigo_proceso as uniqueidentifier,  
@DLNP as decimal ( 12)   
AS  
BEGIN  
 SELECT  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'  
  + cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)) ,   
  [DLMO], [DLNP], [DLCM],   
  [DLNE]= case when rtrim(isnull([DLNE], '')) = '' then '[Sin Nombre]' else rtrim(isnull([DLNE], '')) end,   
  [DLCR] = case when rtrim(isnull ( [DLCR], '')) ='' then '[No Proporcionado]' else rtrim(isnull ( [DLCR], '')) end,   
  [DLAP], [DLMP],  [DLST], NombreStatusTrabajador =case when isnull( NombreStatus, '') = '' then '[No Proporcionado]' else isnull( NombreStatus, '')  end,   
  [DLID], [DLIC],[DeudaPeriodo],   
  [DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then   
   cast(rtrim([DLFP]) as datetime)  
   else '' end,  
  [DLER], [Codigo_proceso], [Estado] = (SELECT TOP 1 CodigoNombre FROM CODIGOESTADO WHERE CodigoId = C.[Estado])  
 FROM [ClienteCuota] c left outer join VW_STATUSTRABAJADOR st on (c.DLST  = st.IdStatus )   
 WHERE DLNP = @DLNP   
  and [Codigo_proceso] = @codigo_proceso   
  and Estado not in ('C0', 'CC', 'CD', 'CL','A4')  
 order by  Estado, Convenio  
END  
  
  
  
GO
/****** Object:  StoredProcedure [dbo].[GetRegistrosDeudasResultadoProcesoDescuentos]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetRegistrosDeudasResultadoProcesoDescuentos]
@codigo_proceso	as uniqueidentifier,
@codigo		as decimal = 0,
@dlne		as varchar(75) = ''
AS
BEGIN

declare @estado		char(2)
declare @Anio_periodo	char ( 4 ) 
declare @Mes_Periodo	char(2)

	select @estado = Estado, @Anio_periodo = Anio_periodo, @Mes_Periodo = Mes_Periodo  
	from proceso 
	where codigo_proceso = @codigo_proceso
	
	SELECT 
		Convenio =  cast ( c.[DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'
		+ cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)) , 
		[DLMO], [DLNP], [DLCM], 
		[DLNE], [DLCR], [DLAP], [DLMP],  [DLST] = rtrim(ltrim(DLST)), NombreStatusTrabajador = NombreStatus, 
		[DLIC], DLID = isnull([DLID], 0 ) , DeudaPeriodo = isnull  ( [DeudaPeriodo], 0 ), 
		[DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then 
		 cast(rtrim([DLFP]) as datetime)
			else ''	end,
		[DLER], c.[Codigo_proceso], [Estado] = 
		CASE WHEN 	Pago = 0 THEN
					'No enviado a AS/400'
				ELSE
					(SELECT TOP 1 CodigoNombre FROM CODIGOESTADO WHERE CodigoId = C.[Estado])
				END,
		DLCC = CAST ( c.[DLCC] AS VARCHAR ), count ( d.dlcc  ) as notas,
		bloqueado = case bloqueado when 0 then 'no' else 'si' end,
		prorrogado = case prorrogado when 0 then 'no' 		
		+
		case isnull ( rtrim(EDFLAGP),  '' ) 
			/*isnull ( (select top 1 EDFLAGP  
			from dbo.CuotasProrroga
			where  
			codigo_proceso = @codigo_proceso
			and prorrogado = 0 
			and DLNP = c.[DLNP]
			group by CodigoLote , EDFLAGP
			having   CodigoLote =   max ( codigoLote)), '' ) */
		when '1' then ' DOCUMENTO VENCIDO' when '2' then ' DOCUMENTO CANCELADO' 
		when '3' then ' DOCUMENTO YA PRORROGADO' when '4' then ' SOLO SE PUEDE TENER 3 PRORROGAS' 
		when '5' then ' CON PAGO PARCIAL' when '6' then ' REALIZO PAGO EN EL DIA' 
		ELSE  '' 
		end
		else 'si' end,
		cast ( 0 as varchar(20) ) as TotalPagosCliente,
		cast ( 0 as decimal ) as SaldoDeudorAcreedor,

		cast ( 0 as varchar(20) ) as PAGOVENTANILLA,
		cast ( 0 as varchar(20) ) as PAGOINTERNET,
		cast ( 0 as varchar(20) ) as PAGOIBS,
		cast ( 0 as varchar(20) ) as PAGOIBSPROCESOCOBRANZA,
		cast ( 0 as decimal ) as ImporteBIFActualizada,
		cast ( 0 as varchar(20) ) as ImporteBIFActualizadaReporte,
		NotaGenerada = isnull((
				select top 1 'Generado: ' + convert (varchar(10), fecha , 103)  
				+  ' Monto : ' +  cast(Monto as varchar(20)) Generado --, *  
				from documentoCobranzaGenerado 
				where 
				Codigo_proceso     = @codigo_proceso    
				and rtrim(ltrim(DLCC)) = rtrim(ltrim(c.[DLNP])) 
				and TipoDocumento = 'N'
				and Monto is not null
				), ''),
		Substring ( DLCR, 1, 2 ) UGE, 
		NUMCUOTAS,
		LOTE  = isnull(( SELECT TOP 1 DLCLOT FROM dlcec  WHERE DLCCDG = c.[DLCC]), 6099 ),
		CAST ( 0 AS VARCHAR(2) ) AS NUMCUOTASACTUAL,
		CAST('' AS VARCHAR(20)) 	AS SITUACIONLABORALACTUAL,
		CAST('' AS varchar(20)) 	AS DIRECCION,
		CAST('' AS VARCHAR(20)) 	AS CUIDAD, 
		CAST('' AS VARCHAR(20))		AS TELCASA,
		CAST('' AS VARCHAR(20))		AS TELTRABAJO, 
		CAST('' AS VARCHAR(20))		AS TELOTRO,
		'0' as Bloquear,
		CARGO = isnull ( CAST ( MAX(DLCCR) AS VARCHAR (12 )), '')
 	FROM [ClienteCuota] c left outer join VW_STATUSTRABAJADOR st 
			on (c.DLST  = st.IdStatus ) 
		LEFT JOIN DocumentoCobranzaGenerado d on (c.[Codigo_proceso] = d.[Codigo_proceso] and rtrim(c.dlnp) = rtrim(d.dlcc) )
		LEFT JOIN DLCRE CRE 	ON ( RTRIM(C.DLCC)   = RTRIM(CRE.DLCCC)
					AND  RTRIM(C.DLAN)   = RTRIM(CRE.DLAÑO)
					AND  RTRIM(C.DLAG)   = RTRIM(CRE.DLAGC)
					AND  RTRIM(C.DLCO)   = RTRIM(CRE.DLCOC)
					AND  RTRIM(C.DLNP)   = RTRIM(CRE.DLACC))
	WHERE c.[Codigo_proceso] = @codigo_proceso
		--and (DeudaPeriodo > 0 or DLIC = 0 )
		and dlnp = case when  @codigo 	= 0 then  dlnp else @codigo end
		and dlne like '%' + rtrim(@dlne) + '%'

	--- TEMPORAL-> ADICIONADO		
/*
and dlnp in ( 
'233100132947',
'233100132962',
'233100144445',
'233100179012',
'233100179478',
'233100179482',
'233100179483',
'233100228202',
'233100228204',
'233100228209',
'233100228212',
'233101794911',
'233101794920',
'233102282131',
'233100097273',
'233100253358',
'233100253610',
'233100253629',
'233100253630',
'233100253631',
'233100253633',
'233100253634',
'233100253672',
'233100253690',
'233100253698',
'233100253710',
'233100253719',
'233100253751',
'233100253752',
'233100253763',
'233100253769',
'233100253776',
'233100253780',
'233100253782',
'233100253783',
'233100253784',
'233100253785',
'233100253786',
'233100253787',
'233100253788',
'233100253789',
'233100253790',
'233100253791',
'233100253793',
'233100253794',
'233100253795',
'233100253796',
'233100253797',
'233100253798',
'233100253799',
'233100253800',
'233100253826',
'233100253827',
'233100253830',
'233100253884',
'233100253885',
'233100253886',
'233100253887',
'233100253890',
'233100253892',
'233100253893',
'233100253894',
'233100253896',
'233100253898',
'233100253900',
'233100253951',
'233100253952',
'233100253956',
'233100253957',
'233100253958',
'233100253959',
'233100253964',
'233100253965',
'233100253966',
'233100253967',
'233100253968',
'233100253969',
'233100253970',
'233100253984',
'233100253985',
'233100253986',
'233100253987',
'233100253996',
'233100253997',
'233100253999',
'233100254000',
'233101253645',
'233101253691',
'233101253711',
'233101253792',
'233101253895',
'233101253897',
'233101253995',
'233100216096',
'233100216098',
'233100232354',
'233100232366',
'233100232396',
'233100241137',
'233100241417',
'233100241418',
'233100241553',
'233100241558',
'233100258074',
'233100259595',
'233102323610',
'233102323621',
'233102323651',
'233102414111',
'233102414191',
'233102595870',
'233102595980',
'233100237403')

*/
/*
and substring ( DLCR, 1, 2 ) in ('AV',
'AW',
'AX',
'AY',
'AZ',
'AM',
'AN',
'AO',
'AP',
'AQ',
'AR',
'AS',


'AT')*/

		/*AND NUMCUOTAS = 2*/
/*AND DLST = 'C'
AND CAST(DLNP AS NUMERIC) IN ( 
SELECT   CAST(DLACC AS NUMERIC) FROM HISTORICODLCCR WHERE 
 CODIGO_PROCESO =@codigo_proceso
AND DLVCM = 5
and DLIPC = 0 
)
AND NUMCUOTAS = 2*/
--AND DLST IN ('C')
--AND SUBSTRING ( DLCR, 1, 2 )  = 'CN'
--and DeudaPeriodo > 0 
/*AND SUBSTRING ( DLCR, 1, 2 )  = 'CO'
*/
/*FIN TEMPORAL*/
	group by c.[DLCC]  , [DLAN] , [DLAG] , [DLCO], [DLMO], [DLNP], [DLCM], [DLNE], 
		[DLCR], [DLAP], [DLMP],  [DLST], NombreStatus , 
		[DLID], [DLIC],[DeudaPeriodo], [DLFP] ,
		[DLER], c.[Codigo_proceso], [Estado], c.[DLCC], Pago, bloqueado, prorrogado, c.EDFLAGP, NUMCUOTAS
	order by DLNE --DeudaPeriodo desc, Estado, Convenio
END




GO
/****** Object:  StoredProcedure [dbo].[GetRegistrosResultadoProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetRegistrosResultadoProceso]                                    
                                 
 @codigo_proceso as uniqueidentifier,                              
 @Documento as char(8),                                  
 @DLNE as varchar(80),                              
 @DLNP as decimal(12,0),                              
 @EstadoTrabajador char(2),                              
 @ZonaUse varchar(2)                              
                                  
AS                              




BEGIN                                    
                                  
declare @estado char(2),                                    
        @CODIGO_CLIENTE_IBS as int,                              
        @TIPO_CUOTA as int                                                                        
                                      
  select top 1 @CODIGO_CLIENTE_IBS = DLCC from CLIENTECUOTA where CODIGO_PROCESO = @Codigo_proceso                                                              
  group by DLCC                                       
                                  
 select @estado = Estado from proceso where codigo_proceso = @codigo_proceso                                    
 SELECT @TIPO_CUOTA = TIPO_CUOTA FROM MANTENIMIENTO_CUOTA WHERE DLECUN = @CODIGO_CLIENTE_IBS                                   


 ---- nuevo ,creado para gobierno Lambayeque                                   
 declare @codigo_cliente as int                                  
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =  @Codigo_proceso                    

 DECLARE @DESCRIPCION_TIPO_CUOTA AS VARCHAR(100)    
 SELECT @DESCRIPCION_TIPO_CUOTA = PARAMETRO_ITEMVALOR FROM PARAMETRO WHERE PARAMETRO_ITEMID = @TIPO_CUOTA


IF @TIPO_CUOTA = 1                            
BEGIN -- 1                    

		IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                   
		BEGIN

			PRINT 'TIPO 1 - ENTR01'

			SELECT  DISTINCT                                 
			  DLCC ,  -- codigo cliente IBS                              
			  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'  + cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)), -- pagare                                    
			  [DLMO],  -- moneda                               
			  [DLNP],  -- pagare                               
			  [DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular                                    
			  [DLNE],  -- trabajador                               
			  [DLCR],  -- codigo referencia                              
			  [DLAP],  -- anio                              
			  [DLMP],  -- mes                              
			  [DLIC],  -- importe                               
			  DescripcionTipoCuenta = @DESCRIPCION_TIPO_CUOTA,               
			  [DLST],  -- status del cliente                              
			  NombreStatusTrabajador =NombreStatus,   -- nombre status                              
			  [DLID],                                     
			  [DLFP] = case when isnumeric([DLFP] )= 1 and len ( [DLFP] ) = 8 then cast(rtrim([DLFP]) as datetime) else '' end,                                    
			  [DLER],  -- datos null                              
			  [DeudaPeriodo],                                 
			  C.[Codigo_proceso],                                 
			  [Estado],                                 
			  FechaDesembolso,                                 
			  MontoOriginal,                               
			  NroDocumento = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),                              
			  CuotaInformada,                                
			  FechaCargo,                                
			  CuotaPactadas,                                
			  CuotaPagadas,                                
			  CuotaPendientes,                              
			  TipoCuenta = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                    
							'N' ELSE       
							(SELECT CASE WHEN NroTipoCredito = 2 THEN 'R' WHEN NroTipoCredito = 3 THEN  ' ' ELSE ' ' END) END),         			          
			  'EstadoTrabajador' = C.DLST,
			  'ZonaUse'  = SUBSTRING(C.DLCR,1,2),
			  NUMCUOTAS,                       
			  'EstadoDeuda' = (select case when (NUMCUOTAS  = 1  OR NUMCUOTAS  = 0)then ' ' else 'V'  end)                      
			                                     
			 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC ) AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                       
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC ) AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP				
			 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              
				  -- AND (st.idstatus = @EstadoTrabajador OR @EstadoTrabajador = '-')                              
					AND (C.DLST = @EstadoTrabajador OR @EstadoTrabajador = '-')
				  AND (C.DLCR LIKE @ZonaUse + '%' OR @ZonaUse = '0')
				  AND DLIC >= 0                                                      
			ORDER BY  DLNE                                    

		END
		ELSE
		BEGIN

			IF (rtrim( @EstadoTrabajador ) <> '-')                                  
			BEGIN
	
				PRINT 'TIPO 1 - ENTR02'
				
				SELECT  DISTINCT                                
				  DLCC ,  -- codigo cliente IBS                              
				  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'  + cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)), -- pagare                                    
				  [DLMO],  -- moneda                               
				  [DLNP],  -- pagare                               
				  [DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular                                    
				  [DLNE],  -- trabajador                               
				  [DLCR],  -- codigo referencia                              
				  [DLAP],  -- anio                              
				  [DLMP],  -- mes                              
				  DescripcionTipoCuenta = @DESCRIPCION_TIPO_CUOTA,
				  [DLIC] = DLIC,-- cast(CRE.DLPRI as varchar (14)),  -- importe                               		
				  [DLST],  -- status del cliente                              
				  NombreStatusTrabajador =NombreStatus,   -- nombre status                              
				  [DLID],                                     
				  [DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then cast(rtrim([DLFP]) as datetime) else '' end,                                    
				  [DLER],  -- datos null                              
				  [DeudaPeriodo],                                 
				  C.[Codigo_proceso],                                 
				  [Estado],                                 
				  FechaDesembolso,                                 
				  MontoOriginal,                               
				  NroDocumento = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),                              
				  CuotaInformada,                                
				  FechaCargo,                                
				  CuotaPactadas,                                
				  CuotaPagadas,                                
				  CuotaPendientes,                              
				  TipoCuenta = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                    
				  'N'    
					 ELSE       
				 (SELECT CASE WHEN NroTipoCredito = 2 THEN      
				   'R'      
					  WHEN NroTipoCredito = 3 THEN      
				   ' '      
					 ELSE          
				   ' '      
				  END)      
				  END),         			          
					'EstadoTrabajador' = C.DLST,
					'ZonaUse'  = SUBSTRING(C.DLCR,1,2),
				  NUMCUOTAS,                       
				  'EstadoDeuda' = (select case when (NUMCUOTAS  = 1  OR NUMCUOTAS  = 0)then ' ' else 'V'  end)                      
				                                     
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC ) AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        					
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC ) AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              				
					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP					
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
					  AND (NroDocumento = @Documento OR @Documento = '*')                              
					  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
					  AND (DLNP  = @DLNP OR @DLNP = 0)                              				  
					  -- AND (C.DLST = @EstadoTrabajador OR @EstadoTrabajador = '-')
					  AND c.DLST = (@EstadoTrabajador)                   
					  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                				  
					  AND DLIC >= 0                                                      
				ORDER BY  DLNE                                    						
			END
			ELSE
			BEGIN

				SELECT  DISTINCT                                  
				  DLCC ,  -- codigo cliente IBS                              
				  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'  + cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)), -- pagare                                    
				  [DLMO],  -- moneda                               
				  [DLNP],  -- pagare                               
				  [DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular                                    
				  [DLNE],  -- trabajador                               
				  [DLCR],  -- codigo referencia                              
				  [DLAP],  -- anio                              
				  [DLMP],  -- mes                              
				  DescripcionTipoCuenta = @DESCRIPCION_TIPO_CUOTA,     
				  [DLIC] = DLIC,--cast(CRE.DLPRI as varchar (14)),  -- importe                               
				  [DLST],  -- status del cliente                              
				  NombreStatusTrabajador =NombreStatus,   -- nombre status                              
				  [DLID],                                     
				  [DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then cast(rtrim([DLFP]) as datetime) else '' end,                                    
				  [DLER],  -- datos null                              
				  [DeudaPeriodo],                                 
				  C.[Codigo_proceso],                                 
				  [Estado],                                 
				  FechaDesembolso,                                 
				  MontoOriginal,                               
				  NroDocumento = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),                              
				  CuotaInformada,                                
				  FechaCargo,                                
				  CuotaPactadas,                                
				  CuotaPagadas,                                
				  CuotaPendientes,                              
				  TipoCuenta = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                    
				  'N'    
					 ELSE       
				 (SELECT CASE WHEN NroTipoCredito = 2 THEN      
				   'R'      
					  WHEN NroTipoCredito = 3 THEN      
				   ' '      
					 ELSE          
				   ' '      
				  END)      
				  END),         			          
				  'EstadoTrabajador' = C.DLST,
				  'ZonaUse'  = SUBSTRING(C.DLCR,1,2),                      
				  NUMCUOTAS,                       
				  'EstadoDeuda' = (select case when (NUMCUOTAS  = 1  OR NUMCUOTAS  = 0)then ' ' else 'V'  end)                      
				                                     
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC ) AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        				
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC ) AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP					
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
					  AND (NroDocumento = @Documento OR @Documento = '*')                              
					  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
					  AND (DLNP  = @DLNP OR @DLNP = 0)                              				  
					  -- AND (C.DLST = @EstadoTrabajador OR @EstadoTrabajador = '-')
					  AND c.DLST IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso)
					  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                				  
					  AND DLIC >= 0                                                      
				ORDER BY  DLNE                                    					

			END
		
		END
END
ELSE IF  @TIPO_CUOTA = 2                        
BEGIN                       
		
		IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015      
		BEGIN

			PRINT 'TIPO 2 - ENTR01'

			 SELECT  DISTINCT                                  
			  DLCC ,  -- codigo cliente IBS                              
			  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'  + cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)), -- pagare                                    
			  [DLMO],  -- moneda                               
			  [DLNP],  -- pagare                               
			  [DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular                                    
			  [DLNE],  -- trabajador                               
			  [DLCR],  -- codigo referencia                              
			  [DLAP],  -- anio                              
			  [DLMP],  -- mes                              
			  DescripcionTipoCuenta = @DESCRIPCION_TIPO_CUOTA,     
			  [DLIC] = CR.DLIMC,--cast(CRE.DLPRI as varchar (14)),  -- importe                               
			  [DLST],  -- status del cliente                              
			  NombreStatusTrabajador =NombreStatus,   -- nombre status                              
			  [DLID],                                     
			  [DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then cast(rtrim([DLFP]) as datetime) else '' end,                                    
			  [DLER],  -- datos null                              
			  [DeudaPeriodo],                                 
			  C.[Codigo_proceso],                                 
			  [Estado],                                 
			  FechaDesembolso,                                 
			  MontoOriginal,                               
			  NroDocumento = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),                              
			  CuotaInformada,                                
			  FechaCargo,                                
			  CuotaPactadas,                                
			  CuotaPagadas,                                
			  CuotaPendientes,                              
			  TipoCuenta = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                    
			  'N'    
				 ELSE       
			 (SELECT CASE WHEN NroTipoCredito = 2 THEN      
			   'R'      
				  WHEN NroTipoCredito = 3 THEN      
			   ' '      
				 ELSE          
			   ' '      
			  END)      
			  END),         			          
			  'EstadoTrabajador' = C.DLST,
			  'ZonaUse'  = SUBSTRING(C.DLCR,1,2),
			  NUMCUOTAS,                       
			  'EstadoDeuda' = (select case when (NUMCUOTAS  = 1  OR NUMCUOTAS  = 0)then ' ' else 'V'  end )                      
			                                     
		  FROM 
				[ClienteCuota] c 				
				LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
				left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
				AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        
				AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                  
				AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
				INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP ) 					
				LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
				LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP
		  WHERE C.[Codigo_proceso] = @codigo_proceso                                    
			  AND (NroDocumento = @Documento OR @Documento = '*')                              
			  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
			  AND (DLNP  = @DLNP OR @DLNP = 0)                              
			  -- AND (st.idstatus = @EstadoTrabajador OR @EstadoTrabajador = '-')                              
				AND C.DLST =case when rtrim( @EstadoTrabajador ) = '-' then C.DLST  ELSE @EstadoTrabajador END           
			  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                		  
			  AND DLIC >= 0                                                      
		 ORDER BY DLMO, [DLNE]                                    

		END
		ELSE
		BEGIN			

			IF (rtrim( @EstadoTrabajador ) <> '-')                                  
			BEGIN
				PRINT 'TIPO 2 - ENTR02'

				SELECT  DISTINCT                                  
				  DLCC ,  -- codigo cliente IBS                              
				  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'  + cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)), -- pagare                                    
				  [DLMO],  -- moneda                               
				  [DLNP],  -- pagare                               
				  [DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular                                    
				  [DLNE],  -- trabajador                               
				  [DLCR],  -- codigo referencia                              
				  [DLAP],  -- anio                              
				  [DLMP],  -- mes                              
				  DescripcionTipoCuenta = @DESCRIPCION_TIPO_CUOTA,     
				  [DLIC] = CR.DLIMC,--cast(CRE.DLPRI as varchar (14)),  -- importe                               
				  [DLST],  -- status del cliente                              
				  NombreStatusTrabajador =NombreStatus,   -- nombre status                              
				  [DLID],                                     
				  [DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then cast(rtrim([DLFP]) as datetime) else '' end,                                    
				  [DLER],  -- datos null                              
				  [DeudaPeriodo],                                 
				  C.[Codigo_proceso],                                 
				  [Estado],                                 
				  FechaDesembolso,                                 
				  MontoOriginal,                               
				  NroDocumento = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),                              
				  CuotaInformada,                                
				  FechaCargo,                                
				  CuotaPactadas,                                
				  CuotaPagadas,                                
				  CuotaPendientes,                              
				  TipoCuenta = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                    
				  'N'    
					 ELSE       
				 (SELECT CASE WHEN NroTipoCredito = 2 THEN      
				   'R'      
					  WHEN NroTipoCredito = 3 THEN      
				   ' '      
					 ELSE          
				   ' '      
				  END)      
				  END),         			          
				  'EstadoTrabajador' = C.DLST,
				  'ZonaUse'  = SUBSTRING(C.DLCR,1,2),
				  NUMCUOTAS,                       
				  'EstadoDeuda' = (select case when (NUMCUOTAS  = 1  OR NUMCUOTAS  = 0)then ' ' else 'V'  end )                      
				                                     
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
					AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                  
					AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP ) 					
					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP

				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              
				  -- AND (st.idstatus = @EstadoTrabajador OR @EstadoTrabajador = '-')                              				
				  AND c.DLST = (@EstadoTrabajador)                    
				  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                		  
				  AND DLIC >= 0                                                      
			 ORDER BY DLMO, [DLNE]                                    	

			END
			ELSE
			BEGIN
				PRINT 'TIPO 2 - ENTR03'
				
				SELECT  DISTINCT                                  
				  DLCC ,  -- codigo cliente IBS                              
				  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'  + cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)), -- pagare                                    
				  [DLMO],  -- moneda                               
				  [DLNP],  -- pagare                               
				  [DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular                                    
				  [DLNE],  -- trabajador                               
				  [DLCR],  -- codigo referencia                              
				  [DLAP],  -- anio                              
				  [DLMP],  -- mes                              
				  DescripcionTipoCuenta = @DESCRIPCION_TIPO_CUOTA,
				  [DLIC] = CR.DLIMC,--cast(CRE.DLPRI as varchar (14)),  -- importe                               
				  [DLST],  -- status del cliente                              
				  NombreStatusTrabajador =NombreStatus,   -- nombre status                              
				  [DLID],                                     
				  [DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then cast(rtrim([DLFP]) as datetime) else '' end,                                    
				  [DLER],  -- datos null                              
				  [DeudaPeriodo],                                 
				  C.[Codigo_proceso],                                 
				  [Estado],                                 
				  FechaDesembolso,                                 
				  MontoOriginal,                               
				  NroDocumento = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),                              
				  CuotaInformada,                                
				  FechaCargo,                                
				  CuotaPactadas,                                
				  CuotaPagadas,                                
				  CuotaPendientes,                              
				  TipoCuenta = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                    
				  'N'    
					 ELSE       
				 (SELECT CASE WHEN NroTipoCredito = 2 THEN      
				   'R'      
					  WHEN NroTipoCredito = 3 THEN      
				   ' '      
					 ELSE          
				   ' '      
				  END)      
				  END),         			          
				  'EstadoTrabajador' = C.DLST,
				  'ZonaUse'  = SUBSTRING(C.DLCR,1,2),
				  NUMCUOTAS,                       
				  'EstadoDeuda' = (select case when (NUMCUOTAS  = 1  OR NUMCUOTAS  = 0)then ' ' else 'V'  end )                      
				                                     
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE  ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
					AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        					
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                        
					AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP )  --- PARA LA CUOTA DEL MES  					
 					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              
			      AND c.DLST IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso)
				  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                		  
				  AND DLIC >= 0                                                      
			 ORDER BY DLMO, [DLNE]                                    						

			END

		END


END
ELSE
BEGIN

	SELECT CR.DLACC 'PAGARE', SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'                    
    INTO #TEMPO                    
	FROM ClienteCuota CC                    
	INNER JOIN PROCESO P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                    
	INNER JOIN HistoricoDLCCR CR ON (CC.CODIGO_PROCESO = @Codigo_proceso                     
    AND CC.Codigo_proceso = CR.Codigo_proceso            
    AND CC.DLNP = CR.DLACC                    
    AND(CONVERT(INT,                    
    CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                     
    CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +                     
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )                     
        <                     
        CONVERT(INT,                    
      CONVERT(VARCHAR(2),YEAR(GETDATE())-2000) +                     
        CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE())) ELSE CONVERT(VARCHAR(2),MONTH(GETDATE())) END  +                     
        CASE WHEN LEN(DAY(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE())) ELSE CONVERT(VARCHAR(2),DAY(GETDATE())) END                    
        )                    
        OR                    
                            
        CONVERT(INT,                    
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +                     
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END                    
        )                    
        =                    
        CONVERT(INT,                    
         CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +                     
                                 CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END                     
        )                    
      )                
	 )                    
    WHERE DLIC >= 0                    
	GROUP BY CR.DLACC                   

	IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                   
	BEGIN
		PRINT 'TIPO 3 - ENTR01'	

		SELECT  DISTINCT                                  
				  DLCC ,  -- codigo cliente IBS                              
				  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'  + cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)), -- pagare                                    
				  [DLMO],  -- moneda                               
				  [DLNP],  -- pagare                               
				  [DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular                                    
				  [DLNE],  -- trabajador                               
				  [DLCR],  -- codigo referencia                              
				  [DLAP],  -- anio                              
				  [DLMP],  -- mes                              
				  DescripcionTipoCuenta = @DESCRIPCION_TIPO_CUOTA,     
				  [DLIC] = T.CUOTA,--cast(CRE.DLPRI as varchar (14)),  -- importe                               
				  [DLST],  -- status del cliente                              
				  NombreStatusTrabajador =NombreStatus,   -- nombre status                              
				  [DLID],                                     
				  [DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then cast(rtrim([DLFP]) as datetime) else '' end,                                    
				  [DLER],  -- datos null                              
				  [DeudaPeriodo],                                 
				  C.[Codigo_proceso],                                 
				  [Estado],                                 
				  FechaDesembolso,                                 
				  MontoOriginal,                               
				  NroDocumento = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),                              
				  CuotaInformada,                                
				  FechaCargo,                                
				  CuotaPactadas,                                
				  CuotaPagadas,                                
				  CuotaPendientes,                              
				  TipoCuenta = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                    
				  'N'    
					 ELSE       
				 (SELECT CASE WHEN NroTipoCredito = 2 THEN      
				   'R'      
					  WHEN NroTipoCredito = 3 THEN      
				   ' '      
					 ELSE          
				   ' '      
				  END)      
				  END),         			          
				  'EstadoTrabajador' = C.DLST,
				  'ZonaUse'  = SUBSTRING(C.DLCR,1,2),
				  NUMCUOTAS,                       
				  'EstadoDeuda' = (select case when (NUMCUOTAS  = 1  OR NUMCUOTAS  = 0)then ' ' else 'V'  end )                      
				                                     
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
					AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                        
					AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)                    
 					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              
			      AND C.DLST =case when rtrim( @EstadoTrabajador ) = '-' then DLST ELSE @EstadoTrabajador END 
				  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')
				  AND DLIC >= 0                                                      
			 ORDER BY DLMO, [DLNE]                                    						

	END
	ELSE
	BEGIN		

		IF (rtrim( @EstadoTrabajador ) <> '-')                                  
		BEGIN
			PRINT 'TIPO 3 - ENTR02'	

			SELECT  DISTINCT                                  
				  DLCC ,  -- codigo cliente IBS                              
				  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'  + cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)), -- pagare                                    
				  [DLMO],  -- moneda                               
				  [DLNP],  -- pagare                               
				  [DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular                                    
				  [DLNE],  -- trabajador                               
				  [DLCR],  -- codigo referencia                              
				  [DLAP],  -- anio                              
				  [DLMP],  -- mes                              
				  DescripcionTipoCuenta = @DESCRIPCION_TIPO_CUOTA, 
				  [DLIC] = T.CUOTA,--cast(CRE.DLPRI as varchar (14)),  -- importe                               
				  [DLST],  -- status del cliente                              
				  NombreStatusTrabajador =NombreStatus,   -- nombre status                              
				  [DLID],                                     
				  [DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then cast(rtrim([DLFP]) as datetime) else '' end,                                    
				  [DLER],  -- datos null                              
				  [DeudaPeriodo],                                 
				  C.[Codigo_proceso],                                 
				  [Estado],                                 
				  FechaDesembolso,                                 
				  MontoOriginal,                               
				  NroDocumento = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),                              
				  CuotaInformada,                                
				  FechaCargo,                                
				  CuotaPactadas,                                
				  CuotaPagadas,                                
				  CuotaPendientes,                              
				  TipoCuenta = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                    
				  'N'    
					 ELSE       
				 (SELECT CASE WHEN NroTipoCredito = 2 THEN      
				   'R'      
					  WHEN NroTipoCredito = 3 THEN      
				   ' '      
					 ELSE          
				   ' '      
				  END)      
				  END),         			          
				  'EstadoTrabajador' = C.DLST,
				  'ZonaUse'  = SUBSTRING(C.DLCR,1,2),
				  NUMCUOTAS,                       
				  'EstadoDeuda' = (select case when (NUMCUOTAS  = 1  OR NUMCUOTAS  = 0)then ' ' else 'V'  end )                      
				                                     
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
					AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        					                              
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                        
					AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)                        
 					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              			      				  
				  AND C.DLST = (@EstadoTrabajador)                                       
				  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                		  
				  AND DLIC >= 0                                                      
			 ORDER BY DLMO, [DLNE]                                    						

			

		END
		ELSE
		BEGIN
			PRINT 'TIPO 3 - ENTR03'	

			 SELECT  DISTINCT                                  
				  DLCC ,  -- codigo cliente IBS                              
				  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'  + cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)), -- pagare                                    
				  [DLMO],  -- moneda                               
				  [DLNP],  -- pagare                               
				  [DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular                                    
				  [DLNE],  -- trabajador                               
				  [DLCR],  -- codigo referencia                              
				  [DLAP],  -- anio                              
				  [DLMP],  -- mes                              
				  DescripcionTipoCuenta = @DESCRIPCION_TIPO_CUOTA,
				  [DLIC] =  T.CUOTA,--cast(CRE.DLPRI as varchar (14)),  -- importe                               
				  [DLST],  -- status del cliente                              
				  NombreStatusTrabajador =NombreStatus,   -- nombre status                              
				  [DLID],                                     
				  [DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then cast(rtrim([DLFP]) as datetime) else '' end,                                    
				  [DLER],  -- datos null                              
				  [DeudaPeriodo],                                 
				  C.[Codigo_proceso],                                 
				  [Estado],                                 
				  FechaDesembolso,                                 
				  MontoOriginal,                               
				  NroDocumento = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),                              
				  CuotaInformada,                                
				  FechaCargo,                                
				  CuotaPactadas,                                
				  CuotaPagadas,                                
				  CuotaPendientes,                              
				  TipoCuenta = (SELECT CASE WHEN NroTipoCredito = 1 THEN -- TIPO CEDITO ES NUEVO                    
				  'N'    
					 ELSE       
				 (SELECT CASE WHEN NroTipoCredito = 2 THEN      
				   'R'      
					  WHEN NroTipoCredito = 3 THEN      
				   ' '      
					 ELSE          
				   ' '      
				  END)      
				  END),         			          
				  'EstadoTrabajador' = C.DLST,
				  'ZonaUse'  = SUBSTRING(C.DLCR,1,2),
				  NUMCUOTAS,                       
				  'EstadoDeuda' = (select case when (NUMCUOTAS  = 1  OR NUMCUOTAS  = 0)then ' ' else 'V'  end )                      
				                                     
				 FROM 
					[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus )                                     
					left JOIN DLCRE CRE ON ( rtrim(C.DLCC) =  rtrim(CRE.DLCCC )                                        
					AND rtrim(C.DLAN) = rtrim(CRE.DLAÑO)                                        
					AND rtrim(C.DLCO) = rtrim(CRE.DLCOC )                                        
					AND rtrim(CRE.DLACC) = rtrim(C.DLNP))                              
					INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)                        
 					LEFT OUTER JOIN DLPMT PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN DLCNT CNT ON CNT.DLCACC = C.DLNP
				 WHERE C.[Codigo_proceso] = @codigo_proceso                                    
				  AND (NroDocumento = @Documento OR @Documento = '*')                              
				  AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '*' )                              
				  AND (DLNP  = @DLNP OR @DLNP = 0)                              			      				  
				  AND C.DLST IN (SELECT distinct VET.codigoFlag  from ClienteCuota CC inner join VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso)
				  AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '0')                                		  
				  AND DLIC >= 0                                                      
			 ORDER BY DLMO, [DLNE]                                    						

		END

	END

	DROP TABLE #TEMPO                    
	
END

                               
END  

GO
/****** Object:  StoredProcedure [dbo].[GetRegistrosResultadoProcesoByFiltros]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetRegistrosResultadoProcesoByFiltros]
(
	@codigo_proceso		UNIQUEIDENTIFIER,
	@Documento			VARCHAR(8),
	@DLNE				VARCHAR(80),
	@DLNP				DECIMAL(12,0),
	@EstadoTrabajador	VARCHAR(2),
	@ZonaUse			VARCHAR(2)
)                                 
AS
BEGIN                             
	DECLARE @estado				VARCHAR(2),
			@CODIGO_CLIENTE_IBS INT,
			@TIPO_CUOTA			INT
                                      
	SELECT TOP 1 
			@CODIGO_CLIENTE_IBS = DLCC 
	FROM [dbo].[CLIENTECUOTA] 
	WHERE 
			CODIGO_PROCESO = @Codigo_proceso
	GROUP BY DLCC

	SELECT
			@estado = Estado
	FROM [dbo].[proceso]
	WHERE 
			codigo_proceso = @codigo_proceso
 
	SELECT 
			@TIPO_CUOTA = TIPO_CUOTA 
	FROM [dbo].[MANTENIMIENTO_CUOTA] 
	WHERE 
			DLECUN = @CODIGO_CLIENTE_IBS

	---- nuevo ,creado para gobierno Lambayeque
	DECLARE @codigo_cliente INT
	
	SELECT
			@codigo_cliente = codigo_cliente 
	FROM [dbo].[proceso] 
	WHERE 
			codigo_proceso =  @Codigo_proceso                    

	DECLARE @DESCRIPCION_TIPO_CUOTA VARCHAR(100)    
	
	SELECT 
			@DESCRIPCION_TIPO_CUOTA = PARAMETRO_ITEMVALOR 
	FROM [dbo].[PARAMETRO] 
	WHERE 
			PARAMETRO_ITEMID = @TIPO_CUOTA

	IF @TIPO_CUOTA = 1
		BEGIN -- 1
			IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015                   
				BEGIN
					PRINT 'TIPO 1 - ENTR01'
					SELECT  DISTINCT                                 
						[DLCC] ,  -- codigo cliente IBS
						[Convenio]	=  CAST([DLCC] AS VARCHAR(20)) + '-' + CAST([DLAN] AS VARCHAR(20)) + '-' + CAST([DLAG] AS VARCHAR(20))  + '-' + CAST([DLCO] AS VARCHAR(20)), -- pagare
						[DLMO],  -- moneda
						[DLNP],  -- pagare
						[DLCM]		= (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular
						[DLNE],  -- trabajador
						[DLCR],  -- codigo referencia
						[DLAP],  -- anio
						[DLMP],  -- mes
						[DLIC],  -- importe
						[DescripcionTipoCuenta] = @DESCRIPCION_TIPO_CUOTA,
						[DLST],  -- status del cliente
						[NombreStatusTrabajador]	= NombreStatus, -- nombre status
						[DLID],
						[DLFP]		=	(SELECT CASE 
												WHEN ISNUMERIC([DLFP])= 1 AND LEN([DLFP] ) = 8 THEN CAST(RTRIM([DLFP]) AS DATETIME) 
												ELSE '' 
										END),
						[DLER],  -- datos null
						[DeudaPeriodo],
						C.[Codigo_proceso],
						[Estado],
						[FechaDesembolso],
						[MontoOriginal],
						[NroDocumento] = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),
						[CuotaInformada],
						[FechaCargo],
						[CuotaPactadas],
						[CuotaPagadas],
						[CuotaPendientes],
						[TipoCuenta] =	(SELECT CASE 
												WHEN NroTipoCredito = 1 THEN 'N'-- TIPO CEDITO ES NUEVO
												ELSE (SELECT CASE WHEN NroTipoCredito = 2 THEN 'R' WHEN NroTipoCredito = 3 THEN  '' ELSE '' END)
										END),
						[EstadoTrabajador] = C.DLST,
						[ZonaUse] = SUBSTRING(C.DLCR,1,2),
						[NUMCUOTAS],
						[EstadoDeuda] =	(SELECT CASE 
												WHEN(NUMCUOTAS  = 1 OR NUMCUOTAS  = 0) THEN '' 
												ELSE 'V' 
										END)
			                                     
					FROM 
					[dbo].[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st ON (c.DLST = st.IdStatus )
					LEFT JOIN [dbo].[DLCRE] CRE ON (RTRIM(C.DLCC) = RTRIM(CRE.DLCCC) AND RTRIM(C.DLAN) = RTRIM(CRE.DLAÑO) AND RTRIM(C.DLCO) = RTRIM(CRE.DLCOC ) AND RTRIM(CRE.DLACC) = RTRIM(C.DLNP))
					LEFT OUTER JOIN [dbo].[DLPMT] PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN [dbo].[DLCNT] CNT ON CNT.DLCACC = C.DLNP				
					WHERE 
								(C.[Codigo_proceso] = @codigo_proceso)
							AND (NroDocumento = @Documento OR @Documento = '')
							AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '')
							AND (DLNP = @DLNP OR @DLNP = 0)
							AND (C.DLST = @EstadoTrabajador OR @EstadoTrabajador = '')
							AND (C.DLCR LIKE @ZonaUse + '%' OR @ZonaUse = '')
							AND (DLIC >= 0)
					ORDER BY	C.DLNE
				END
			ELSE
				BEGIN
					IF (RTRIM(@EstadoTrabajador ) <> '')                                  
						BEGIN
							PRINT 'TIPO 1 - @EstadoTrabajador <> '''
							SELECT  DISTINCT
								[DLCC],  -- codigo cliente IBS
								[Convenio] =  CAST([DLCC] AS VARCHAR(20)) + '-' + CAST([DLAN] AS VARCHAR(20))  + '-'  + CAST([DLAG] AS VARCHAR(20))  + '-' + CAST([DLCO] AS VARCHAR(20)), -- pagare
								[DLMO],  -- moneda
								[DLNP],  -- pagare
								[DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular
								[DLNE],  -- trabajador
								[DLCR],  -- codigo referencia
								[DLAP],  -- anio
								[DLMP],  -- mes
								[DescripcionTipoCuenta] = @DESCRIPCION_TIPO_CUOTA,
								[DLIC] = DLIC,-- cast(CRE.DLPRI as varchar (14)),  -- importe
								[DLST],  -- status del cliente
								[NombreStatusTrabajador] = NombreStatus,   -- nombre status
								[DLID],                                     
								[DLFP] = (SELECT CASE WHEN ISNUMERIC([DLFP]) = 1 AND LEN([DLFP]) = 8 THEN CAST(RTRIM([DLFP]) AS DATETIME) ELSE '' END),
								[DLER],  -- datos null
								[DeudaPeriodo],
								C.[Codigo_proceso],
								[Estado],
								[FechaDesembolso],
								[MontoOriginal],
								[NroDocumento] = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),
								[CuotaInformada],
								[FechaCargo],
								[CuotaPactadas],
								[CuotaPagadas],
								[CuotaPendientes],
								[TipoCuenta] =	(SELECT CASE 
															WHEN NroTipoCredito = 1 THEN 'N'-- TIPO CEDITO ES NUEVO
															ELSE (SELECT CASE WHEN NroTipoCredito = 2 THEN 'R' WHEN NroTipoCredito = 3 THEN ' ' ELSE ' ' END)
												END),
								[EstadoTrabajador] = C.DLST,
								[ZonaUse]  = SUBSTRING(C.DLCR,1,2),
								[NUMCUOTAS],
								[EstadoDeuda] = (SELECT CASE WHEN(NUMCUOTAS  = 1 OR NUMCUOTAS  = 0) THEN ' ' ELSE 'V' END)
							FROM [dbo].[ClienteCuota] c
							LEFT OUTER JOIN VW_STATUSTRABAJADOR st ON (c.DLST = st.IdStatus)
							LEFT JOIN [dbo].[DLCRE] CRE  ON (RTRIM(C.DLCC) = RTRIM(CRE.DLCCC) AND RTRIM(C.DLAN) = RTRIM(CRE.DLAÑO) AND RTRIM(C.DLCO) = RTRIM(CRE.DLCOC) AND RTRIM(CRE.DLACC) = RTRIM(C.DLNP))
							LEFT OUTER JOIN [dbo].[DLPMT] PMT ON PMT.DLPACC = C.DLNP
							LEFT OUTER JOIN [dbo].[DLCNT] CNT ON CNT.DLCACC = C.DLNP					
							WHERE 
										(C.[Codigo_proceso] = @codigo_proceso)
									AND (NroDocumento = @Documento OR @Documento = '')
									AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '')
									AND (DLNP  = @DLNP OR @DLNP = 0)
									AND (c.DLST = @EstadoTrabajador)
									AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '')
									AND (DLIC >= 0)
							ORDER BY	C.DLNE
						END
					ELSE
						BEGIN
							PRINT 'TIPO 1 - @EstadoTrabajador = '''
							SELECT  DISTINCT
								[DLCC] ,  -- codigo cliente IBS
								[Convenio] =  CAST([DLCC] AS VARCHAR(20)) + '-' + CAST([DLAN] AS VARCHAR(20))  + '-'  + CAST([DLAG] AS VARCHAR(20))  + '-' + CAST([DLCO] AS VARCHAR(20)), -- pagare
								[DLMO],  -- moneda
								[DLNP],  -- pagare
								[DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular
								[DLNE],  -- trabajador
								[DLCR],  -- codigo referencia
								[DLAP],  -- anio
								[DLMP],  -- mes
								[DescripcionTipoCuenta] = @DESCRIPCION_TIPO_CUOTA,
								[DLIC] = DLIC,--cast(CRE.DLPRI as varchar (14)),  -- importe
								[DLST],  -- status del cliente
								[NombreStatusTrabajador] = NombreStatus,   -- nombre status
								[DLID],
								[DLFP] = (SELECT CASE WHEN ISNUMERIC([DLFP]) = 1 AND LEN([DLFP]) = 8 THEN CAST(RTRIM([DLFP]) AS DATETIME) ELSE '' END),
								[DLER],  -- datos null
								[DeudaPeriodo],
								C.[Codigo_proceso],
								[Estado],
								[FechaDesembolso],
								[MontoOriginal],
								[NroDocumento] = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),
								[CuotaInformada],
								[FechaCargo],
								[CuotaPactadas],
								[CuotaPagadas],
								[CuotaPendientes],
								[TipoCuenta] =	(SELECT CASE 
															WHEN NroTipoCredito = 1 THEN 'N' -- TIPO CREDITO ES NUEVO
															ELSE (SELECT CASE WHEN NroTipoCredito = 2 THEN 'R' WHEN NroTipoCredito = 3 THEN '' ELSE '' END)
												END),
								[EstadoTrabajador] = C.DLST,
								[ZonaUse]  = SUBSTRING(C.DLCR,1,2),
								[NUMCUOTAS],
								[EstadoDeuda] = (SELECT CASE WHEN(NUMCUOTAS  = 1 OR NUMCUOTAS  = 0) THEN '' else 'V' end)
							FROM [dbo].[ClienteCuota] c
							LEFT OUTER JOIN VW_STATUSTRABAJADOR st on (c.DLST = st.IdStatus)
							LEFT JOIN [dbo].[DLCRE] CRE ON (RTRIM(C.DLCC) = RTRIM(CRE.DLCCC) AND RTRIM(C.DLAN) = RTRIM(CRE.DLAÑO) AND RTRIM(C.DLCO) = RTRIM(CRE.DLCOC) AND RTRIM(CRE.DLACC) = RTRIM(C.DLNP))
							LEFT OUTER JOIN [dbo].[DLPMT] PMT ON PMT.DLPACC = C.DLNP
							LEFT OUTER JOIN [dbo].[DLCNT] CNT ON CNT.DLCACC = C.DLNP					
							WHERE 
										(C.[Codigo_proceso] = @codigo_proceso)
									AND (NroDocumento = @Documento OR @Documento = '')
									AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '')
									AND (DLNP = @DLNP OR @DLNP = 0)
									AND (c.DLST IN (SELECT DISTINCT VET.codigoFlag FROM [dbo].[ClienteCuota] CC INNER JOIN VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso))
									AND (C.DLCR LIKE @ZonaUse + '%' OR @ZonaUse = '')
									AND (DLIC >= 0)
							ORDER BY  C.DLNE                                    					
						END
				END
		END
	ELSE IF  @TIPO_CUOTA = 2
		BEGIN                       
			IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015
				BEGIN
					PRINT 'TIPO 2 - ENTR01'
					SELECT  DISTINCT
						[DLCC] ,  -- codigo cliente IBS
						[Convenio] =  CAST([DLCC] AS VARCHAR(20)) + '-' + CAST([DLAN] AS VARCHAR(20))  + '-' + CAST([DLAG] AS VARCHAR(20)) + '-' + CAST([DLCO] AS VARCHAR(20)), -- pagare
						[DLMO],  -- moneda
						[DLNP],  -- pagare
						[DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular
						[DLNE],  -- trabajador
						[DLCR],  -- codigo referencia
						[DLAP],  -- anio
						[DLMP],  -- mes
						[DescripcionTipoCuenta] = @DESCRIPCION_TIPO_CUOTA,
						[DLIC] = CR.DLIMC,--cast(CRE.DLPRI as varchar (14)),  -- importe
						[DLST],  -- status del cliente
						[NombreStatusTrabajador] = NombreStatus,   -- nombre status
						[DLID],
						[DLFP] = (SELECT CASE WHEN ISNUMERIC([DLFP] ) = 1 AND LEN([DLFP]) = 8 THEN CAST(RTRIM([DLFP]) AS DATETIME) ELSE '' END),                                    
						[DLER],  -- datos null
						[DeudaPeriodo],
						C.[Codigo_proceso],
						[Estado],
						[FechaDesembolso],
						[MontoOriginal],
						[NroDocumento] = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),
						[CuotaInformada],
						[FechaCargo],
						[CuotaPactadas],
						[CuotaPagadas],
						[CuotaPendientes],                              
						[TipoCuenta] =	(SELECT CASE 
													WHEN NroTipoCredito = 1 THEN 'N' -- TIPO CEDITO ES NUEVO                    
													ELSE (SELECT CASE WHEN NroTipoCredito = 2 THEN 'R' WHEN NroTipoCredito = 3 THEN '' ELSE '' END)
										END),
						[EstadoTrabajador] = C.DLST,
						[ZonaUse] = SUBSTRING(C.DLCR,1,2),
						[NUMCUOTAS],
						[EstadoDeuda] = (SELECT CASE WHEN(NUMCUOTAS = 1 OR NUMCUOTAS = 0) THEN '' ELSE 'V' END)                      
					FROM [dbo].[ClienteCuota] c
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st ON (c.DLST = st.IdStatus )                                     
					LEFT JOIN [dbo].[DLCRE] CRE ON (RTRIM(C.DLCC) = RTRIM(CRE.DLCCC) AND RTRIM(C.DLAN) = RTRIM(CRE.DLAÑO) AND RTRIM(C.DLCO) = RTRIM(CRE.DLCOC) AND RTRIM(CRE.DLACC) = RTRIM(C.DLNP))
					INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP)
					LEFT OUTER JOIN [dbo].[DLPMT] PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN [dbo].[DLCNT] CNT ON CNT.DLCACC = C.DLNP
					WHERE 
								(C.[Codigo_proceso] = @codigo_proceso)
							AND (NroDocumento LIKE '%' + @Documento + '%' OR @Documento = '')
							AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '')
							AND (DLNP  = @DLNP OR @DLNP = 0)
							AND (C.DLST = CASE WHEN RTRIM(@EstadoTrabajador) = '' THEN C.DLST ELSE @EstadoTrabajador END)
							AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '')
							AND (DLIC >= 0)
					ORDER BY [DLMO], [DLNE]
				END
			ELSE
				BEGIN			
					IF (rtrim( @EstadoTrabajador ) <> '')
						BEGIN
							PRINT 'TIPO 2 - @EstadoTrabajador <> '''
							SELECT  DISTINCT
								[DLCC],  -- codigo cliente IBS
								[Convenio] = CAST([DLCC] AS VARCHAR(20)) + '-' + CAST([DLAN] AS VARCHAR(20)) + '-'  + CAST([DLAG] AS VARCHAR(20)) + '-' + CAST([DLCO] AS VARCHAR(20)), -- pagare
								[DLMO],  -- moneda
								[DLNP],  -- pagare
								[DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular
								[DLNE],  -- trabajador
								[DLCR],  -- codigo referencia
								[DLAP],  -- anio
								[DLMP],  -- mes
								[DescripcionTipoCuenta] = @DESCRIPCION_TIPO_CUOTA,
								[DLIC] = CR.DLIMC,--cast(CRE.DLPRI as varchar (14)),  -- importe
								[DLST],  -- status del cliente
								[NombreStatusTrabajador] = NombreStatus,   -- nombre status
								[DLID],
								[DLFP] = (SELECT CASE WHEN ISNUMERIC([DLFP]) = 1 AND LEN([DLFP]) = 8 THEN CAST(RTRIM([DLFP]) AS DATETIME) ELSE '' END),
								[DLER],  -- datos null
								[DeudaPeriodo],
								C.[Codigo_proceso],
								[Estado],
								[FechaDesembolso],
								[MontoOriginal],
								[NroDocumento] = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),
								[CuotaInformada],
								[FechaCargo],
								[CuotaPactadas],
								[CuotaPagadas],
								[CuotaPendientes],
								[TipoCuenta] =	(SELECT CASE 
															WHEN NroTipoCredito = 1 THEN 'N'-- TIPO CEDITO ES NUEVO
															ELSE (SELECT CASE WHEN NroTipoCredito = 2 THEN 'R' WHEN NroTipoCredito = 3 THEN '' ELSE '' END)
												END),         			          
								[EstadoTrabajador] = C.DLST,
								[ZonaUse] = SUBSTRING(C.DLCR,1,2),
								[NUMCUOTAS],
								[EstadoDeuda] = (SELECT CASE WHEN(NUMCUOTAS = 1 OR NUMCUOTAS  = 0) THEN '' else 'V' END)
							FROM  [dbo].[ClienteCuota] c 
							LEFT OUTER JOIN VW_STATUSTRABAJADOR st ON (c.DLST = st.IdStatus)
							LEFT JOIN [dbo].[DLCRE] CRE ON (RTRIM(C.DLCC) = RTRIM(CRE.DLCCC) AND RTRIM(C.DLAN) = RTRIM(CRE.DLAÑO) AND RTRIM(C.DLCO) = RTRIM(CRE.DLCOC) AND RTRIM(CRE.DLACC) = RTRIM(C.DLNP))
							INNER JOIN HistoricoDLCCR CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP)
							LEFT OUTER JOIN [dbo].[DLPMT] PMT ON PMT.DLPACC = C.DLNP
							LEFT OUTER JOIN [dbo].[DLCNT] CNT ON CNT.DLCACC = C.DLNP
							WHERE 
										(C.[Codigo_proceso] = @codigo_proceso)
									AND (NroDocumento = @Documento OR @Documento = '')
									AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '' )
									AND (DLNP  = @DLNP OR @DLNP = 0)
									AND (C.DLST = @EstadoTrabajador)
									AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '')
									AND (DLIC >= 0)
							ORDER BY [DLMO], [DLNE]
						END
					ELSE
						BEGIN
							PRINT 'TIPO 2 - @EstadoTrabajador = '''
							SELECT  DISTINCT                                  
								[DLCC] ,  -- codigo cliente IBS
								[Convenio] =  CAST([DLCC] AS VARCHAR(20)) + '-' + CAST([DLAN] AS VARCHAR(20)) + '-' + CAST([DLAG] AS VARCHAR(20)) + '-' + CAST([DLCO] AS VARCHAR(20)), -- pagare
								[DLMO],  -- moneda
								[DLNP],  -- pagare
								[DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular
								[DLNE],  -- trabajador
								[DLCR],  -- codigo referencia
								[DLAP],  -- anio
								[DLMP],  -- mes
								[DescripcionTipoCuenta] = @DESCRIPCION_TIPO_CUOTA,
								[DLIC] = CR.DLIMC,--cast(CRE.DLPRI as varchar (14)),  -- importe
								[DLST],  -- status del cliente
								[NombreStatusTrabajador] = NombreStatus,   -- nombre status
								[DLID],
								[DLFP] = (SELECT CASE WHEN ISNUMERIC([DLFP]) = 1 AND LEN([DLFP]) = 8 THEN CAST(RTRIM([DLFP]) AS DATETIME) ELSE '' END),                                    
								[DLER],  -- datos null
								[DeudaPeriodo],
								C.[Codigo_proceso],
								[Estado],
								[FechaDesembolso],
								[MontoOriginal],
								[NroDocumento] = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),
								[CuotaInformada],
								[FechaCargo],
								[CuotaPactadas],
								[CuotaPagadas],
								[CuotaPendientes],
								[TipoCuenta] =	(SELECT CASE 
															WHEN NroTipoCredito = 1 THEN 'N'-- TIPO CEDITO ES NUEVO                   
															ELSE (SELECT CASE WHEN NroTipoCredito = 2 THEN 'R' WHEN NroTipoCredito = 3 THEN '' ELSE '' END)      
												END),         			          
								[EstadoTrabajador] = C.DLST,
								[ZonaUse] = SUBSTRING(C.DLCR,1,2),
								[NUMCUOTAS],
								[EstadoDeuda] = (SELECT CASE WHEN(NUMCUOTAS = 1 OR NUMCUOTAS = 0) THEN '' ELSE 'V' END)								
							FROM [dbo].[ClienteCuota] c 
							LEFT OUTER JOIN VW_STATUSTRABAJADOR st ON (c.DLST = st.IdStatus)
							LEFT JOIN [dbo].[DLCRE] CRE ON (RTRIM(C.DLCC) = RTRIM(CRE.DLCCC) AND RTRIM(C.DLAN) = RTRIM(CRE.DLAÑO) AND RTRIM(C.DLCO) = RTRIM(CRE.DLCOC) AND rtrim(CRE.DLACC) = RTRIM(C.DLNP))
							INNER JOIN [dbo].[HistoricoDLCCR] CR ON (CR.Codigo_proceso = C.Codigo_proceso AND CR.DLACC = C.DLNP AND DLVCA = (C.DLAP - 2000) AND DLVCM =C.DLMP )  --- PARA LA CUOTA DEL MES
							LEFT OUTER JOIN [dbo].[DLPMT] PMT ON PMT.DLPACC = C.DLNP
							LEFT OUTER JOIN [dbo].[DLCNT] CNT ON CNT.DLCACC = C.DLNP
							WHERE 
										(C.[Codigo_proceso] = @codigo_proceso)
									AND (NroDocumento = @Documento OR @Documento = '')
									AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '')
									AND (DLNP  = @DLNP OR @DLNP = 0)
									AND (c.DLST IN (SELECT DISTINCT VET.codigoFlag FROM [dbo].[ClienteCuota] CC INNER JOIN VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso))
									AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '')
									AND (DLIC >= 0)
							ORDER BY [DLMO], [DLNE]
						END
				END
		END
	ELSE
		BEGIN			
			SELECT 
				CR.DLACC 'PAGARE',
				SUM(CR.DLIMC - CR.DLIPC + CR.DLITF) 'CUOTA'
			INTO #TEMPO
			FROM [dbo].[ClienteCuota] CC                    
			INNER JOIN [dbo].[PROCESO] P ON (CC.CODIGO_PROCESO = P.CODIGO_PROCESO)                    
			INNER JOIN [dbo].[HistoricoDLCCR] CR 
			ON 
			(
								CC.CODIGO_PROCESO = @Codigo_proceso 
							AND CC.Codigo_proceso = CR.Codigo_proceso
							AND CC.DLNP = CR.DLACC
							AND
							(
								CONVERT(INT,
											CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +
											CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END +
											CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2), CR.DLVCD) END 
										)
								<
								CONVERT(INT,                    
											CONVERT(VARCHAR(2),YEAR(GETDATE())- 2000) +
											CASE WHEN LEN(MONTH(GETDATE())) =1 THEN '0' + CONVERT(VARCHAR(2),MONTH(GETDATE()))	ELSE CONVERT(VARCHAR(2),MONTH(GETDATE()))	END  +
											CASE WHEN LEN(DAY(GETDATE()))	=1 THEN '0' + CONVERT(VARCHAR(2),DAY(GETDATE()))	ELSE CONVERT(VARCHAR(2),DAY(GETDATE()))		END
										)
								OR
								CONVERT(INT,
											CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +
											CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2), CR.DLVCM) END
										)
								=
								CONVERT(INT,
											CASE WHEN LEN(P.ANIO_PERIODO - 2000) = 1 THEN '0' + CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000))  ELSE CONVERT(VARCHAR(2),(P.ANIO_PERIODO - 2000)) END +
											CASE WHEN LEN(P.MES_PERIODO) = 1 THEN  '0' + CONVERT(VARCHAR(2),P.MES_PERIODO) ELSE  CONVERT(VARCHAR(2),P.MES_PERIODO) END
										)
							)
			)
			WHERE (DLIC >= 0)
			GROUP BY CR.DLACC

			IF (@codigo_cliente not in( 190828082 ,190828080, 190828950, 190828743)) --se añade CAFAE - INS CRIVERA 06-03-2015
				BEGIN
					PRINT 'TIPO 3 - ENTR01'
					SELECT  DISTINCT                                  
						[DLCC] ,  -- codigo cliente IBS
						[Convenio] =  CAST([DLCC] AS VARCHAR(20)) + '-' + CAST([DLAN] AS VARCHAR(20)) + '-' + CAST([DLAG] AS VARCHAR(20))  + '-' + CAST([DLCO] AS VARCHAR(20)), -- pagare
						[DLMO],  -- moneda
						[DLNP],  -- pagare
						[DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular
						[DLNE],  -- trabajador
						[DLCR],  -- codigo referencia
						[DLAP],  -- anio
						[DLMP],  -- mes
						[DescripcionTipoCuenta] = @DESCRIPCION_TIPO_CUOTA,
						[DLIC] = T.CUOTA,--cast(CRE.DLPRI as varchar (14)),  -- importe
						[DLST],  -- status del cliente
						[NombreStatusTrabajador] = NombreStatus,   -- nombre status
						[DLID],
						[DLFP] = (SELECT CASE WHEN ISNUMERIC([DLFP]) = 1 AND LEN([DLFP]) = 8 THEN CAST(RTRIM([DLFP]) AS DATETIME) ELSE '' END),
						[DLER],  -- datos null
						[DeudaPeriodo],
						C.[Codigo_proceso],
						[Estado],
						[FechaDesembolso],
						[MontoOriginal],
						[NroDocumento] = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),
						[CuotaInformada],
						[FechaCargo],
						[CuotaPactadas],
						[CuotaPagadas],
						[CuotaPendientes],
						[TipoCuenta] =	(SELECT CASE 
													WHEN NroTipoCredito = 1 THEN 'N'-- TIPO CEDITO ES NUEVO
													ELSE (SELECT CASE WHEN NroTipoCredito = 2 THEN 'R' WHEN NroTipoCredito = 3 THEN '' ELSE '' END)
										END),         			          
						[EstadoTrabajador] = C.DLST,
						[ZonaUse]  = SUBSTRING(C.DLCR,1,2),
						[NUMCUOTAS],
						[EstadoDeuda] = (SELECT CASE WHEN(NUMCUOTAS = 1 OR NUMCUOTAS = 0) THEN '' ELSE 'V' END)
					FROM [dbo].[ClienteCuota] c 
					LEFT OUTER JOIN VW_STATUSTRABAJADOR st ON (c.DLST = st.IdStatus)
					LEFT JOIN DLCRE CRE ON (RTRIM(C.DLCC) = RTRIM(CRE.DLCCC) AND RTRIM(C.DLAN) = RTRIM(CRE.DLAÑO) AND RTRIM(C.DLCO) = RTRIM(CRE.DLCOC) AND RTRIM(CRE.DLACC) = RTRIM(C.DLNP))
					INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)
 					LEFT OUTER JOIN [dbo].[DLPMT] PMT ON PMT.DLPACC = C.DLNP
					LEFT OUTER JOIN [dbo].[DLCNT] CNT ON CNT.DLCACC = C.DLNP
					WHERE 
								(C.[Codigo_proceso] = @codigo_proceso)
							AND (NroDocumento = @Documento OR @Documento = '')
							AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '')
							AND (DLNP  = @DLNP OR @DLNP = 0)
							AND (C.DLST = CASE WHEN RTRIM(@EstadoTrabajador) = '' THEN DLST ELSE @EstadoTrabajador END) 
							AND (C.DLCR LIKE @ZonaUse + '%' OR @ZonaUse = '')
							AND (DLIC >= 0)
					ORDER BY [DLMO],[DLNE]
				END
			ELSE
				BEGIN
					IF (RTRIM(@EstadoTrabajador) <> '')
						BEGIN	
							PRINT 'TIPO 3 - @EstadoTrabajador <> '''
							SELECT  DISTINCT
								[DLCC],  -- codigo cliente IBS
								[Convenio] =  CAST([DLCC] AS VARCHAR(20)) + '-' + CAST([DLAN] AS VARCHAR(20)) + '-' + CAST([DLAG] AS VARCHAR(20)) + '-' + CAST([DLCO] AS VARCHAR(20)), -- pagare
								[DLMO],  -- moneda
								[DLNP],  -- pagare
								[DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular
								[DLNE],  -- trabajador
								[DLCR],  -- codigo referencia
								[DLAP],  -- anio
								[DLMP],  -- mes
								[DescripcionTipoCuenta] = @DESCRIPCION_TIPO_CUOTA,
								[DLIC] = T.CUOTA,--cast(CRE.DLPRI as varchar (14)),  -- importe
								[DLST],  -- status del cliente
								[NombreStatusTrabajador] = NombreStatus,   -- nombre status
								[DLID],
								[DLFP] = (SELECT CASE WHEN ISNUMERIC([DLFP])= 1 AND LEN([DLFP]) = 8 THEN CAST(RTRIM([DLFP]) AS DATETIME) ELSE '' END),
								[DLER],  -- datos null
								[DeudaPeriodo],
								C.[Codigo_proceso],
								[Estado],
								[FechaDesembolso],
								[MontoOriginal],
								[NroDocumento] =(SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),
								[CuotaInformada],
								[FechaCargo],
								[CuotaPactadas],
								[CuotaPagadas],
								[CuotaPendientes],
								[TipoCuenta] =	(SELECT CASE 
													WHEN NroTipoCredito = 1 THEN 'N'-- TIPO CEDITO ES NUEVO 
													ELSE (SELECT CASE WHEN NroTipoCredito = 2 THEN 'R' WHEN NroTipoCredito = 3 THEN '' ELSE '' END)
												END),         			          
								[EstadoTrabajador] = C.DLST,
								[ZonaUse] = SUBSTRING(C.DLCR,1,2),
								[NUMCUOTAS],                       
								[EstadoDeuda] = (SELECT CASE WHEN(NUMCUOTAS = 1 OR NUMCUOTAS = 0) THEN '' ELSE 'V' END)                      
							FROM [dbo].[ClienteCuota] c 
							LEFT OUTER JOIN VW_STATUSTRABAJADOR st ON (c.DLST = st.IdStatus)
							LEFT JOIN [dbo].[DLCRE] CRE ON (RTRIM(C.DLCC) = RTRIM(CRE.DLCCC) AND RTRIM(C.DLAN) = RTRIM(CRE.DLAÑO) AND RTRIM(C.DLCO) = RTRIM(CRE.DLCOC) AND RTRIM(CRE.DLACC) = RTRIM(C.DLNP))
							INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)
 							LEFT OUTER JOIN [dbo].[DLPMT] PMT ON PMT.DLPACC = C.DLNP
							LEFT OUTER JOIN [dbo].[DLCNT] CNT ON CNT.DLCACC = C.DLNP
							WHERE 
										(C.[Codigo_proceso] = @codigo_proceso)
									AND (NroDocumento = @Documento OR @Documento = '')
									AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '')
									AND (DLNP = @DLNP OR @DLNP = 0)
									AND (C.DLST = @EstadoTrabajador)
									AND (C.DLCR LIKE @ZonaUse + '%' OR @ZonaUse = '')
									AND (DLIC >= 0)
							ORDER BY [DLMO],[DLNE]		
						END
					ELSE
						BEGIN
							PRINT 'TIPO 3 - @EstadoTrabajador = '''
							SELECT  DISTINCT							
								[DLCC] ,  -- codigo cliente IBS
								[Convenio] =  CAST([DLCC] AS VARCHAR(20)) + '-' + CAST([DLAN] AS VARCHAR(20)) + '-' + CAST([DLAG] AS VARCHAR(20)) + '-' + CAST([DLCO] AS VARCHAR(20)), -- pagare
								[DLMO],  -- moneda
								[DLNP],  -- pagare
								[DLCM] = (SELECT DLCEM FROM DLCRE WHERE DLACC = C.dlnp),  -- codigo modular
								[DLNE],  -- trabajador
								[DLCR],  -- codigo referencia
								[DLAP],  -- anio
								[DLMP],  -- mes
								[DescripcionTipoCuenta] = @DESCRIPCION_TIPO_CUOTA,
								[DLIC] =  T.CUOTA,--cast(CRE.DLPRI as varchar (14)),  -- importe
								[DLST],  -- status del cliente
								[NombreStatusTrabajador] = NombreStatus,   -- nombre status
								[DLID],                                     
								[DLFP] = (SELECT CASE WHEN ISNUMERIC([DLFP]) = 1 AND LEN([DLFP]) = 8 THEN CAST(RTRIM([DLFP]) AS DATETIME) ELSE '' END),
								[DLER],  -- datos null
								[DeudaPeriodo],
								C.[Codigo_proceso],
								[Estado],
								[FechaDesembolso],
								[MontoOriginal],
								[NroDocumento] = (SELECT DLDNI FROM DLCRE WHERE DLACC = C.dlnp),
								[CuotaInformada],
								[FechaCargo],
								[CuotaPactadas],
								[CuotaPagadas],
								[CuotaPendientes],
								[TipoCuenta] =	(SELECT CASE 
															WHEN NroTipoCredito = 1 THEN 'N'-- TIPO CEDITO ES NUEVO 
															ELSE (SELECT CASE WHEN NroTipoCredito = 2 THEN 'R' WHEN NroTipoCredito = 3 THEN '' ELSE '' END)      
												END),
								[EstadoTrabajador] = C.DLST,
								[ZonaUse]  = SUBSTRING(C.DLCR,1,2),
								[NUMCUOTAS],
								[EstadoDeuda] = (SELECT CASE WHEN(NUMCUOTAS = 1 OR NUMCUOTAS = 0) THEN '' ELSE 'V' END)
							FROM [dbo].[ClienteCuota] c 
							LEFT OUTER JOIN VW_STATUSTRABAJADOR st ON (c.DLST = st.IdStatus)
							LEFT JOIN [dbo].[DLCRE] CRE ON (RTRIM(C.DLCC) = RTRIM(CRE.DLCCC) AND RTRIM(C.DLAN) = RTRIM(CRE.DLAÑO) AND RTRIM(C.DLCO) = RTRIM(CRE.DLCOC) AND RTRIM(CRE.DLACC) = RTRIM(C.DLNP))
							INNER JOIN #TEMPO T ON (T.PAGARE = C.DLNP)                        
 							LEFT OUTER JOIN [dbo].[DLPMT] PMT ON PMT.DLPACC = C.DLNP
							LEFT OUTER JOIN [dbo].[DLCNT] CNT ON CNT.DLCACC = C.DLNP
							WHERE 
										(C.[Codigo_proceso] = @codigo_proceso)
									AND (NroDocumento = @Documento OR @Documento = '')
									AND (DLNE LIKE '%' + @DLNE + '%' OR @DLNE = '' )
									AND (DLNP = @DLNP OR @DLNP = 0)
									AND (C.DLST IN (SELECT DISTINCT VET.codigoFlag FROM [dbo].[ClienteCuota] CC INNER JOIN VW_EstadoTrabajador VET ON CC.DLST = VET.codigoFlag WHERE Codigo_proceso = @Codigo_proceso))
									AND (C.DLCR  LIKE @ZonaUse + '%' OR @ZonaUse = '')
									AND (DLIC >= 0)
							ORDER BY [DLMO], [DLNE]
						END
				END
			
			DROP TABLE #TEMPO                    
	
		END
END
GO
/****** Object:  StoredProcedure [dbo].[GetRegistrosResultadoProcesoDescuentos]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/************************************************************************/      
/* Modif. Por : BANBIF(AHSP) - 20121023    */      
/* Motivo : Adicionar Columas a la Post-Conciliacion  */      
/* Modif. Por : BANBIF(AHSP) - 20130110    */      
/* Motivo : Mostrar el nombre del Cliente Post-Conciliacion */      
/************************************************************************/      
  
CREATE OR ALTER PROCEDURE [dbo].[GetRegistrosResultadoProcesoDescuentos]      
  
 @codigo_proceso as uniqueidentifier,                          
 @codigo   as decimal = 0,                          
 @dlne    as varchar(75) = ''             
                  
AS BEGIN             
                         
DECLARE @estado char(2)                          
SELECT @estado = Estado FROM proceso WHERE codigo_proceso = @codigo_proceso            
            
DECLARE @cantidad_pagares_por_proceso INT      
                         
SELECT @cantidad_pagares_por_proceso = count(*) from DLCONV1 where codigo_proceso = @codigo_proceso          
      
IF @cantidad_pagares_por_proceso > 0               
             
 SELECT  Convenio = cast([DLCC] as varchar(20)) + '-' + cast ([DLAN] as varchar(20)) + '-' + cast ([DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)) ,      
      [DLMO],      
   [DLNP],      
   [DLCM],      
   [DLNE] = CASE  WHEN RTRIM([DLPA] + [DLMA] + [DLMN]) <> '' THEN ([DLPA] + ' ' + [DLMA] + ', ' + [DLMN]) --BANBIF(AHSP) - 20130110      
      ELSE [DLNE]      
      END,      
      --  ([DLPA] + ' ' + [DLMA] + ', ' + [DLMN]) AS 'DLNE' ,      
      [DLCR],       
   [DLAP],       
   [DLMP],        
   [DLST],       
   NombreStatusTrabajador = NombreStatus,                           
      [DLIC],                          
      [DLID] = ISNULL([DLID], 0),                          
      [DeudaPeriodo],                           
      [DLFP]  = CASE WHEN ISNUMERIC([DLFP])=1 and LEN([DLFP]) =8 THEN CAST(RTRIM([DLFP]) as datetime)                          
      ELSE ''       
      END,                          
      [DLER],       
      [Codigo_proceso],       
      [Estado]= CASE WHEN  Pago = 0 THEN 'No enviado a AS/400'                          
      ELSE  (SELECT TOP 1 CodigoNombre FROM CODIGOESTADO WHERE CodigoId = C.[Estado])                          
      END,                          
      DLCC = CAST ([DLCC] AS VARCHAR),      
   CAST( 0 as decimal) AS SaldoDeudorAcreedor,      
   CAST( 0 as decimal ) as ImporteBIFActualizada,      
   CAST( 0 as varchar(20) ) as TotalPagosCliente,      
   CAST( 0 as varchar(20) ) as PAGOVENTANILLA,      
   CAST( 0 as varchar(20) ) as PAGOINTERNET,      
   CAST( 0 as varchar(20) ) as PAGOIBS,      
   CAST( 0 as varchar(20) ) as PAGOIBSPROCESOCOBRANZA,      
   CAST( 0 as varchar(20) ) as DEVOLUCION ,    
   CAST( 0 as varchar(20) ) as ImporteBIFActualizadaReporte,      
   -- se adiciona la prorroga en la post-conciliacion                          
   prorrogado = CASE prorrogado WHEN 0  THEN 'no' + CASE  ISNULL (RTRIM (EDFLAGP), '')      
          WHEN '1' THEN ' DOCUMENTO VENCIDO'      
          WHEN '2' THEN ' DOCUMENTO CANCELADO'      
          WHEN '3' THEN ' DOCUMENTO YA PRORROGADO'      
          WHEN '4' THEN ' SOLO SE PUEDE TENER 3 PRORROGAS'      
          WHEN '5' THEN ' CON PAGO PARCIAL'      
          WHEN '6' THEN ' REALIZO PAGO EN EL DIA'      
          ELSE  ''      
         END      
      ELSE 'si'      
    END,      
  CartaGenerada = ISNULL(( SELECT TOP 1 'Generado: ' + CONVERT(varchar(10), fecha, 103) + ' Monto : ' +  cast(Monto as varchar(20)) Generado       
        FROM documentoCobranzaGenerado      
        WHERE Codigo_proceso     = @codigo_proceso      
        AND rtrim(ltrim(DLCC)) = rtrim(ltrim(c.[DLNP]))      
        AND TipoDocumento = 'C'      
        AND Monto is not null      
        ORDER BY fecha DESC      
       ), ''),                          
  permitirGenerarCarta = isnull(( SELECT TOP 1 CAST(0 AS BIT)      
        FROM documentoCobranzaGenerado      
        WHERE Codigo_proceso     = @codigo_proceso      
        AND rtrim(ltrim(DLCC)) = rtrim(ltrim(c.[DLNP]))      
        AND TipoDocumento = 'C'      
        AND Monto is not null      
        AND convert ( varchar(8), fecha , 112) <> convert(varchar (8), getdate(), 112)      
        ), cast(1 as bit)),      
  Substring(DLCR, 1, 2) UGE,      
  NUMCUOTAS,      
  LOTE  = ISNULL(( SELECT TOP 1 DLCLOT FROM dlcec  WHERE DLCCDG = c.[DLCC]), 6099),      
  CAST(0  AS VARCHAR(2) )  AS NUMCUOTASACTUAL,      
  CAST('' AS VARCHAR(3))   AS SITUACIONPAGARE,      
  CAST('' AS VARCHAR(20))  AS CUENTACARGO,      
  CAST( 0 AS decimal )     AS PAGOPARCIAL,      
  CAST('' AS VARCHAR(20))  AS SITUACIONLABORALACTUAL,      
  CAST('' AS varchar(20))  AS DIRECCION,      
  CAST('' AS VARCHAR(20))  AS CUIDAD,      
  CAST('' AS VARCHAR(20))  AS TELCASA,      
  CAST('' AS VARCHAR(20))  AS TELTRABAJO,      
  CAST('' AS VARCHAR(20))  AS TELOTRO,      
  CRE.DLDNI,      
  CAST('' AS VARCHAR(20))  AS ESTADOPAGARE,      
  CAST('' AS VARCHAR(20))  AS CUENTAAHORRO,      
  CAST('' AS VARCHAR(20))  AS CASTIGORCD,  
  'DIFERENCIA' = (ISNULL([DLID], 0) - (CAST( 0 as varchar(20)) + CAST( 0 as varchar(20)))),  
  'MOTIVO' = ''    
  , 'TIPODEVOLUCION' = ''--EA2017-11386(26/12/2018)
FROM [ClienteCuota] c left outer join VW_STATUSTRABAJADOR st on (c.DLST  = st.IdStatus)      
  left outer join DLCRE CRE on (c.DLNP  = CRE.DLACC)      
WHERE [Codigo_proceso] = @codigo_proceso      
 AND dlnp = case when  @codigo  = 0 then  dlnp else @codigo end      
 AND dlne like '%' + rtrim(@dlne) + '%'      
    --and Substring ( DLCR, 1, 2 ) <> 'AY' Jaen      
 AND dlnp IN ( SELECT pagare                           
   FROM  DLCONV1      
   where codigo_proceso = @codigo_proceso)      
 ORDER BY [DeudaPeriodo] DESC      
  
ELSE           
            
 SELECT  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ([DLAN] as varchar(20)) + '-' + cast([DLAG] as varchar(20)) + '-' + cast([DLCO] as varchar(20)) ,      
  [DLMO],      
  [DLNP],      
  [DLCM],      
  [DLNE] = CASE  WHEN RTRIM([DLPA] + [DLMA] + [DLMN]) <> '' THEN ([DLPA] + ' ' + [DLMA] + ', ' + [DLMN]) --BANBIF(AHSP) - 20130110      
    ELSE [DLNE]      
     END,      
  --([DLPA] + ' ' + [DLMA] + ', ' + [DLMN] ) AS 'DLNE',      
  [DLCR],      
  [DLAP],      
  [DLMP],      
  [DLST],      
  NombreStatusTrabajador = NombreStatus,      
  [DLIC],      
  [DLID] = isnull ([DLID] , 0),      
  [DeudaPeriodo],      
  [DLFP] = CASE WHEN isnumeric([DLFP]) = 1 AND LEN([DLFP]) =8 then cast(rtrim([DLFP]) as datetime)      
    else ''       
    END,      
  [DLER],       
  [Codigo_proceso],       
  [Estado] = CASE WHEN  Pago = 0 THEN 'No enviado a AS/400'      
     ELSE (SELECT TOP 1 CodigoNombre FROM CODIGOESTADO WHERE CodigoId = C.[Estado])      
    END,      
  DLCC = CAST ([DLCC] AS VARCHAR ),      
  CAST( 0 as decimal ) as SaldoDeudorAcreedor,      
  CAST( 0 as decimal ) as ImporteBIFActualizada,      
  CAST( 0 as varchar(20) ) as TotalPagosCliente,      
  CAST( 0 as varchar(20) ) as PAGOVENTANILLA,      
  CAST( 0 as varchar(20) ) as PAGOINTERNET,      
  CAST( 0 as varchar(20) ) as PAGOIBS,      
  CAST( 0 as varchar(20) ) as PAGOIBSPROCESOCOBRANZA,      
  CAST( 0 as varchar(20) ) as DEVOLUCION,    
  CAST( 0 as varchar(20) ) as ImporteBIFActualizadaReporte,      
     -- se adiciona la prorroga en la post-conciliacion      
  prorrogado = CASE prorrogado WHEN 0  THEN 'no' + CASE  ISNULL (RTRIM (EDFLAGP), '')      
          when '1' then ' DOCUMENTO VENCIDO'      
          when '2' then ' DOCUMENTO CANCELADO'      
          when '3' then ' DOCUMENTO YA PRORROGADO'      
          when '4' then ' SOLO SE PUEDE TENER 3 PRORROGAS'      
          when '5' then ' CON PAGO PARCIAL'      
          when '6' then ' REALIZO PAGO EN EL DIA'      
          ELSE  ''      
         end      
      ELSE 'si'       
   END,      
  CartaGenerada = isnull(( SELECT TOP 1 'Generado: ' + convert (varchar(10), fecha , 103) +  ' Monto : ' + cast(Monto as varchar(20)) Generado --, *      
      FROM documentoCobranzaGenerado      
      WHERE Codigo_proceso     = @codigo_proceso      
      AND rtrim(ltrim(DLCC)) = rtrim(ltrim(c.[DLNP]))      
      AND TipoDocumento = 'C'      
      AND Monto is not null      
      ORDER BY fecha DESC      
     ), ''),                          
  permitirGenerarCarta = isnull(( SELECT TOP 1 cast (0 as bit)      
      FROM documentoCobranzaGenerado      
      WHERE Codigo_proceso= @codigo_proceso      
      AND rtrim(ltrim(DLCC)) = rtrim(ltrim(c.[DLNP]))      
      AND TipoDocumento = 'C'      
      AND Monto is not null      
      AND convert(varchar(8), fecha, 112) <> convert(varchar(8), getdate(), 112)      
      ), cast(1 as bit)),                          
  Substring (DLCR, 1, 2) UGE,      
  NUMCUOTAS,      
  LOTE = isnull(( SELECT TOP 1 DLCLOT FROM dlcec  WHERE DLCCDG = c.[DLCC]), 6099),      
  CAST(0  AS VARCHAR(2) )  AS NUMCUOTASACTUAL,      
  CAST('' AS VARCHAR(3))   AS SITUACIONPAGARE,      
  CAST('' AS VARCHAR(20))  AS CUENTACARGO,      
  CAST( 0 AS decimal )     AS PAGOPARCIAL,      
  CAST('' AS VARCHAR(20))  AS SITUACIONLABORALACTUAL,      
  CAST('' AS varchar(20))  AS DIRECCION,      
  CAST('' AS VARCHAR(20))  AS CUIDAD,      
  CAST('' AS VARCHAR(20))  AS TELCASA,      
  CAST('' AS VARCHAR(20))  AS TELTRABAJO,      
  CAST('' AS VARCHAR(20))  AS TELOTRO,      
  CRE.DLDNI,      
  CAST('' AS VARCHAR(20))  AS ESTADOPAGARE,      
  CAST('' AS VARCHAR(20))  AS CUENTAAHORRO,      
  CAST('' AS VARCHAR(20))  AS CASTIGORCD,    
  'DIFERENCIA' = (ISNULL([DLID], 0) - (CAST( 0 as varchar(20)) + CAST( 0 as varchar(20)))),  
  'MOTIVO' = ''   
   , 'TIPODEVOLUCION' = ''--EA2017-11386(26/12/2018)
 FROM [ClienteCuota] c left outer join VW_STATUSTRABAJADOR st on (c.DLST  = st.IdStatus)      
 left outer join DLCRE CRE on (c.DLNP  = CRE.DLACC)      
 WHERE [Codigo_proceso] = @codigo_proceso      
 AND dlnp = case WHEN @codigo  = 0 THEN dlnp else @codigo end      
 AND dlne like '%' + rtrim(@dlne) + '%'      
 ORDER BY [DeudaPeriodo] DESC      
                           
END
GO
/****** Object:  StoredProcedure [dbo].[GetRegistrosResultadoProcesoDescuentos_original]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetRegistrosResultadoProcesoDescuentos_original]                
@codigo_proceso as uniqueidentifier,                
@codigo  as decimal = 0,                
@dlne  as varchar(75) = ''                
AS                
BEGIN                
declare @estado char(2)                
select @estado = Estado from proceso where codigo_proceso = @codigo_proceso                
 SELECT  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'                
  + cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)) ,                 
  [DLMO], [DLNP], [DLCM],                 
  [DLNE], [DLCR], [DLAP], [DLMP],  [DLST], NombreStatusTrabajador = NombreStatus,                 
  [DLIC],                
  [DLID] = isnull ([DLID] , 0 ),                
  [DeudaPeriodo],                 
  [DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then                 
   cast(rtrim([DLFP]) as datetime)                
   else '' end,                
  [DLER], [Codigo_proceso], [Estado] =                 
  CASE WHEN  Pago = 0 THEN                
     'No enviado a AS/400'                
    ELSE                
     (SELECT TOP 1 CodigoNombre FROM CODIGOESTADO WHERE CodigoId = C.[Estado])                
    END,                
  DLCC = CAST ( [DLCC] AS VARCHAR ),                
  cast ( 0 as decimal ) as SaldoDeudorAcreedor,                
  cast ( 0 as decimal ) as ImporteBIFActualizada,                
  cast ( 0 as varchar(20) ) as TotalPagosCliente,                
  cast ( 0 as varchar(20) ) as PAGOVENTANILLA,                
  cast ( 0 as varchar(20) ) as PAGOINTERNET,                
  cast ( 0 as varchar(20) ) as PAGOIBS,                
  cast ( 0 as varchar(20) ) as PAGOIBSPROCESOCOBRANZA,                
  cast ( 0 as varchar(20) ) as ImporteBIFActualizadaReporte,                
  -- se adiciona la prorroga en la post-conciliacion                
  prorrogado = case prorrogado when 0 then 'no'                   
  +                
  case isnull ( rtrim(EDFLAGP),  '' )                 
  when '1' then ' DOCUMENTO VENCIDO' when '2' then ' DOCUMENTO CANCELADO'                 
  when '3' then ' DOCUMENTO YA PRORROGADO' when '4' then ' SOLO SE PUEDE TENER 3 PRORROGAS'                 
  when '5' then ' CON PAGO PARCIAL' when '6' then ' REALIZO PAGO EN EL DIA'                 
  ELSE  ''                 
  end                
  else 'si' end,                
  CartaGenerada = isnull((                
    select top 1 'Generado: ' + convert (varchar(10), fecha , 103)                  
    +  ' Monto : ' +  cast(Monto as varchar(20)) Generado --, *                  
    from documentoCobranzaGenerado                 
    where                 
    Codigo_proceso     = @codigo_proceso                    
    and rtrim(ltrim(DLCC)) = rtrim(ltrim(c.[DLNP]))                 
    and TipoDocumento = 'C'                
    and Monto is not null                
    order by fecha desc                
    ), ''),                
  permitirGenerarCarta = isnull ( (Select top 1 cast ( 0 as bit )                 
     from documentoCobranzaGenerado                 
     where                 
     Codigo_proceso     = @codigo_proceso                    
     and rtrim(ltrim(DLCC)) = rtrim(ltrim(c.[DLNP]))                 
     and TipoDocumento = 'C'                
     and Monto is not null                
     and convert ( varchar ( 8 ) , fecha  , 112 )  <> convert ( varchar ( 8 ) , getdate () , 112 )                
     --order by fecha desc                
     ), cast ( 1 as bit ) ),                
  Substring ( DLCR, 1, 2 ) UGE,                
  NUMCUOTAS,                
  LOTE  = isnull(( SELECT TOP 1 DLCLOT FROM dlcec  WHERE DLCCDG = c.[DLCC]), 6099),                
  CAST(0  AS VARCHAR(2) )  AS NUMCUOTASACTUAL,                 
  CAST('' AS VARCHAR(3))   AS SITUACIONPAGARE ,                 
  CAST('' AS VARCHAR(20))  AS CUENTACARGO,                
  CAST( 0 AS decimal )   as PAGOPARCIAL,                
  CAST('' AS VARCHAR(20))  AS SITUACIONLABORALACTUAL,                
  CAST('' AS varchar(20))  AS DIRECCION,      
  CAST('' AS VARCHAR(20))  AS CUIDAD,                 
CAST('' AS VARCHAR(20))  AS TELCASA,                
  CAST('' AS VARCHAR(20))  AS TELTRABAJO,                 
  CAST('' AS VARCHAR(20))  AS TELOTRO         
 FROM [ClienteCuota] c left outer join VW_STATUSTRABAJADOR st on (c.DLST  = st.IdStatus )                 
 WHERE [Codigo_proceso] = @codigo_proceso            and dlnp = case when  @codigo  = 0 then  dlnp else @codigo end                
  and dlne like '%' + rtrim(@dlne) + '%'                
  --and Substring ( DLCR, 1, 2 ) <> 'AY' Jaen                
 --and dlnp IN ( select  DLNP                 
 --FROM DLCONV1)   
 order by  [DeudaPeriodo] desc                 
END     
    
    
    
    
    
    
  




GO
/****** Object:  StoredProcedure [dbo].[GetRegistrosResultadoProcesoDescuentosErrores]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[GetRegistrosResultadoProcesoDescuentosErrores]
@codigo_proceso as uniqueidentifier,
@rep as bit = 0
AS
BEGIN
	if @rep = 0 
	begin
		--Obtenemos los datos de [ErrorArchivoDescuentos] hasta que no existan errores (corregidos o eliminados)
		if exists ( select 1 from [ErrorArchivoDescuentos] where codigo_proceso = @codigo_proceso)
		begin
			select  DLNP = replace ( NumeroPagare, '''', ''),
				CodigoModular = replace ( CodigoModular, '''', ''), 
				[DLNE] = case when rtrim(isnull(NombreTrabajador, '')) = '' then '[Sin Nombre]' else rtrim(isnull(NombreTrabajador, '')) end ,
				NombreStatus,
				Moneda,
				Cuota = case when ISNUMERIC ( [Cuota] ) = 0 then
							''
						else
							  [Cuota] 
						end,
				MontoDescuento =  case when ISNUMERIC ( [MontoDescuento] ) = 0 then	
							''
						else
							[MontoDescuento]
						end,
				[Estado] = (SELECT TOP 1 CodigoNombre FROM CODIGOESTADO WHERE CodigoId = ea.[Estado]),
				codigo
			from [ErrorArchivoDescuentos] ea  left outer join VW_STATUSTRABAJADOR st 
						on (ea.SituacionLaboral  = st.IdStatus ) 
			where codigo_proceso = @codigo_proceso	
			order by 3--Estado, 3
		end
		else
		begin
			SELECT Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'
				+ cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)) , 
				[DLMO], [DLNP], [DLCM], 
				[DLNE], [DLCR], [DLAP], [DLMP],  [DLST], NombreStatusTrabajador =NombreStatus, 
				[DLID], [DLIC],[DeudaPeriodo], 
				[DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then 
				 cast(rtrim([DLFP]) as datetime)
					else null end,
				[DLER], [Codigo_proceso], [Estado] = (SELECT TOP 1 CodigoNombre FROM CODIGOESTADO WHERE CodigoId = C.[Estado])
			FROM [ClienteCuota] c left outer join VW_STATUSTRABAJADOR st on (c.DLST  = st.IdStatus ) 
			WHERE [Codigo_proceso] = @codigo_proceso	
				and Estado not in (  'C0', 'CC', 'CD', 'CL')
			order by  DLNE--Estado, Convenio, dlap, dlmp
		end 
	end
	else
	begin
			---Es lo mismo pero con menos columnas

		--Obtenemos los datos de [ErrorArchivoDescuentos] hasta que no existan errores (corregidos o eliminados)
		if exists ( select 1 from [ErrorArchivoDescuentos] where codigo_proceso = @codigo_proceso)
		begin
			select  DLNP = replace ( NumeroPagare, '''', ''),
				CodigoModular = replace ( CodigoModular, '''', ''), 
				[DLNE] = case when rtrim(isnull(NombreTrabajador, '')) = '' then '[Sin Nombre]' else rtrim(isnull(NombreTrabajador, '')) end ,
				NombreStatus,
				Moneda,
				Cuota = case when ISNUMERIC ( [Cuota] ) = 0 then
							''
						else
							  [Cuota] 
						end,
				MontoDescuento =  case when ISNUMERIC ( [MontoDescuento] ) = 0 then	
							''
						else
							[MontoDescuento]
						end,
				[Estado] = (SELECT TOP 1 CodigoNombre FROM CODIGOESTADO WHERE CodigoId = ea.[Estado]),
				codigo
			from [ErrorArchivoDescuentos] ea  left outer join VW_STATUSTRABAJADOR st 
						on (ea.SituacionLaboral  = st.IdStatus ) 
			where codigo_proceso = @codigo_proceso	
			order by 3--Estado,3
		end
		else
		begin
			SELECT Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'
				+ cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)), 
				[DLNP] as [Numero Pagare], 
				[DLCM] as [Codigo Modular], 
				replace( [DLNE] ,',','')  as [Nombre Trabajador],  
				[Estado Trabajador] =NombreStatus,
				[DLMO] as [Moneda], 
				[DLIC] as [Importe Cuota],
				[Estado Proceso] = (SELECT TOP 1 CodigoNombre FROM CODIGOESTADO WHERE CodigoId = C.[Estado])
				/* [DLCM], 
				 [DLCR], [DLAP], [DLMP],  [DLST],
				[DLID], [DeudaPeriodo], 
				[DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then 
				 cast(rtrim([DLFP]) as datetime)
					else null end,
				[DLER], [Codigo_proceso]*/
			FROM [ClienteCuota] c left outer join VW_STATUSTRABAJADOR st on (c.DLST  = st.IdStatus ) 
			WHERE [Codigo_proceso] = @codigo_proceso	
				and Estado not in (  'C0', 'CC', 'CD', 'CL')
			order by [DLNE]-- Estado, Convenio, 4
		end 
			--- fin
	end
END




GO
/****** Object:  StoredProcedure [dbo].[GetRegistrosResultadoProcesoDescuentosValidos]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetRegistrosResultadoProcesoDescuentosValidos]
@codigo_proceso as uniqueidentifier
AS
BEGIN
declare @estado char(2)
select @estado = Estado from proceso where codigo_proceso = @codigo_proceso
	SELECT  Convenio =  cast ( [DLCC] as varchar(20)) + '-' + cast ( [DLAN] as varchar(20))  + '-'
		+ cast (  [DLAG] as varchar(20))  + '-'+ cast ( [DLCO]as varchar(20)) , 
		[DLMO], [DLNP], [DLCM], 
		[DLNE], [DLCR], [DLAP], [DLMP],  [DLST], NombreStatusTrabajador =NombreStatus, 
		[DLID], [DLIC],[DeudaPeriodo], 
		[DLFP] = case when isnumeric([DLFP] )=1 and len ( [DLFP] ) =8 then 
		 cast(rtrim([DLFP]) as datetime)
			else ''	end,
		[DLER], [Codigo_proceso], [Estado] = (SELECT TOP 1 CodigoNombre FROM CODIGOESTADO WHERE CodigoId = C.[Estado]),
		Alert = case [Estado] when 'C0' then 'black' when 'CL' then 'black' when 'CC' then 'blue' when 'CD' then 'red'	Else 'black' end
	FROM [ClienteCuota] c left outer join VW_STATUSTRABAJADOR st on (c.DLST  = st.IdStatus ) 
	WHERE [Codigo_proceso] = @codigo_proceso	
		and Estado IN ( 'C0', 'CC', 'CD', 'CL')
	order by  [Estado], Convenio, [DLNE]
END


GO
/****** Object:  StoredProcedure [dbo].[GetResumenProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--
--exec InformeProceso @codigo_proceso=N'98e3681d-2421-48bd-be76-7eacb9a16f2a'
--
--exec GetResumenProceso @codigo_proceso=N'98e3681d-2421-48bd-be76-7eacb9a16f2a'
--
--exec GetResumenProceso @codigo_proceso=N'98e3681d-2421-48bd-be76-7eacb9a16f2a'
--

CREATE OR ALTER PROCEDURE [dbo].[GetResumenProceso]  
@CODIGO_PROCESO AS UNIQUEIDENTIFIER  
AS  
BEGIN  
 -- Relacion de Estados  
 SELECT DISTINCT Estado, CE.CodigoNombre, COUNT (1) AS Conteo  
 FROM CLIENTECUOTA CC   
  INNER JOIN CODIGOESTADO CE   
   ON (CC.Estado = CE.CodigoId AND Tabla = 'CLIENTECUOTA')   
 WHERE CODIGO_PROCESO = @CODIGO_PROCESO  
  AND Pago = 1
  AND  [DLID] > 0
  AND ESTADO <> 'A4'	  
 GROUP BY Estado, CE.CodigoNombre  
  
 -- Total de registros en el proceso  
 SELECT COUNT ( 1 ) as TotalRegistros  
 FROM ClienteCuota   
 WHERE CODIGO_PROCESO = @CODIGO_PROCESO  
 AND Pago = 1
 AND  [DLID] > 0
 AND ESTADO <> 'A4'  
END  
  
GO
/****** Object:  StoredProcedure [dbo].[GetResumenProcesoDescuentos]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



 CREATE OR ALTER PROCEDURE [dbo].[GetResumenProcesoDescuentos]  
@codigo_proceso as uniqueidentifier  
AS  
BEGIN  
 SELECT ErroresArchivo = (select COUNT(1) from [ErrorArchivoDescuentos] where codigo_proceso = @codigo_proceso),  
  ErroresArchivoDescuento = (SELECT  count ( 1 )  FROM TemporalArchivoTexto WHERE PROCESA = 0 and Codigo_proceso = @codigo_proceso),  
  Validos =isnull (  SUM(CASE WHEN Estado = 'C0' or Estado = 'CC' or Estado = 'CD'  or Estado = 'CL' then 1 else 0 end), 0 ),  
  
  TotalArchivo = isnull ( (select COUNT(1) from [ErrorArchivoDescuentos] where codigo_proceso = @codigo_proceso)+  
    SUM(CASE WHEN Estado = 'C0' or Estado = 'CC' or Estado = 'CD'  or Estado = 'CL' then 1 else 0 end), 0 )  
    +(SELECT  count ( 1 )  FROM TemporalArchivoTexto WHERE PROCESA = 0 and Codigo_proceso = @codigo_proceso),  
  ErroresTablaEnvio = isnull ( SUM(CASE WHEN Estado = 'C0'  or Estado = 'CC' or Estado = 'CD' or Estado = 'CL'  or Estado = 'A4' then 0 else 1 end), 0 ),  
  Total = isnull (count ( 1 ), 0 )  ,  
  flgCorreccion = CASE WHEN ( select COUNT(1) from [ErrorArchivoDescuentos] where codigo_proceso = @codigo_proceso)>0 THEN  
    cast ( 0 as bit)   
   ELSE  
    cast ( 1 as bit)   
   END  
 FROM [ClienteCuota]  
 WHERE [Codigo_proceso] = @codigo_proceso  
END  
  
GO
/****** Object:  StoredProcedure [dbo].[GetTipoCuota]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

  
CREATE OR ALTER PROCEDURE [dbo].[GetTipoCuota]    
  
as    
Begin    
  
select Parametro_ItemID , Parametro_ItemValor from Parametro  
where parametro_codigo = 'TICUO'  
and Parametro_estado = 1  
  
  
  
  
END    
  
GO
/****** Object:  StoredProcedure [dbo].[GetTipoDocumento]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[GetTipoDocumento]
as
begin
	SELECT [Codigo], [Descripcion] 
	FROM [TipoDocumento]
end


GO
/****** Object:  StoredProcedure [dbo].[GetTotalRegistrosEnvio_AS400]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


 CREATE OR ALTER PROCEDURE [dbo].[GetTotalRegistrosEnvio_AS400]  
@codigo_proceso as uniqueidentifier  
AS  
BEGIN  
--- Total de registros que seran enviados a AS/400 para ser procesados  
 SELECT COUNT (1) AS CONTEO  
 FROM [ClienteCuota]  
 WHERE [Codigo_proceso] = @codigo_proceso  
 AND [Estado]  = 'A4' --in ('C0', 'CC', 'CD', 'CL')   
 AND Pago  = 1
 --AND ISNULL(DLID ,0) > 0
    
END  


GO
/****** Object:  StoredProcedure [dbo].[getUGES]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getUGES] 
@Codigo_proceso as varchar(36)
AS
BEGIN

SET NOCOUNT  ON 
DECLARE @CODCLIENTE 	as DECIMAL ( 9,0)
DECLARE @CODESTRING 	AS VARCHAR(40)
DECLARE @LEN 		AS INT
DECLARE @POSITION 	AS INT
DECLARE @CODEVALUE 	AS VARCHAR(2)


---SET @codigo_proceso = '2464f0f8-9d52-492a-aef6-ba3be8fe2726'
select TOP 1 @CODCLIENTE = DLCC  from clientecuota where codigo_proceso = @codigo_proceso

SELECT @CODESTRING  = DLCZGR  
FROM DLCEC 
WHERE DLCCDG = @CODCLIENTE

CREATE TABLE #TMP ( CODE CHAR(2)) 


SELECT @LEN = LEN( @CODESTRING ) 
--PRINT @CODESTRING 

SET @POSITION  = 0 
WHILE @POSITION < @LEN 
BEGIN
	SELECT @CODEVALUE = SUBSTRING ( @CODESTRING , @POSITION + 1, 2 ) 
	INSERT INTO #TMP ( CODE ) VALUES ( @CODEVALUE ) 
	SET @POSITION  = @POSITION   + 2
END

SET NOCOUNT OFF

--SELECT * FROM #TMP 


SELECT CODE , ISNULL( CNODSC, '') DESCRIPCION, 
	CODE + CASE WHEN RTRIM(ISNULL( CNODSC, '')) <> '' THEN   ' - ' ELSE '' END 
		+  SUBSTRING(ISNULL( CNODSC, ''), 1, 25) DESCRIPCIONCORTA
FROM   #TMP  T LEFT JOIN CNOFC C   ON (  CODE = CNORCD AND C.CNOCFL = 'CD' ) 
--WHERE 

END


GO
/****** Object:  StoredProcedure [dbo].[getValorAsociadoFormato]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[getValorAsociadoFormato]     
@Codigo_proceso VARCHAR ( 36 ),    
@FormatoArchivo varchar(50),     
@TipoFormatoArchivo varchar(50)    
as    
BEGIN    
SET NOCOUNT ON    
 DECLARE @Codigo_Cliente AS NUMERIC ( 9,0 )     
 SELECT @Codigo_Cliente = Codigo_Cliente FROM PROCESO WHERE CODIGO_PROCESO = @Codigo_proceso    
SET NOCOUNT OFF   
 SELECT ValorAsociado = isnull ( ValorAsociado  , '')     
 FROM FormatoArchivoCliente     
 WHERE CODIGO_CLIENTE = @Codigo_Cliente     
  and FormatoArchivo = @FormatoArchivo    
  and TipoFormatoArchivo = @TipoFormatoArchivo     
END    
GO
/****** Object:  StoredProcedure [dbo].[InformeProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[InformeProceso]        
    
 @codigo_proceso as VARCHAR(100)  
    
AS  
  
        
BEGIN        
    
 DECLARE @ID  UNIQUEIDENTIFIER        
         
 IF (@codigo_proceso = '')        
  BEGIN        
   SET @ID = NULL        
  END        
 ELSE        
  BEGIN        
   SET @ID = CAST(@codigo_proceso AS UNIQUEIDENTIFIER)        
  END        
          
 --PRINT CONVERT(VARCHAR(100),@codigo_proceso)        
           
 SELECT     
 [Codigo_proceso],     
 TipoDocumento = td.Descripcion,    
 NumeroDocumento,     
    p.codigo_cliente,    
 c.Nombre_Cliente,
 C.Codigo_IBS,     
 [Fecha_CargaAS400],         
 Fecha_ProcesoAD = convert ( char ( 10 ) , cast ( isnull(Fecha_ProcesoAD, getdate()) as datetime ), 103),         
 p.[Estado],     
 CodigoNombre,     
 [Anio_periodo],     
 [Mes_Periodo],        
 Fecha_ProcesoAS400,        
 ShowGrid = CASE when rtrim(p.Estado) = 'R0' or rtrim(p.Estado) = 'R1' or rtrim(p.Estado) = 'RE' THEN        
       CAST ( 1 AS BIT ) ELSE CAST ( 0 AS BIT ) END,        
    bCorreoElectronico = case when ltrim(rtrim( CorreoElectronico )) = '' then        
       cast ( 0 as bit )  else  cast ( 1 as bit ) end,        
 FormatoArchivoImportacion        
 /*blockFormatInput = case when (FormatoArchivo<>'default') then cast( 1 as bit ) else cast( 0 as bit ) end*/,        
 MontoProcesadoSoles = ISNULL ( (        
    select sum ( DLIC) from clientecuota         
    where codigo_proceso = @ID  -- 1          
    and DLMO = 'SOL'         
  
    ), 0 ) ,        
  MontoProcesadoDolares = ISNULL ((        
    select sum ( DLIC )         
    from clientecuota         
    where codigo_proceso = @ID  --2        
    and DLMO = 'USD'        
      
  
    ), 0 ),        
  MesPeriodo2S = SUBSTRING('00' + REPLACE(cast ( ISNULL(Mes_Periodo, 0) AS CHAR(2)), '.', '') , LEN(REPLACE(cast ( ISNULL(Mes_Periodo, 0) AS CHAR(2)), '.', '')) + 1, 2 ),        
  AnioPeriodo2S = SUBSTRING('00' + REPLACE(cast ( ISNULL(Anio_periodo-2000, 0) AS CHAR(2)), '.', '') , LEN(REPLACE(cast ( ISNULL(Anio_periodo-2000, 0) AS CHAR(2)), '.', '')) + 1, 2 )        
 FROM [Proceso] P inner join Cliente C         
  ON (P.[Codigo_Cliente] = C.Codigo_Cliente )        
  INNER JOIN CODIGOESTADO CE ON ( P.Estado = CE.CodigoId and tabla='Proceso')        
  left outer join TipoDocumento td on (C.TipoDocumento = td.Codigo)        
 WHERE [Codigo_proceso] = @ID --3        
END      

GO
/****** Object:  StoredProcedure [dbo].[IniciaProcesoCargaDescuentos]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[IniciaProcesoCargaDescuentos]
@Codigo_proceso as uniqueidentifier,
@usuario		varchar(30) = ''
AS
BEGIN
	SET NOCOUNT ON	
		EXECUTE AddLogInfo '', @Codigo_proceso, '', 'D0', 'IniciaProcesoCargaDescuentos', @usuario	
	SET NOCOUNT OFF
	UPDATE PROCESO
	SET Estado = 'D0'
	WHERE Codigo_proceso = @Codigo_proceso
END


GO
/****** Object:  StoredProcedure [dbo].[InicioEnvioInformacionAS400]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[InicioEnvioInformacionAS400]
@Codigo_proceso AS UNIQUEIDENTIFIER,
@usuario AS VARCHAR ( 30 ) 
as
BEGIN
SET NOCOUNT ON
	UPDATE Proceso	
	set [Estado]  = 'A1',
		Fecha_EnvioAS400 = getdate()
	where [Codigo_proceso] = @Codigo_proceso 
	EXECUTE AddLogInfo '', @Codigo_proceso, '', 'A1', 'InicioEnvioInformacionAS400', @usuario
SET NOCOUNT OFF
END


GO
/****** Object:  StoredProcedure [dbo].[ins_log_ejecucion_aviso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[ins_log_ejecucion_aviso]   
 @id_aviso smallint,  
 @codigo_IBS int,   
 @email_envio_aviso varchar(4000)  
as  
  
begin  
  
insert into log_ejecucion_aviso (fecha, id_aviso, codigo_IBS, email_envio_aviso)   
 values (getdate(), @id_aviso, @codigo_IBS, @email_envio_aviso)   
  
end  
GO
/****** Object:  StoredProcedure [dbo].[InsertaClienteCuota]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/*08 Cliente Cuota*/

CREATE OR ALTER PROCEDURE [dbo].[InsertaClienteCuota]          
          
  @Codigo_proceso uniqueidentifier,          
  @DLNP decimal(12,0), -- Pagare           
  @DLCM varchar(20), -- Codigo Modular          
  @DLPA varchar(25), -- Apellido Paterno          
  @DLMA varchar(25), -- Apellido Materno          
  @DLMN varchar(25), -- Nombre Trabajador          
  @DLCR varchar(20),  -- Codigo de Referencia          
  @DLIC decimal(14,0), -- Importe          
  @Cuotas int,          
  @DeudaPeriodo decimal(15,0),          
  @NroDocumento char(11),          
  @FechaDesembolso datetime,          
  @MontoOriginal decimal(9,0),          
  @CuotaInformada int,          
  @FechaCargo datetime,          
  @CuotaPactadas int,          
  @CuotaPagadas int          
          
AS          
      
DECLARE @DLAN decimal(2,0), -- Anio de Convenio          
  @DLAG decimal(3,0), -- AGENCIA DE CONVENIO          
  @DLCO decimal(4,0), -- correlativo del convenio          
  @DLCC decimal(9,0), -- Codigo Cliente IBS          
  @DLMO varchar(3), -- Moneda          
  @DLNE varchar(75), -- Nombre completo del trabajador          
  @DLAP decimal(4,0), -- anio          
  @DLMP decimal (2,0), -- mes          
  @DLST varchar(2), -- status del cliente en la empresa          
  @DLER varchar(8), -- datos null          
  @DLESD varchar(1), -- si la cuota es mayor > 1 = 1 else 0          
  @DLFLI varchar(1), -- afecto a itf,            
  @TipoCuenta int,          
  @CuotasPendientes int              

            
  /*Obtencion de los datos de cliente cuota mediante el codigo de proceso*/          
  SELECT           
   @DLAN  = DLAN,  -- Anio de Convenio          
   @DLAG  = DLAG,  -- Agencia de Convenio          
   @DLCO  = DLCO,  -- correlativo del convenio          
   @DLCC  = DLCC,  -- Codigo Cliente IBS          
   @DLMO  = DLMO,  -- Moneda           
   @DLAP  = DLAP,  -- anio          
   @DLMP  = DLMP,  -- mes          
   @DLST  = DLST,  -- status del cliente en la empresa          
   @DLER  = DLER,  -- datos null          
   @DLESD = DLESD, -- si la cuota es mayor > 1 = 1 else 0          
   @DLFLI = DLFLI  -- afecto a itf,            
  FROM           
   CLIENTECUOTA          
  WHERE           
   CODIGO_PROCESO = @Codigo_proceso          
          
  /*Obtencion del Nombre Completo del Trabajador*/        
  SET @DLNE = @DLPA + ' ' + @DLMA + ', ' + @DLMN          
      
  /*Cuotas Pendientes*/      
 set @CuotasPendientes = @CuotaPactadas - @CuotaPagadas       

	SET TRANSACTION ISOLATION LEVEL READ COMMITTED             
	BEGIN TRANSACTION            
        
	  /*Inserccion en la tabbla Cliente Cuota*/          
	  INSERT INTO [ClienteCuota]          
	  ([DLCC],  [DLAN],  [DLAG],  [DLCO],  [DLMO],  [DLNP],  [DLCM],  [DLNE], [DLPA],  [DLMA],           
	   [DLMN],  [DLCR],  [DLAP],  [DLMP],  [DLIC],  [DLST],  [DLER],  [DLFP], [DLESD], [DLFLI],           
	   [NUMCUOTAS], [Codigo_proceso], Estado, FechaDesembolso, MontoOriginal, NroDocumento,  CuotaInformada, FechaCargo, CuotaPactadas, CuotaPagadas, CuotaPendientes,          
	   TipoRegistro, NroTipoCredito)                  
	  VALUES          
	  (@DLCC, @DLAN, @DLAG, @DLCO, @DLMO, @DLNP, @DLCM, @DLNE, @DLPA, @DLMA,          
	   @DLMN, @DLCR,  @DLAP, @DLMP, @DLIC, @DLST, @DLER, CONVERT(CHAR(8),GETDATE(),112), @DLESD, @DLFLI,          
	   @Cuotas, @Codigo_proceso, 'C0', @FechaDesembolso, @MontoOriginal, @NroDocumento,@CuotaInformada, @FechaCargo, @CuotaPactadas, @CuotaPagadas, @CuotasPendientes, 'N',1)          
          

		INSERT INTO DLCRE
	   (DLAÑO, DLAGC, DLCOC, DLCCC, DLNCC, DLCLI, DLCTA, DLDPG, DLDEN, DLACC, DLCCY, DLCUN, DLNCL, DLAPP, DLAPM, DLPRN, DLSGN,DLPRI,         DLOAM,         DLCEM, DLSTS,  DLCUS, DLCCR, DLPLA, DLFLI, DLDNI,         PLDFDE,PLCCD, CUSTID, CUSIDN)
	   (SELECT TOP 1 DLAÑO, DLAGC, DLCOC, DLCCC, DLNCC, DLCLI, DLCTA, DLDPG, DLDEN, @DLNP, DLCCY, 0, @DLNE, @DLPA, @DLMA, @DLMN, ' ',@DeudaPeriodo, @MontoOriginal, DLCEM,DLSTS, DLCUS, DLCCR, DLPLA, DLFLI, @NroDocumento, PLDFDE,PLCCD, CUSTID, CUSIDN FROM DLCRE WHERE DLCCC = @DLCC)
	
		INSERT INTO HistoricoDLCCR
		(CODIGO_PROCESO, DLACC, DLCCY,       DLVCA,     DLVCM, DLVCD,           DLNCT,        DLIMC,      DLIPC, DLITF, DLSTS, DLMOD)
		VALUES
		(@Codigo_proceso, @DLNP,  @DLMO, RIGHT(@DLAP,2), @DLMP, 1,         @CuotaInformada, @DLIC, 0,     0, '', '')


	IF @@ERROR = 0              
	BEGIN            
		COMMIT TRAN            
	END            
	ELSE            
	BEGIN            
		ROLLBACK TRAN              
	END             


GO
/****** Object:  StoredProcedure [dbo].[InsertaCoordinadorCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[InsertaCoordinadorCliente]    
 @codigo_cliente numeric(9, 0),     
 @nombre_coordinador varchar(125),  
 @email_coordinador varchar(50),  
 @usuario_creacion varchar(30),  
 @fecha_creacion datetime  
/*    
Autor: Christian Rivera    
Fecha: 10-06-2014    
Motivo: EA 273-Mejoras convenios    
Descripcion: Registra los datos de los coordinadores por empresa    
*/    
as    
  
begin  
  
declare @id_coordinador int  
  
select @id_coordinador = (isnull(max(id_coordinador), 0) + 1) from coordinador_cliente where codigo_cliente = @codigo_cliente  
  
insert into coordinador_cliente (codigo_cliente, id_coordinador, nombre_coordinador, email_coordinador, estado_coordinador, usuario_creacion, fecha_creacion)      
values (@codigo_cliente, @id_coordinador, @nombre_coordinador, @email_coordinador, 1, @usuario_creacion, @fecha_creacion)  
  
end  
  
   
  
GO
/****** Object:  StoredProcedure [dbo].[InsertaNominaEntradaSalida]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[InsertaNominaEntradaSalida]              
 @CODIGO_PROCESO AS UNIQUEIDENTIFIER,              
 @cantidad_clientes as int,              
 @monto_total_soles as decimal(15,2),              
 @monto_total_dolares as decimal(15,2),              
 @tipo_nomina as char(2),              
 @tipo_formato as char(2),              
 @tipo_proceso as char(2),              
 @usuario as varchar(30)              
               
 AS              
BEGIN              
              
  Declare @CodigoClienteIBS as decimal(9,0)              
  Declare @NombreCliente as nvarchar(100)              
  Declare @IdFuncionario as int              
  DECLARE @Fecha_envio_recepcion as datetime              
  Declare @Cantidad_reg_ok int              
  Declare @Cantidad_reg_ko int             
              
 if @tipo_nomina = 'E'               
 begin              
              
  select distinct @Fecha_envio_recepcion=getdate(), @CodigoClienteIBS= cc.dlcc, @NombreCliente = c.Nombre_Cliente,              
  @IdFuncionario = c.id_funcionario              
  from proceso p inner join clientecuota cc on              
  p.codigo_proceso=cc.codigo_proceso inner join              
  cliente c on c.Codigo_Cliente=p.Codigo_Cliente              
  where p.codigo_proceso=@CODIGO_PROCESO              
                
 end              
 else              
 begin              
                 
  select distinct @Fecha_envio_recepcion=p.Fecha_ProcesoAD, @CodigoClienteIBS= cc.dlcc, @NombreCliente = c.Nombre_Cliente,              
  @IdFuncionario = c.id_funcionario              
  from proceso p inner join clientecuota cc on              
  p.codigo_proceso=cc.codigo_proceso inner join              
  cliente c on c.Codigo_Cliente=p.Codigo_Cliente              
  where p.codigo_proceso=@CODIGO_PROCESO              
                
  declare @fecha datetime            
            
  select @fecha = max(fecha) from ArchivoDescuentosHist where codigo_proceso= @CODIGO_PROCESO               
            
  select @monto_total_soles=sum(convert(decimal(14,2),MontoDescuento)) , @cantidad_clientes = count(Codigo_proceso) from [ArchivoDescuentosHist]              
  where codigo_proceso= @CODIGO_PROCESO and Estado in ('C0', 'CC', 'CD', 'CL','CJ','EE') and Moneda='SOL' and fecha = @fecha               
                
  select @monto_total_dolares=sum(convert(decimal(14,2),MontoDescuento)) , @cantidad_clientes = count(Codigo_proceso) from [ArchivoDescuentosHist]              
  where codigo_proceso= @CODIGO_PROCESO and Estado in ('C0', 'CC', 'CD', 'CL','CJ','EE') and Moneda='DOL' and fecha = @fecha                
                
  select @Cantidad_reg_ok = count(Codigo_proceso) from [ArchivoDescuentosHist]              
  where codigo_proceso= @CODIGO_PROCESO and Estado in ('C0', 'CC', 'CD', 'CL','CJ','EE') and fecha = @fecha and convert(decimal(14,2),MontoDescuento) > 0              
                
  select @Cantidad_reg_ko = count(Codigo_proceso) from [ArchivoDescuentosHist]              
  where codigo_proceso= @CODIGO_PROCESO and Estado not in ('C0', 'CC', 'CD', 'CL','CJ','EE') and fecha = @fecha and convert(decimal(14,2),MontoDescuento) > 0        
                
 end              
           
 IF NOT EXISTS (SELECT Codigo_proceso FROM [dbo].[ClienteNomina] where Codigo_proceso=@CODIGO_PROCESO and Tipo_nomina=@tipo_nomina)          
   begin          
   INSERT INTO [dbo].[ClienteNomina]              
       ([Codigo_proceso]              
       ,[Fecha_envio_recepcion]              
       ,[Cantidad_registros]              
       ,[Cantidad_registros_OK]              
       ,[Cantidad_registros_KO]              
       ,[Monto_deuda_soles]              
       ,[Monto_deuda_dolares]              
       ,[Codigo_clienteIBS]              
       ,[Nombre_empresa]              
       ,[Tipo_nomina]              
       ,[Tipo_formato]              
       ,[Id_funcionario]              
       ,[Fecha_envioFuncionario]              
       ,[Tipo_proceso]              
       )                  VALUES              
       (@CODIGO_PROCESO              
       ,@Fecha_envio_recepcion              
       ,@cantidad_clientes              
       , case when @tipo_nomina = 'E' then 0 else @Cantidad_reg_ok end              
       , case when @tipo_nomina = 'E' then 0 else @Cantidad_reg_ko end              
       ,@monto_total_soles              
       ,@monto_total_dolares              
       ,@CodigoClienteIBS              
    ,@NombreCliente              
       ,@tipo_nomina              
       ,@tipo_formato              
       ,@IdFuncionario              
       ,null              
       ,@tipo_proceso              
       )              
   end              
 else  
   begin  
    update ClienteNomina  
 set fecha_envio_recepcion = @Fecha_envio_recepcion,  
  cantidad_registros_ok = cantidad_registros_ok + (case when @tipo_nomina = 'E' then 0 else @Cantidad_reg_ok end),  
  cantidad_registros_ko = cantidad_registros_ko + (case when @tipo_nomina = 'E' then 0 else @Cantidad_reg_ko end),  
  Monto_deuda_soles = Monto_deuda_soles + @monto_total_soles,  
        Monto_deuda_dolares = Monto_deuda_dolares + @monto_total_dolares     
 where Codigo_proceso=@CODIGO_PROCESO and   
   Tipo_nomina=@tipo_nomina    
   end   
  
   Declare @evento_sistema varchar(500)              
   set @evento_sistema = 'Finaliza registro envio_retorno: codigo_proceso= '+ cast(@CODIGO_PROCESO as varchar(100)) +  ' cantidad_clientes= '+cast(@cantidad_clientes as varchar(10))+ ' monto_total_soles= '+ cast(@monto_total_soles as varchar(20)) + ' monto_total_dolares= '+ cast(@monto_total_dolares as varchar(20))+ ' tipo_nomina= ' + @tipo_nomina + ' tipo_formato = ' + @tipo_formato + ' tipo_proceso= ' + @tipo_proceso              
   execute up_RegistraEventoSistema 'BIFConvenios','Info', 'InsertaNominaEntradaSalida', @evento_sistema, '', @usuario               
              
END 
GO
/****** Object:  StoredProcedure [dbo].[isAccessallowed]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[isAccessallowed]
@UserId 	varchar(100),
@Nombre 	varchar(50)
AS
BEGIN
SET NOCOUNT ON 
	DECLARE @Access 		as bit
	DECLARE @idPaginaRestringida	AS VARCHAR (10)
	DECLARE @User		 	AS varchar(100)

	
	SELECT @idPaginaRestringida = [id] from PaginaRestringida where Nombre = @Nombre
	SET @Access = 1

	if (select CHARINDEX (  '\', @UserId))>0
	begin
		set @user = SUBSTRING ( @UserId, CHARINDEX (  '\', @UserId) + 1, LEN(@UserId))	
	end
	else
	begin
		set @user = @UserId
	end

	--- Revisamos si la pagina tiene acceso restringido
		IF EXISTS ( select null from PaginaRestringida where Nombre = @Nombre) 
		BEGIN
			IF EXISTS ( SELECT null FROM Acceso where UserId = @User and idPaginaRestringida = @idPaginaRestringida) 
			BEGIN	
				SET @Access = 1	
			END
			ELSE
			BEGIN
				SET @Access = 0
			END
		END	
		ELSE
		BEGIN
			SET @Access = 1
		END
SET NOCOUNT OFF

SELECT @Access AS BOOL
END




GO
/****** Object:  StoredProcedure [dbo].[isLoteBloqueoProcesado]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[isLoteBloqueoProcesado]
@numeroLote	bigint
AS
BEGIN
set nocount on
	declare @bit as bit
	SELECT @bit =  fin--cast (case when  rtrim (isnull([respuesta], '')) = '' then 0 else 1 end  as bit) 
	FROM [LoteBloqueo]
	where [CodigoLote]  = @numeroLote
set nocount off
select @bit  as bool

END

GO
/****** Object:  StoredProcedure [dbo].[isLoteProrrogaProcesado]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[isLoteProrrogaProcesado]
@numeroLote	bigint
AS
BEGIN
set nocount on
	declare @bit as bit
	SELECT @bit = fin--cast (case when  rtrim (isnull([respuesta], '')) = '' then 0 else 1 end  as bit) 
	FROM [LoteProrroga]
	where [CodigoLote]  = @numeroLote
set nocount off
select @bit  as bool

END




GO
/****** Object:  StoredProcedure [dbo].[LISTA_CUOTAS_NEGATIVAS]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[LISTA_CUOTAS_NEGATIVAS] ( @ANIO AS INT,@MES AS INT)  
  
--DECLARE @ANIO AS INT  
--DECLARE @MES AS INT  
AS  
  
SET NOCOUNT ON  
  
--SET @ANIO = 2011  
--SET @MES = 2  
--  
--SELECT D.DLEDSC, CC.DLNP,(CC.DLPA + ' ' + CC.DLMA +',' + CC.DLMN) 'NOMBRE'  
--,CC.DLAP 'ANIO'  
--,CC.DLMP 'MES'  
--,CC.DLIC 'CUOTA_COBRAR'  
--FROM CLIENTECUOTA CC INNER JOIN DLEMP D  
--ON ( CC.DLCC = D.DLECUN)  
--WHERE CC.DLAP = @ANIO  
--AND CC.DLMP = @MES  
--AND CC.DLIC <0  
  

SELECT ISNULL(C.DLNCC,'') 'DLNCC',
N.DEAACC, 
ISNULL(C.DLNCL,'') 'DLNCL',
N.DEAPRI ,
N.DEAMEI,
N.DEAMEM
FROM CUOTAS_NEGATIVAS_MAESTRO_CONVENIOS N
LEFT OUTER JOIN DLCRE C ON (N.DEAACC = C.DLACC)
GROUP BY C.DLNCC,N.DEAACC,C.DLNCL,N.DEAPRI ,
N.DEAMEI,
N.DEAMEM
ORDER BY C.DLNCC ASC



GO
/****** Object:  StoredProcedure [dbo].[LISTA_CUOTAS_NEGATIVAS_IBS]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE OR ALTER PROCEDURE [dbo].[LISTA_CUOTAS_NEGATIVAS_IBS]
(@ANIO AS INT,
@MES AS INT)  

AS  
SET NOCOUNT ON  

BEGIN
SELECT E.DLEDSC 'DLEDSC',
R.DLACC 'DLNP',
C.DLNCL 'NOMBRE',
R.DLVCM 'ANIO',
R.DLVCA 'MES',
R.DLIMC 'CUOTA_COBRAR'
FROM DLCCR R
INNER JOIN DLCRE C ON (C.DLACC = R.DLACC)
INNER JOIN DLEMP E ON (C.DLCCC = E.DLECUN)
WHERE R.DLIMC < 0
AND R.DLVCA = @ANIO  
AND R.DLVCM = @MES  
AND R.DLIMC <0 

END
GO
/****** Object:  StoredProcedure [dbo].[LISTA_DETALLE_CUOTA_EMPRESA_IBS]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--- REPORTE TOTAL


CREATE OR ALTER PROCEDURE [dbo].[LISTA_DETALLE_CUOTA_EMPRESA_IBS]
(@CODIGO_CLIENTE AS INT ,
 @MES AS VARCHAR(2),
 @ANIO AS VARCHAR(2)
)
AS
SET NOCOUNT ON


SELECT  C.DLACC 'PAGARE',C.DLNCL 'NOMBRE',DLDNI  'DOCUMENTO' , @ANIO 'ANIO' ,@MES 'MES' ,SUM(R.DLIMC - DLIPC + DLITF) 'SALDO_DEUDA'
FROM DLEMP E
INNER JOIN DLCRE C ON (E.DLECUN = C.DLCCC)
INNER JOIN DLCCR  R ON (C.DLACC = R.DLACC)
WHERE E.DLECUN = @CODIGO_CLIENTE 
AND  CONVERT(INT,  
				CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),R.DLVCA)))) = 1  THEN '0'+ CONVERT(VARCHAR(2),R.DLVCA) ELSE CONVERT(VARCHAR(2),R.DLVCA) END
				+
				CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),R.DLVCM)))) = 1  THEN '0' + CONVERT(VARCHAR(2),R.DLVCM) ELSE CONVERT(VARCHAR(2),R.DLVCM) END
			) 
		<= 
		CONVERT(INT,
				CASE WHEN LEN(@ANIO) = 1 THEN '0' + @ANIO ELSE @ANIO END
				+
				CASE WHEN LEN(@MES) = 1 THEN '0' + @MES ELSE @MES END
				)

GROUP BY C.DLACC,C.DLNCL,DLDNI



GO
/****** Object:  StoredProcedure [dbo].[LISTA_DETALLE_CUOTA_EMPRESA_IBS_OTROS]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE OR ALTER PROCEDURE [dbo].[LISTA_DETALLE_CUOTA_EMPRESA_IBS_OTROS]  
(@CODIGO_CLIENTE AS INT ,  
 @MES AS VARCHAR(2),  
 @ANIO AS VARCHAR(2)  
)  
AS  
SET NOCOUNT ON  
  

SELECT C.DLACC 'PAGARE',C.DLNCL 'NOMBRE',DLDNI  'DOCUMENTO' , @ANIO 'ANIO' ,@MES 'MES' ,SUM(R.DLIMC - DLIPC + DLITF) 'SALDO_DEUDA'
INTO #TEMPO
FROM DLEMP E
INNER JOIN DLCRE C ON (E.DLECUN = C.DLCCC)
INNER JOIN DLCCR  R ON (C.DLACC = R.DLACC)
WHERE E.DLECUN = @CODIGO_CLIENTE 
AND R.DLVCA = @ANIO
AND R.DLVCM = @MES
GROUP BY   C.DLACC,C.DLNCL,DLDNI


  
SELECT  C.DLACC 'PAGARE',C.DLNCL 'NOMBRE',DLDNI  'DOCUMENTO' , @ANIO 'ANIO' ,@MES 'MES' ,SUM(R.DLIMC - DLIPC + DLITF) 'SALDO_DEUDA'  
FROM DLEMP E  
INNER JOIN DLCRE C ON (E.DLECUN = C.DLCCC)  
INNER JOIN DLCCR  R ON (C.DLACC = R.DLACC)  
WHERE E.DLECUN = @CODIGO_CLIENTE   
AND  CONVERT(INT,    
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),R.DLVCA)))) = 1  THEN '0'+ CONVERT(VARCHAR(2),R.DLVCA) ELSE CONVERT(VARCHAR(2),R.DLVCA) END  
    +  
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),R.DLVCM)))) = 1  THEN '0' + CONVERT(VARCHAR(2),R.DLVCM) ELSE CONVERT(VARCHAR(2),R.DLVCM) END  
   )   
  <=   
  CONVERT(INT,  
    CASE WHEN LEN(@ANIO) = 1 THEN '0' + @ANIO ELSE @ANIO END  
    +  
    CASE WHEN LEN(@MES) = 1 THEN '0' + @MES ELSE @MES END  
    )  
AND C.DLACC NOT IN (

	SELECT PAGARE FROM #TEMPO
)
GROUP BY C.DLACC,C.DLNCL,DLDNI  
  


DROP TABLE #TEMPO
  


GO
/****** Object:  StoredProcedure [dbo].[LISTA_DETALLE_CUOTA_EMPRESA_MES_IBS]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE OR ALTER PROCEDURE [dbo].[LISTA_DETALLE_CUOTA_EMPRESA_MES_IBS]
(@CODIGO_CLIENTE AS INT ,
 @MES AS VARCHAR(2),
 @ANIO AS VARCHAR(2))

AS

SET NOCOUNT ON

SELECT C.DLACC 'PAGARE',C.DLNCL 'NOMBRE',DLDNI  'DOCUMENTO' , @ANIO 'ANIO' ,@MES 'MES' ,SUM(R.DLIMC - DLIPC + DLITF) 'SALDO_DEUDA'
FROM DLEMP E
INNER JOIN DLCRE C ON (E.DLECUN = C.DLCCC)
INNER JOIN DLCCR  R ON (C.DLACC = R.DLACC)
WHERE E.DLECUN = @CODIGO_CLIENTE 
AND R.DLVCA = @ANIO
AND R.DLVCM = @MES
GROUP BY   C.DLACC,C.DLNCL,DLDNI


GO
/****** Object:  StoredProcedure [dbo].[LISTA_TOTAL_MES_DEUDA_EMPRES]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
 
CREATE OR ALTER PROCEDURE [dbo].[LISTA_TOTAL_MES_DEUDA_EMPRES]  

(@MES AS VARCHAR(2),  
 @ANIO AS VARCHAR(2)  
)  
AS  
SET NOCOUNT ON  
--  
--DECLARE @MES AS VARCHAR(2)  
--DECLARE @ANIO AS VARCHAR(2)  
--  
--SET @MES  = '4'  
--SET @ANIO = '11'  
  
  
----------------- ÉSTA CONSULTA OBTIENE LA DEUDA TOTAL DEL CLIENTE  
--
--DECLARE @MES  VARCHAR(2)
--SET @MES = 5
--DECLARE @ANIO VARCHAR(2)
--SET @ANIO= 11

SELECT  EMP.DLECUN ,EMP.DLEDSC ,@MES 'MES',@ANIO 'ANIO',  
ISNULL(SUM(CCR.DLIMC - CCR.DLIPC + CCR.DLITF),0) 'DEUDA_TOTAL'  
INTO #TEMP1  
FROM DLEMP EMP  
INNER JOIN DLCRE CRE ON(EMP.DLECUN = CRE.DLCCC)  
INNER JOIN DLCCR CCR ON(CRE.DLACC = CCR.DLACC )   
WHERE  CONVERT(INT,    
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),CCR.DLVCA)))) = 1  THEN '0'+ CONVERT(VARCHAR(2),CCR.DLVCA) ELSE CONVERT(VARCHAR(2),CCR.DLVCA) END  
    +  
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),CCR.DLVCM)))) = 1  THEN '0' + CONVERT(VARCHAR(2),CCR.DLVCM) ELSE CONVERT(VARCHAR(2),CCR.DLVCM) END  
   )   
  <=   
  CONVERT(INT,  
    CASE WHEN LEN(@ANIO) = 1 THEN '0' + @ANIO ELSE @ANIO END  
    +  
    CASE WHEN LEN(@MES) = 1 THEN '0' + @MES ELSE @MES END  
    )  
  
GROUP BY EMP.DLECUN,EMP.DLEDSC  
  

-- OBTIENE LOS CANTIDAD DE PAGARES TOTALES , POR EMPRESA

SELECT E.DLECUN , C.DLACC
INTO #TEMP_CANTIDAD_TOTAL_PAGARES_DEUDA    
FROM DLEMP E    
INNER JOIN DLCRE C ON (E.DLECUN = C.DLCCC)    
INNER JOIN DLCCR  R ON (C.DLACC = R.DLACC)    
--WHERE E.DLECUN = @CODIGO_CLIENTE    
AND  CONVERT(INT,      
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),R.DLVCA)))) = 1  THEN '0'+ CONVERT(VARCHAR(2),R.DLVCA) ELSE CONVERT(VARCHAR(2),R.DLVCA) END    
    +    
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),R.DLVCM)))) = 1  THEN '0' + CONVERT(VARCHAR(2),R.DLVCM) ELSE CONVERT(VARCHAR(2),R.DLVCM) END    
   )    
  <=     
  CONVERT(INT,    
    CASE WHEN LEN(@ANIO) = 1 THEN '0' + @ANIO ELSE @ANIO END    
    +    
    CASE WHEN LEN(@MES) = 1 THEN '0' + @MES ELSE @MES END    
    )    
GROUP BY  E.DLECUN,E.DLEDSC ,c.dlncl , C.DLACC  

  
----------------- ÉSTA CONSULTA OBTIENE LA DEUDA DEL MES DEL CLIENTE  
  
--107476
--
--DECLARE @MES  VARCHAR(2)
--SET @MES = 5
--DECLARE @ANIO VARCHAR(2)
--SET @ANIO= 11

 SELECT EMP2.DLECUN,ISNULL(SUM(CCR2.DLIMC - CCR2.DLIPC + CCR2.DLITF),0) 'DEUDA_SOLO_MES' ,isnull(COUNT(1),0) 'CANTIDAD_TOTAL_PAGARES_MES'  
INTO #TEMP2  
 FROM DLEMP EMP2  
 INNER JOIN DLCRE CRE2 ON(EMP2.DLECUN = CRE2.DLCCC)  
 INNER JOIN DLCCR CCR2 ON(CRE2.DLACC = CCR2.DLACC )  
 WHERE CONVERT(INT,    
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),CCR2.DLVCA)))) = 1  THEN '0'+ CONVERT(VARCHAR(2),CCR2.DLVCA) ELSE CONVERT(VARCHAR(2),CCR2.DLVCA) END  
    +  
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),CCR2.DLVCM)))) = 1  THEN '0' + CONVERT(VARCHAR(2),CCR2.DLVCM) ELSE CONVERT(VARCHAR(2),CCR2.DLVCM) END  
   )   
  =   
  CONVERT(INT,  
 CASE WHEN LEN(@ANIO) = 1 THEN '0' + @ANIO ELSE @ANIO END  
    +  
    CASE WHEN LEN(@MES) = 1 THEN '0' + @MES ELSE @MES END  
    )  
    --AND EMP2.DLECUN = EMP.DLECUN  
  GROUP BY EMP2.DLECUN,EMP2.DLEDSC  
    
  
--- MATCH  ENTRE LAS DOS CONSULTAS  
  
SELECT T1.DLECUN,T1.DLEDSC ,T1.MES,T1.ANIO,ISNULL(T2.DEUDA_SOLO_MES,0) 'DEUDA_MES', ISNULL(T2.CANTIDAD_TOTAL_PAGARES_MES,0) 'CANTIDAD_TOTAL_PAGARES_MES' ,ISNULL( T1.DEUDA_TOTAL,0) 'DEUDA_TOTAL' ,(SELECT ISNULL(COUNT(*),0) FROM #TEMP_CANTIDAD_TOTAL_PAGARES_DEUDA WHERE DLECUN  = T1.DLECUN) 'CANTIDAD_TOTAL_PAGARES_DEUDA'
FROM #TEMP1 T1  
LEFT OUTER JOIN #TEMP2 T2  
ON (T1.DLECUN = T2.DLECUN)  
  
------- BORRA LOS TEMPORALES  
  
DROP TABLE  #TEMP1  
DROP TABLE  #TEMP2  
GO
/****** Object:  StoredProcedure [dbo].[listar_Archivos_Importacion]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[listar_Archivos_Importacion]  
as  
select distinct FormatoArchivoImportacion from cliente 

GO
/****** Object:  StoredProcedure [dbo].[Listar_Cliente_FormatoImportacion]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[Listar_Cliente_FormatoImportacion]  
as   
select Codigo_Cliente,Nombre_cliente from Cliente  
order by Nombre_cliente  

GO
/****** Object:  StoredProcedure [dbo].[LISTAR_EMPRESAS_CANTIDAD_PAGARES_SALDOS_TOTALES]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE OR ALTER PROCEDURE [dbo].[LISTAR_EMPRESAS_CANTIDAD_PAGARES_SALDOS_TOTALES]
(@CODIGO_PROCESO  AS UNIQUEIDENTIFIER)
AS 
SET NOCOUNT ON

BEGIN

--DECLARE @CODIGO_PROCESO  AS UNIQUEIDENTIFIER
DECLARE	@CODIGO_CLIENTE_DLEMP AS INT,
		@DLEAEN AS INT ,
		@DLEMEN AS INT,
		@DLEDEN AS INT

--SET @CODIGO_PROCESO  = 'AC8F40D9-F03D-4140-A861-A533BCC9C1FF'

SELECT DISTINCT @CODIGO_CLIENTE_DLEMP  =  DLCC FROM CLIENTECUOTA WHERE CODIGO_PROCESO = @CODIGO_PROCESO  

SELECT @DLEAEN=DLEAEN,@DLEMEN=DLEMEN,@DLEDEN=DLEDEN 
FROM DLEMP  WHERE DLECUN = @CODIGO_CLIENTE_DLEMP


SELECT @DLEAEN , @DLEMEN,@DLEDEN

SELECT ISNULL(SUM(DLIMC - DLIPC + DLITF),0) FROM CLIENTECUOTA CC
LEFT OUTER JOIN DLCCR CR ON (CC.DLNP = CR.DLACC)
AND CC.CODIGO_PROCESO = @CODIGO_PROCESO
AND (CONVERT(INT,  
        CASE WHEN LEN(CR.DLVCA) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCA) ELSE CONVERT(VARCHAR(2), CR.DLVCA) END +   
        CASE WHEN LEN(CR.DLVCM) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCM) ELSE CONVERT(VARCHAR(2),CR.DLVCM) END  +   
        CASE WHEN LEN(CR.DLVCD) =1 THEN '0' + CONVERT(VARCHAR(2),CR.DLVCD) ELSE CONVERT(VARCHAR(2),CR.DLVCD) END )   
        <=  
        CONVERT(INT,  
        CASE WHEN LEN(@DLEAEN) =1 THEN '0' + CONVERT(VARCHAR(2),@DLEAEN) ELSE CONVERT(VARCHAR(2),@DLEAEN) END +--CONVERT(VARCHAR(2),@DLEAEN) +   
        CASE WHEN LEN(@DLEMEN) =1 THEN '0' + CONVERT(VARCHAR(2),@DLEMEN) ELSE CONVERT(VARCHAR(2),@DLEMEN) END  +   
        CASE WHEN LEN(@DLEDEN) =1 THEN '0' + CONVERT(VARCHAR(2),@DLEDEN) ELSE CONVERT(VARCHAR(2),@DLEDEN) END  
        )  
 )


END
GO
/****** Object:  StoredProcedure [dbo].[LISTAR_RESULTADO_DEUDA_MES]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


---- RESULTA REPORTE SÓLO MES ACTUAL


CREATE OR ALTER PROCEDURE [dbo].[LISTAR_RESULTADO_DEUDA_MES] 
(@CODIGO_CLIENTE AS INT ,
 @MES AS VARCHAR(2),
 @ANIO AS VARCHAR(2))

AS
SET NOCOUNT ON 
 
SELECT E.DLEDSC, isnull(SUM(R.DLIMC - DLIPC + DLITF),0) 'total_deuda_mes' , isnull(COUNT(1),0) 'cantidad_pagares'
FROM DLEMP E
INNER JOIN DLCRE C ON (E.DLECUN = C.DLCCC)
INNER JOIN DLCCR  R ON (C.DLACC = R.DLACC)
WHERE E.DLECUN = @CODIGO_CLIENTE  
AND R.DLVCA = @ANIO
AND R.DLVCM = @MES
GROUP BY  E.DLEDSC


GO
/****** Object:  StoredProcedure [dbo].[LISTAR_RESULTADO_DEUDA_TOTAL]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

  
  
CREATE OR ALTER PROCEDURE [dbo].[LISTAR_RESULTADO_DEUDA_TOTAL]  
(@CODIGO_CLIENTE AS INT ,  
 @MES AS VARCHAR(2),  
 @ANIO AS VARCHAR(2))  
AS  
  
SELECT E.DLEDSC,isnull(SUM(R.DLIMC - r.DLIPC + r.DLITF),0) 'total_deuda' ,isnull(COUNT(1),0) 'total_cantidad'  
INTO #TEMPO1  
FROM DLEMP E  
INNER JOIN DLCRE C ON (E.DLECUN = C.DLCCC)  
INNER JOIN DLCCR  R ON (C.DLACC = R.DLACC)  
WHERE E.DLECUN = @CODIGO_CLIENTE  
AND  CONVERT(INT,    
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),R.DLVCA)))) = 1  THEN '0'+ CONVERT(VARCHAR(2),R.DLVCA) ELSE CONVERT(VARCHAR(2),R.DLVCA) END  
    +  
    CASE WHEN LEN(RTRIM(LTRIM(CONVERT(VARCHAR(2),R.DLVCM)))) = 1  THEN '0' + CONVERT(VARCHAR(2),R.DLVCM) ELSE CONVERT(VARCHAR(2),R.DLVCM) END  
   )  
  <=   
  CONVERT(INT,  
    CASE WHEN LEN(@ANIO) = 1 THEN '0' + @ANIO ELSE @ANIO END  
    +  
    CASE WHEN LEN(@MES) = 1 THEN '0' + @MES ELSE @MES END  
    )  
  
GROUP BY  E.DLEDSC ,c.dlncl , C.DLACC  
  
  
SELECT DLEDSC , ISNULL(SUM(TOTAL_DEUDA),0) 'TOTAL_DEUDA' , ISNULL(COUNT(1),0) 'TOTAL_CANTIDAD'  
FROM #TEMPO1  
GROUP BY DLEDSC  
  
  
DROP TABLE #TEMPO1
GO
/****** Object:  StoredProcedure [dbo].[LogEnvioCorreoInsert]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*05 Log Envio Correos*/

CREATE OR ALTER PROCEDURE [dbo].[LogEnvioCorreoInsert]
(
	@iProcesoAutomaticoId	INT,
	@iTipoEnvioCorreoId		INT,
	@iCodigoCliente			INT,
	@iCodigoIBS				INT,
	@vCodigoProceso			VARCHAR(100),
	@iAnioPeriodo			INT,
	@iMesPeriodo			INT,
	@vMensajeProceso		VARCHAR(1000),
	@iEstado				INT,
	@vUsuario				VARCHAR(100)
)
AS
BEGIN
	INSERT INTO [dbo].[LOG_ENVIO_CORREOS]
	(iProcesoAutomaticoId,iTipoEnvioCorreoId,iCodigoCliente,iCodigoIBS,vCodigoProceso,iAnioPeriodo,iMesPeriodo,vMensajeProceso,iEstado,vUsuarioCreacion,dFechaCreacion)
	VALUES
	(@iProcesoAutomaticoId,@iTipoEnvioCorreoId,@iCodigoCliente,@iCodigoIBS,@vCodigoProceso,@iAnioPeriodo,@iMesPeriodo,@vMensajeProceso,@iEstado,@vUsuario,getdate())
END

GO
/****** Object:  StoredProcedure [dbo].[LogEnvioCorreoSelect]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[LogEnvioCorreoSelect]
(
	@iProcesoAutomaticoId	INT,
	@iTipoEnvioCorreoId		INT,
	@iEnvioCorreoId			INT,
	@iCodigoCliente			INT,
	@iCodigoIBS				INT,	
	@iEstado				INT	
)
AS
BEGIN
	SELECT
		LEC.iProcesoAutomaticoId AS iProcesoAutomatico,
		LEC.iTipoEnvioCorreoId AS iTipoEnvioCorreoId,
		sp1.vDescripcion AS vTipoEnvioCorreoId,
		LEC.iEnvioCorreoId AS iEnvioCorreoId,		
		LEC.iCodigoCliente AS iCodigoCliente,
		LEC.iCodigoIBS AS iCodigoIBS,
		C.Nombre_Cliente AS vNombreCliente,
		LEC.vCodigoProceso AS vCodigoProceso,
		LEC.iAnioPeriodo AS iAnioPeriodo,
		LEC.iMesPeriodo AS iMesPeriodo,
		LEC.vMensajeProceso as vMensajeProceso,
		LEC.iEstado AS iEstado,
		sp2.vDescripcion AS vEstado,
		LEC.vUsuarioCreacion AS vUsuario,
		LEC.dFechaCreacion AS dFecha
	FROM [dbo].[LOG_ENVIO_CORREOS] LEC
	INNER JOIN [dbo].[Cliente] C ON LEC.iCodigoCliente = C.Codigo_Cliente	
	INNER JOIN [dbo].[SystemParameters] sp1 ON LEC.iTipoEnvioCorreoId = sp1.vValor AND sp1.iGrupoId = 2
	INNER JOIN [dbo].[SystemParameters] sp2 ON LEC.iEstado = sp2.vValor AND sp2.iGrupoId = 3
	WHERE
			(LEC.iProcesoAutomaticoId = @iProcesoAutomaticoId OR @iProcesoAutomaticoId = 0)
		AND (LEC.iTipoEnvioCorreoId = @iTipoEnvioCorreoId OR @iTipoEnvioCorreoId = 0)
		AND (LEC.iEnvioCorreoId = @iEnvioCorreoId OR @iEnvioCorreoId = 0)
		AND (LEC.iCodigoCliente = @iCodigoCliente OR @iCodigoCliente = 0)
		AND (LEC.iCodigoIBS = @iCodigoIBS OR @iCodigoIBS = 0)		
		AND (LEC.iEstado = @iEstado OR @iEstado = 0)
	ORDER BY LEC.dFechaCreacion DESC
	
END

GO
/****** Object:  StoredProcedure [dbo].[MES_DLCCR]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE OR ALTER PROCEDURE [dbo].[MES_DLCCR]

AS 
SET NOCOUNT ON

SELECT DISTINCT DLVCM
FROM DLCCR 
ORDER BY DLVCM DESC
GO
/****** Object:  StoredProcedure [dbo].[ObtenerEstadoProcesoBatch]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[ObtenerEstadoProcesoBatch]  
 @codigo_proceso char(3)  
/*******************************************************************************  
Autor: Christian Rivera  
Fecha creacion: 16-09-2013  
Descripcion: Obtiene el estado del proceso batch  
********************************************************************************/  
  
as  
  
set nocount on  
  
if not exists (select * from logprocesobatch where codigo_proceso = @codigo_proceso and fecha_proceso = convert(char(8),getdate(),112))  
begin  
--insertamos nuevo proceso  
 insert into logprocesobatch   
  (codigo_proceso, fecha_proceso, hora_inicio, hora_fin, estado_proceso)  
 values (@codigo_proceso,  convert(char(8),getdate(),112), '', '', 0)  
end  
  
--obtenemos el estado del proceso  
select estado_proceso   
from logprocesobatch   
where codigo_proceso = @codigo_proceso and  
 fecha_proceso = convert(char(8),getdate(),112)  
  
GO
/****** Object:  StoredProcedure [dbo].[ObtenerParametros]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ObtenerParametros]
@GrupoId int,
@ParametroId int
as
begin

	select  iGrupoId, iParametroId, vDescripcion, vValor, iOrden,iVisible
	from SystemParameters
	where iGrupoId = @GrupoId and iParametroId = @ParametroId
end


GO
/****** Object:  StoredProcedure [dbo].[obtenerResumenClienteCuota]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[obtenerResumenClienteCuota]
@codigo_proceso as uniqueidentifier
as
begin
select 
  count(1) as cantidad,
  montosoles = ISNULL ( (  
    select sum ( DLIC )   
    from clientecuota   
    where codigo_proceso = @codigo_proceso
     and DLMO = 'SOL'  
    ), 0 ) ,  
  montodolares = ISNULL ((  
    select sum ( DLIC )   
    from clientecuota   
    where codigo_proceso = @codigo_proceso
     and DLMO = 'USD'  
    ), 0 )
  from clientecuota
 where codigo_proceso =@codigo_proceso
end
GO
/****** Object:  StoredProcedure [dbo].[ObtenerUltimaActualizacionProcesoBatch]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ObtenerUltimaActualizacionProcesoBatch]
AS
BEGIN
SET NOCOUNT ON 
SET LANGUAGE Spanish;
	
	declare @mensaje as varchar(250) = ''

	--Fecha de ultima actualizacion del proceso batch
	declare @fecha as varchar(250) = (select top(1) fecha_proceso + ' ' + hora_fin 
									  from logprocesobatch
									  where estado_proceso = 1 and codigo_proceso = 'ACT'
									  order by fecha_proceso desc, hora_inicio desc)

	declare @fecha_batch  as datetime = isnull((SELECT TRY_CONVERT( DATETIME, @fecha)),'1900-01-01');

	if(YEAR(@fecha_batch)= 1900)
	begin
		set @mensaje = 'El sistema no ha sido actualizado'
	end
	else
	begin
		set @mensaje = 'Actualizado al ' + datename(dw,@fecha_batch) + ' ' + 
					   LTRIM(RTRIM(str(day(@fecha_batch)))) + ' de ' + datename(month,@fecha_batch) + 
					   ' del ' + LTRIM(RTRIM(str(YEAR(@fecha_batch)))) +
					   ' a las ' + LEFT(convert(varchar, @fecha_batch, 24),5)
	end
SET NOCOUNT OFF

	select @mensaje as mensaje

END

-- [dbo].[ObtenerUltimaActualizacionProcesoBatch] -- FIN


GO
/****** Object:  StoredProcedure [dbo].[ObtieneCoordinadorCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[ObtieneCoordinadorCliente]  
 @codigo_cliente numeric(9, 0)  
/*  
Autor: Christian Rivera  
Fecha: 10-06-2014  
Motivo: EA 273-Mejoras convenios  
Descripcion: Obtiene los datos de los coordinadores por empresa  
*/  
as  
  
select codigo_cliente,   
  id_coordinador,   
  isnull(nombre_coordinador,'') as nombre_coordinador,   
  isnull(email_coordinador,'') as email_coordinador     
from coordinador_cliente  
where codigo_cliente = @codigo_cliente and   
  estado_coordinador = 1
GO
/****** Object:  StoredProcedure [dbo].[PASE]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[PASE] 
AS
	SELECT [DLCC], [DLAN], [DLAG], [DLCO], [DLMO], 
	--[DLNP] = case when Estado = 'CL' THEN 0 ELSE [DLNP] END, 
	[DLNP] , 
	[DLCM], [DLNE],  [DLCR], 
	[DLAP], [DLMP],--[DLMP], 
	[DLIC] = cast (	rtrim(ltrim ( 
		REPLACE (cast ( isnull([DLIC], 0) AS NVARCHAR(16)), '.', '')
	))
	as numeric ), 
	[DLST], 
	[DLID] =  cast (REPLACE (cast ( isnull([DLID], 0) AS NVARCHAR(16)), '.', '') as numeric ) , 
	[DLFP]  = convert (varchar(8) ,getdate(), 112), 
	[DLER] = case when Estado = 'CL' THEN 'N' ELSE 'A' END
	--into #tmp
	FROM [ClienteCuota]
	WHERE  [Estado] in ('C0', 'CC', 'CD', 'CL') --= 'C0' OR ESTADO = 'CB'	
	AND Pago  = 1
	and [Codigo_proceso] in ( 
select  [Codigo_proceso]  from proceso where Anio_periodo = 2007 and Mes_Periodo = 6
and codigo_proceso not in (  'E805531C-4DB6-4C8E-9E4D-828E9B56AEEB',
'9B7BC189-C4CD-4202-B0D6-40610670D774'
 ) 
)
and dlnp not in ( 233100199199   , 
233100214432   )

GO
/****** Object:  StoredProcedure [dbo].[pListarAccesoPerfil]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[pListarAccesoPerfil]
      -- Add the parameters for the stored procedure here
      as
BEGIN
      
      SELECT iCodPerfil as COD, vNombrePerfil as NOM 
      
      from 
        PerfilSeguridad 
       
      
END


GO
/****** Object:  StoredProcedure [dbo].[pListarAccesoSeguridad]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[pListarAccesoSeguridad]
      -- Add the parameters for the stored procedure here
      as
BEGIN
      
      SELECT a.vUserId AS Usuario, a.vNombreUser as NombreUsuario,p.vNombrePerfil as NombrePerfil, 
      case when a.iEstado=0 then 'Activo' else 'Inactivo' END as Estado
      from dbo.AccesoSeguridad A INNER JOIN
      dbo.PerfilSeguridad P on a.iCodPerfil=p.iCodPerfil
      
END

GO
/****** Object:  StoredProcedure [dbo].[ProcesaArchivoDescuentoDefault]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[ProcesaArchivoDescuentoDefault]                        
@Codigo_proceso as uniqueidentifier,                        
@usuario  varchar(30) = ''                        
AS                        
BEGIN                        
SET NOCOUNT ON                         
-- Verificamos si la informacion que necesitamos procesar es correcta                        
 -- Modificacion: En el reproceso eliminar los que existen en el temporal                        
 -- unicamente                        
 --DELETE FROM ERRORARCHIVODESCUENTOS                        
 --WHERE Codigo_proceso = @Codigo_proceso                        
--Actualizamos la informacion de proceso                         
 UPDATE PROCESO                        
 SET Estado = 'D1'                        
 WHERE Codigo_proceso = @Codigo_proceso                        
                         
              
              
 -- Sin error a todos los [ARCHIVODESCUENTOS]                        
 UPDATE [ARCHIVODESCUENTOS]                        
 SET Estado = 'C0'                        
 WHERE Codigo_proceso = @Codigo_proceso                        
 -- No encontrado a todos los de ClienteCuota                        
/* UPDATE ClienteCuota                        
 SET Estado = 'CN',                        
  DLID = NULL                         
 WHERE  Codigo_proceso = @Codigo_proceso                        
*/                        
 -- La actualizacion debe agregar los valores, no remplazarlos                        
 -- Actualizamos todos los valores a "No Encontrado" y Importe Descuento = 0                         
 -- para todos los registros del Archivo de Descuentos                        
 --- Actualizamos los valores a no encontrado para todos los que no estan en el archivo de descuentos                         
 --y que tienen monto = 0 o null                        
 UPDATE ClienteCuota                        
 SET Estado = 'CN',                        
  DLID = NULL                         
 WHERE  Codigo_proceso = @Codigo_proceso                        
  AND (rtrim(ltrim( DLNP ))  IN ( SELECT rtrim(ltrim(NumeroPagare)) FROM ARCHIVODESCUENTOS                         
       where Codigo_proceso = @Codigo_proceso)                         
   or DLID is null)                        
 --Analizamos si la informacion tiene campos requeridos para el proceso en vacio o nulo                        
 UPDATE [ARCHIVODESCUENTOS]                        
 SET Estado = 'CA'                        
 WHERE (rtrim(isnull ( NumeroPagare, '')) = ''                        
  --or rtrim(isnull ( [CodigoModular], '')) = '' 20040312: CodigoModular no es necesario                        
  or rtrim(isnull ( [MontoDescuento] , '')) = '')                        
  AND Codigo_proceso = @Codigo_proceso                        
                             
 -- Pago Mayor que cuota                         
 UPDATE ARCHIVODESCUENTOS                         
 SET Estado = 'CC'                         
 FROM ClienteCuota c                        
 WHERE CAST (                        
   case when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   else                        
    MontoDescuento                         
   end                         
   /*case when len ( MontoDescuento ) > 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    substring(MontoDescuento, 1, len(MontoDescuento)  - 2 ) + '.' +  substring(MontoDescuento,  len(MontoDescuento)  - 1, len(MontoDescuento))                          
   when len ( MontoDescuento ) <= 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    MontoDescuento                          
   when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   end */                        
  as decimal(14,2))  > C.DLIC                        
 AND LTRIM(RTRIM (                         
  REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario     
 AND c.CODIGO_PROCESO = @Codigo_proceso                        
 AND ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
 AND ARCHIVODESCUENTOS.Estado = 'C0'                        
 --Pago Menor que cuota                        
 UPDATE ARCHIVODESCUENTOS                         
 SET Estado = 'CD'                         
 FROM ClienteCuota c                        
 WHERE CAST (                        
   case when ISNUMERIC ( MontoDescuento ) = 0 then                   
    '0'                        
   else                        
    MontoDescuento                        
   end                         
   /*case when len ( MontoDescuento ) > 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    substring(MontoDescuento, 1, len(MontoDescuento)  - 2 ) + '.' +  substring(MontoDescuento,  len(MontoDescuento)  - 1, len(MontoDescuento))                          
   when len ( MontoDescuento ) <= 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    MontoDescuento                          
   when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   end */                        
  as decimal(14,2))  < C.DLIC                        
 AND LTRIM(RTRIM (                         
  REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario                        
 AND c.CODIGO_PROCESO = @Codigo_proceso                        
 and ARCHIVODESCUENTOS.Estado = 'C0'                        
 and ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
 
/* inicio comentado para pagos sin considerar situacion laboral                        
 -- Situación Laboral no coincide --victor Gutierrez              
 declare @codigo_cliente varchar(9)               
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =@Codigo_proceso              
               
--select substring(DLCR,1,2) from ClienteCuota where codigo_proceso = 'B10E56A6-9DB3-46E2-8529-5E4B402CD397'              
              
 UPDATE ARCHIVODESCUENTOS                     
 SET Estado = 'CE'                         
 FROM ClienteCuota c                        
 WHERE isnull(SituacionLaboral, '') <> case when (@codigo_cliente not in ('190828082','190828080','190828743','190828950')) then DLST else substring(DLCR,1,2) end                        
  AND LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario                        
  AND c.CODIGO_PROCESO = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
  AND ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        

fin pagos sin considerar situacion laboral

*/
 -- Año y mes no corresponden a periodo                        
 UPDATE ARCHIVODESCUENTOS                         
 SET Estado = 'CF'                         
 FROM ClienteCuota c                        
 WHERE (rtrim(isnull(Anio, '')) <> rtrim(DLAP) or rtrim(isnull(Mes, '')) <> rtrim(DLMP))                           
  AND LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM))= '' 20040312: CodigoModular no es necesario                        
  AND C.CODIGO_PROCESO = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
  AND ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
--***********************************************************************                        
 -- Verificamos los datos de coincidencia (valores opcionales )                         
--***********************************************************************                        
 -- Moneda no coincide                        
 UPDATE ARCHIVODESCUENTOS                         
 SET Estado = 'CH'                         
 FROM ClienteCuota c                  
 WHERE (Moneda <> DLMO or rtrim(isnull ( Moneda , '' ))  = '')                        
  AND LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario                        
  AND C.CODIGO_PROCESO = @Codigo_proceso                        
  AND ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
                          
 -- Nombre del trabajador no coincide //Eliminado : problema con Ñ al retornar                        
/* UPDATE ARCHIVODESCUENTOS                         
 SET Estado = 'CI'                         
 FROM ClienteCuota c                        
 WHERE ( RTRIM(LTRIM(NombreTrabajador)) <> REPLACE ( RTRIM(LTRIM(DLNE)), ',', '') or isnull ( NombreTrabajador , '' )  = '' )                        
  AND                         
  LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  AND  CODIGO_PROCESO = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
*/                        
 -- Cuota no coincide                        
 UPDATE ARCHIVODESCUENTOS                        
 SET Estado = 'CJ'                        
 FROM ClienteCuota c                        
 WHERE ( Cuota  <> /*rtrim(ltrim (                         
    cast ( isnull([DLIC], 0) AS NVARCHAR(16))                        
    ))*/                        
 CAST ( case when ISNUMERIC ( DLIC ) = 0 then                         
    '0'                        
   else                        
    DLIC                        
   end as decimal(14,2))                         
 /*rtrim(ltrim (                         
    REPLACE (cast ( isnull([DLIC], 0) AS NVARCHAR(16)), '.', '')                        
    ))*/                        
  or rtrim(isnull ( Cuota , '' )) = '' )                         
  AND LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario                        
  AND C.CODIGO_PROCESO = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
  AND ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
 -- Codigo de referencia no coincide                        
 --RESPINOZA 20071031 - No es necesaria esta verificacion                        
 /*UPDATE ARCHIVODESCUENTOS                        
 SET Estado = 'CK'                        
 FROM ClienteCuota c                        
 WHERE ( REPLACE (CodigoReferencia, '''', '') <> DLCR  )                         
  AND LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  AND C.CODIGO_PROCESO = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
  and ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso*/                        
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario                        
                        
 --Codigo Modular Errado o Numero de pagaré                        
/* UPDATE ARCHIVODESCUENTOS                        
 set Estado = 'CO'                        
 FROM ClienteCuota c                        
 WHERE   ( LTRIM(RTRIM (                         
    REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))    
   and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) <> RTRIM(LTRIM(DLCM))                        
   )                        
   AND CODIGO_PROCESO = @Codigo_proceso                        
   and ARCHIVODESCUENTOS.Estado = 'C0'                        
 ----Revise el número de pagaré                        
  UPDATE ARCHIVODESCUENTOS                        
  set Estado = 'CO'                        
  FROM ClienteCuota c                        
  WHERE                          
  (                        
  LTRIM(RTRIM (                        
    REPLACE ( NUMEROPAGARE, '''', ''))) <> RTRIM(LTRIM(DLNP))                         
    and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM))                        
  )                        
  AND CODIGO_PROCESO = @Codigo_proceso                       
  and ARCHIVODESCUENTOS.Estado = 'C0'*/                        
--************************************************************                        
----***********************Existencia del registro en tabla de envio****************************                        
 --Codigo no coincide con los existentes en la carga -NumeroPagare-                        
 UPDATE ARCHIVODESCUENTOS                        
 SET Estado = 'CB'                        
 WHERE LTRIM(RTRIM (                        
 REPLACE ( NUMEROPAGARE, '''', ''))) NOT IN (SELECT RTRIM(LTRIM(DLNP))                         
       FROM CLIENTECUOTA                         
       WHERE CODIGO_PROCESO = @Codigo_proceso)                        
  and Estado = 'C0'                        
  AND Codigo_proceso = @Codigo_proceso                        
 --Codigo no coincide con los existentes en la carga -CodigoModular-                        
 UPDATE ARCHIVODESCUENTOS                        
 SET Estado = 'CG'                        
 WHERE LTRIM(RTRIM (                         
 REPLACE ( CodigoModular, '''', ''))) NOT IN (SELECT RTRIM(LTRIM(DLCM))                         
       FROM CLIENTECUOTA                         
       WHERE CODIGO_PROCESO = @Codigo_proceso)                        
  and Estado = 'C0'                        
  and ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
--****************************************                     
-- Actualizaciones                        
--****************************************                        
 -- Actualizamos los estados de todos los registros cargados en el archivo                        
 UPDATE ClienteCuota                        
 SET ClienteCuota.Estado = AD.Estado,                        
  DLID = CAST (                        
   case when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   else                        
    MontoDescuento                        
   end                        
   /*case when len ( MontoDescuento ) > 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    substring(MontoDescuento, 1, len(MontoDescuento)  - 2 ) + '.' +  substring(MontoDescuento,  len(MontoDescuento)  - 1, len(MontoDescuento))                          
   when len ( MontoDescuento ) <= 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    MontoDescuento                          
   when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   end*/                        
  as decimal(14,2))                        
 from ARCHIVODESCUENTOS AD                        
 WHERE  LTRIM(RTRIM ( REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  AND CLIENTECUOTA.CODIGO_PROCESO = @Codigo_proceso                        
  AND AD.Codigo_proceso = @Codigo_proceso                        
 -- Respinoza 20040618 - eliminamos los registros que existen en el temporal                        
         
DELETE FROM ERRORARCHIVODESCUENTOS                        
WHERE Codigo_proceso = @Codigo_proceso                        
AND NumeroPagare IN ( SELECT NumeroPagare FROM ARCHIVODESCUENTOS )                        
         
-- Pasamos los datos con errores a una tabla temporal                        
 INSERT INTO [ErrorArchivoDescuentos]([Codigo_proceso], [CodigoBanco], [Moneda], [NumeroPagare],                         
      [CodigoModular], [NombreTrabajador], [CodigoReferencia],                         
      [Anio], [Mes], [Cuota], [SituacionLaboral], [MontoDescuento], [Estado])                        
     SELECT ad.Codigo_proceso, [CodigoBanco], [Moneda], [NumeroPagare],                         
      [CodigoModular], [NombreTrabajador], [CodigoReferencia],                         
      [Anio], [Mes], [Cuota], [SituacionLaboral], [MontoDescuento], [Estado]                         
    FROM [ARCHIVODESCUENTOS] AD                        
    WHERE ad.Estado NOT in ('C0', 'CC', 'CD')                        
    and ad.Codigo_proceso = @Codigo_proceso                        
 -- Actualizamos los montos de descuentos realizados y colocamos la informacion                         
 -- acerca de las diferencias        
 /*update ClienteCuota                        
 set DLID = CAST (                        
   case when len ( MontoDescuento ) > 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    substring(MontoDescuento, 1, len(MontoDescuento)  - 2 ) + '.' +  substring(MontoDescuento,  len(MontoDescuento)  - 1, len(MontoDescuento))                          
   when len ( MontoDescuento ) <= 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    MontoDescuento                          
   when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   end                        
  as decimal(14,2))--, --Actualizacion de informacion de cuotas                         
 from ArchivoDescuentos AD                          
 WHERE  LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  AND CODIGO_PROCESO = @Codigo_proceso                        
*/                        
      
 --REGISTRAMOS EN EL HISTORICO ANTES DE BORRAR LA TABLA ARCHIVODESCUENTOS                          
 INSERT INTO [ArchivoDescuentosHist](                          
 [Fecha], [CodigoBanco], [Moneda], [NumeroPagare], [CodigoModular], [NombreTrabajador], [CodigoReferencia],                          
 [Anio], [Mes], [Cuota], [SituacionLaboral], [MontoDescuento], [Estado], [Codigo_proceso])                           
 SELECT GETDATE(), [CodigoBanco], [Moneda], [NumeroPagare], [CodigoModular], [NombreTrabajador], [CodigoReferencia],                          
 [Anio], [Mes], [Cuota], [SituacionLaboral], [MontoDescuento], [Estado], [Codigo_proceso]                          
 FROM ARCHIVODESCUENTOS                          
 WHERE Codigo_proceso = @Codigo_proceso       
      
 -- ELIMINAMOS LA INFORMACION DE LA TABLA TEMPORAL DE CARGA                                                      
DELETE FROM ARCHIVODESCUENTOS                        
WHERE Codigo_proceso = @Codigo_proceso                
                      
 --Actualizamos la informacion de proceso                         
 UPDATE PROCESO                        
 SET Estado = 'D2',                        
  Fecha_ProcesoAD = getdate()                        
 WHERE Codigo_proceso = @Codigo_proceso                        
 --Si hubo un error en la ejecucion del proceso debemos de colocar ese estado                        
 --en el codigo del programa                        
 EXECUTE AddLogInfo '', @Codigo_proceso, '', '', 'ProcesaArchivoDescuentoDefault', @usuario                         
SET NOCOUNT OFF                        
END 
GO
/****** Object:  StoredProcedure [dbo].[ProcesaArchivoDescuentoDefault_OLD]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[ProcesaArchivoDescuentoDefault_OLD]                        
@Codigo_proceso as uniqueidentifier,                        
@usuario  varchar(30) = ''                        
AS                        
BEGIN                        
SET NOCOUNT ON                         
-- Verificamos si la informacion que necesitamos procesar es correcta                        
 -- Modificacion: En el reproceso eliminar los que existen en el temporal                        
 -- unicamente                        
 --DELETE FROM ERRORARCHIVODESCUENTOS                        
 --WHERE Codigo_proceso = @Codigo_proceso                        
--Actualizamos la informacion de proceso                         
 UPDATE PROCESO                        
 SET Estado = 'D1'                        
 WHERE Codigo_proceso = @Codigo_proceso                        
                         
              
              
 -- Sin error a todos los [ARCHIVODESCUENTOS]                        
 UPDATE [ARCHIVODESCUENTOS]                        
 SET Estado = 'C0'                        
 WHERE Codigo_proceso = @Codigo_proceso                        
 -- No encontrado a todos los de ClienteCuota                        
/* UPDATE ClienteCuota                        
 SET Estado = 'CN',                        
  DLID = NULL                         
 WHERE  Codigo_proceso = @Codigo_proceso                        
*/                        
 -- La actualizacion debe agregar los valores, no remplazarlos                        
 -- Actualizamos todos los valores a "No Encontrado" y Importe Descuento = 0                         
 -- para todos los registros del Archivo de Descuentos                        
 --- Actualizamos los valores a no encontrado para todos los que no estan en el archivo de descuentos                         
 --y que tienen monto = 0 o null                        
 UPDATE ClienteCuota                        
 SET Estado = 'CN',                        
  DLID = NULL                         
 WHERE  Codigo_proceso = @Codigo_proceso                        
  AND (rtrim(ltrim( DLNP ))  IN ( SELECT rtrim(ltrim(NumeroPagare)) FROM ARCHIVODESCUENTOS                         
       where Codigo_proceso = @Codigo_proceso)                         
   or DLID is null)                        
 --Analizamos si la informacion tiene campos requeridos para el proceso en vacio o nulo                        
 UPDATE [ARCHIVODESCUENTOS]                        
 SET Estado = 'CA'                        
 WHERE (rtrim(isnull ( NumeroPagare, '')) = ''                        
  --or rtrim(isnull ( [CodigoModular], '')) = '' 20040312: CodigoModular no es necesario                        
  or rtrim(isnull ( [MontoDescuento] , '')) = '')                        
  AND Codigo_proceso = @Codigo_proceso                        
                             
 -- Pago Mayor que cuota                         
 UPDATE ARCHIVODESCUENTOS                         
 SET Estado = 'CC'                         
 FROM ClienteCuota c                        
 WHERE CAST (                        
   case when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   else                        
    MontoDescuento                         
   end                         
   /*case when len ( MontoDescuento ) > 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    substring(MontoDescuento, 1, len(MontoDescuento)  - 2 ) + '.' +  substring(MontoDescuento,  len(MontoDescuento)  - 1, len(MontoDescuento))                          
   when len ( MontoDescuento ) <= 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    MontoDescuento                          
   when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   end */                        
  as decimal(14,2))  > C.DLIC                        
 AND LTRIM(RTRIM (                         
  REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario     
 AND c.CODIGO_PROCESO = @Codigo_proceso                        
 AND ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
 AND ARCHIVODESCUENTOS.Estado = 'C0'                        
 --Pago Menor que cuota                        
 UPDATE ARCHIVODESCUENTOS                         
 SET Estado = 'CD'                         
 FROM ClienteCuota c                        
 WHERE CAST (                        
   case when ISNUMERIC ( MontoDescuento ) = 0 then                   
    '0'                        
   else                        
    MontoDescuento                        
   end                         
   /*case when len ( MontoDescuento ) > 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    substring(MontoDescuento, 1, len(MontoDescuento)  - 2 ) + '.' +  substring(MontoDescuento,  len(MontoDescuento)  - 1, len(MontoDescuento))                          
   when len ( MontoDescuento ) <= 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    MontoDescuento                          
   when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   end */                        
  as decimal(14,2))  < C.DLIC                        
 AND LTRIM(RTRIM (                         
  REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario                        
 AND c.CODIGO_PROCESO = @Codigo_proceso                        
 and ARCHIVODESCUENTOS.Estado = 'C0'                        
 and ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
                         
 -- Situación Laboral no coincide               
 declare @codigo_cliente varchar(9)               
 select @codigo_cliente = codigo_cliente from proceso where codigo_proceso =@Codigo_proceso              
               
--select substring(DLCR,1,2) from ClienteCuota where codigo_proceso = 'B10E56A6-9DB3-46E2-8529-5E4B402CD397'              
              
 UPDATE ARCHIVODESCUENTOS                     
 SET Estado = 'CE'                         
 FROM ClienteCuota c                        
 WHERE isnull(SituacionLaboral, '') <> case when (@codigo_cliente not in ('190828082','190828080','190828743','190828950')) then DLST else substring(DLCR,1,2) end                        
  AND LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario                        
  AND c.CODIGO_PROCESO = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
  AND ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
 -- Año y mes no corresponden a periodo                        
 UPDATE ARCHIVODESCUENTOS                         
 SET Estado = 'CF'                         
 FROM ClienteCuota c                        
 WHERE (rtrim(isnull(Anio, '')) <> rtrim(DLAP) or rtrim(isnull(Mes, '')) <> rtrim(DLMP))                           
  AND LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM))= '' 20040312: CodigoModular no es necesario                        
  AND C.CODIGO_PROCESO = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
  AND ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
--***********************************************************************                        
 -- Verificamos los datos de coincidencia (valores opcionales )                         
--***********************************************************************                        
 -- Moneda no coincide                        
 UPDATE ARCHIVODESCUENTOS                         
 SET Estado = 'CH'                         
 FROM ClienteCuota c                  
 WHERE (Moneda <> DLMO or rtrim(isnull ( Moneda , '' ))  = '')                        
  AND LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario                        
  AND C.CODIGO_PROCESO = @Codigo_proceso                        
  AND ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
                          
 -- Nombre del trabajador no coincide //Eliminado : problema con Ñ al retornar                        
/* UPDATE ARCHIVODESCUENTOS                         
 SET Estado = 'CI'                         
 FROM ClienteCuota c                        
 WHERE ( RTRIM(LTRIM(NombreTrabajador)) <> REPLACE ( RTRIM(LTRIM(DLNE)), ',', '') or isnull ( NombreTrabajador , '' )  = '' )                        
  AND                         
  LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  AND  CODIGO_PROCESO = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
*/                        
 -- Cuota no coincide                        
 UPDATE ARCHIVODESCUENTOS                        
 SET Estado = 'CJ'                        
 FROM ClienteCuota c                        
 WHERE ( Cuota  <> /*rtrim(ltrim (                         
    cast ( isnull([DLIC], 0) AS NVARCHAR(16))                        
    ))*/                        
 CAST ( case when ISNUMERIC ( DLIC ) = 0 then                         
    '0'                        
   else                        
    DLIC                        
   end as decimal(14,2))                         
 /*rtrim(ltrim (                         
    REPLACE (cast ( isnull([DLIC], 0) AS NVARCHAR(16)), '.', '')                        
    ))*/                        
  or rtrim(isnull ( Cuota , '' )) = '' )                         
  AND LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario                        
  AND C.CODIGO_PROCESO = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
  AND ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
 -- Codigo de referencia no coincide                        
 --RESPINOZA 20071031 - No es necesaria esta verificacion                        
 /*UPDATE ARCHIVODESCUENTOS                        
 SET Estado = 'CK'                        
 FROM ClienteCuota c                        
 WHERE ( REPLACE (CodigoReferencia, '''', '') <> DLCR  )                         
  AND LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  AND C.CODIGO_PROCESO = @Codigo_proceso                        
  and ARCHIVODESCUENTOS.Estado = 'C0'                        
  and ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso*/                        
  --and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM)) = '' 20040312: CodigoModular no es necesario                        
                        
 --Codigo Modular Errado o Numero de pagaré                        
/* UPDATE ARCHIVODESCUENTOS                        
 set Estado = 'CO'                        
 FROM ClienteCuota c                        
 WHERE   ( LTRIM(RTRIM (                         
    REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))    
   and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) <> RTRIM(LTRIM(DLCM))                        
   )                        
   AND CODIGO_PROCESO = @Codigo_proceso                        
   and ARCHIVODESCUENTOS.Estado = 'C0'                        
 ----Revise el número de pagaré                        
  UPDATE ARCHIVODESCUENTOS                        
  set Estado = 'CO'                        
  FROM ClienteCuota c                        
  WHERE                          
  (                        
  LTRIM(RTRIM (                        
    REPLACE ( NUMEROPAGARE, '''', ''))) <> RTRIM(LTRIM(DLNP))                         
    and LTRIM( RTRIM( REPLACE ( CodigoModular, '''', ''))) = RTRIM(LTRIM(DLCM))                        
  )                        
  AND CODIGO_PROCESO = @Codigo_proceso                       
  and ARCHIVODESCUENTOS.Estado = 'C0'*/                        
--************************************************************                        
----***********************Existencia del registro en tabla de envio****************************                        
 --Codigo no coincide con los existentes en la carga -NumeroPagare-                        
 UPDATE ARCHIVODESCUENTOS                        
 SET Estado = 'CB'                        
 WHERE LTRIM(RTRIM (                        
 REPLACE ( NUMEROPAGARE, '''', ''))) NOT IN (SELECT RTRIM(LTRIM(DLNP))                         
       FROM CLIENTECUOTA                         
       WHERE CODIGO_PROCESO = @Codigo_proceso)                        
  and Estado = 'C0'                        
  AND Codigo_proceso = @Codigo_proceso                        
 --Codigo no coincide con los existentes en la carga -CodigoModular-                        
 UPDATE ARCHIVODESCUENTOS                        
 SET Estado = 'CG'                        
 WHERE LTRIM(RTRIM (                         
 REPLACE ( CodigoModular, '''', ''))) NOT IN (SELECT RTRIM(LTRIM(DLCM))                         
       FROM CLIENTECUOTA                         
       WHERE CODIGO_PROCESO = @Codigo_proceso)                        
  and Estado = 'C0'                        
  and ARCHIVODESCUENTOS.Codigo_proceso = @Codigo_proceso                        
--****************************************                     
-- Actualizaciones                        
--****************************************                        
 -- Actualizamos los estados de todos los registros cargados en el archivo                        
 UPDATE ClienteCuota                        
 SET ClienteCuota.Estado = AD.Estado,                        
  DLID = CAST (                        
   case when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   else                        
    MontoDescuento                        
   end                        
   /*case when len ( MontoDescuento ) > 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    substring(MontoDescuento, 1, len(MontoDescuento)  - 2 ) + '.' +  substring(MontoDescuento,  len(MontoDescuento)  - 1, len(MontoDescuento))                          
   when len ( MontoDescuento ) <= 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    MontoDescuento                          
   when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   end*/                        
  as decimal(14,2))                        
 from ARCHIVODESCUENTOS AD                        
 WHERE  LTRIM(RTRIM ( REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  AND CLIENTECUOTA.CODIGO_PROCESO = @Codigo_proceso                        
  AND AD.Codigo_proceso = @Codigo_proceso                        
 -- Respinoza 20040618 - eliminamos los registros que existen en el temporal                        
         
DELETE FROM ERRORARCHIVODESCUENTOS                        
WHERE Codigo_proceso = @Codigo_proceso                        
AND NumeroPagare IN ( SELECT NumeroPagare FROM ARCHIVODESCUENTOS )                        
         
-- Pasamos los datos con errores a una tabla temporal                        
 INSERT INTO [ErrorArchivoDescuentos]([Codigo_proceso], [CodigoBanco], [Moneda], [NumeroPagare],                         
      [CodigoModular], [NombreTrabajador], [CodigoReferencia],                         
      [Anio], [Mes], [Cuota], [SituacionLaboral], [MontoDescuento], [Estado])                        
     SELECT ad.Codigo_proceso, [CodigoBanco], [Moneda], [NumeroPagare],                         
      [CodigoModular], [NombreTrabajador], [CodigoReferencia],                         
      [Anio], [Mes], [Cuota], [SituacionLaboral], [MontoDescuento], [Estado]                         
    FROM [ARCHIVODESCUENTOS] AD                        
    WHERE ad.Estado NOT in ('C0', 'CC', 'CD')                        
    and ad.Codigo_proceso = @Codigo_proceso                        
 -- Actualizamos los montos de descuentos realizados y colocamos la informacion                         
 -- acerca de las diferencias        
 /*update ClienteCuota                        
 set DLID = CAST (                        
   case when len ( MontoDescuento ) > 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    substring(MontoDescuento, 1, len(MontoDescuento)  - 2 ) + '.' +  substring(MontoDescuento,  len(MontoDescuento)  - 1, len(MontoDescuento))                          
   when len ( MontoDescuento ) <= 2 AND ISNUMERIC ( MontoDescuento ) = 1 then                        
    MontoDescuento                          
   when ISNUMERIC ( MontoDescuento ) = 0 then                         
    '0'                        
   end                        
  as decimal(14,2))--, --Actualizacion de informacion de cuotas                         
 from ArchivoDescuentos AD                          
 WHERE  LTRIM(RTRIM (                         
   REPLACE ( NUMEROPAGARE, '''', ''))) = RTRIM(LTRIM(DLNP))                         
  AND CODIGO_PROCESO = @Codigo_proceso                        
*/                        
      
 --REGISTRAMOS EN EL HISTORICO ANTES DE BORRAR LA TABLA ARCHIVODESCUENTOS                          
 INSERT INTO [ArchivoDescuentosHist](                          
 [Fecha], [CodigoBanco], [Moneda], [NumeroPagare], [CodigoModular], [NombreTrabajador], [CodigoReferencia],                          
 [Anio], [Mes], [Cuota], [SituacionLaboral], [MontoDescuento], [Estado], [Codigo_proceso])                           
 SELECT GETDATE(), [CodigoBanco], [Moneda], [NumeroPagare], [CodigoModular], [NombreTrabajador], [CodigoReferencia],                          
 [Anio], [Mes], [Cuota], [SituacionLaboral], [MontoDescuento], [Estado], [Codigo_proceso]                          
 FROM ARCHIVODESCUENTOS                          
 WHERE Codigo_proceso = @Codigo_proceso       
      
 -- ELIMINAMOS LA INFORMACION DE LA TABLA TEMPORAL DE CARGA                                                      
DELETE FROM ARCHIVODESCUENTOS                        
WHERE Codigo_proceso = @Codigo_proceso                
                      
 --Actualizamos la informacion de proceso                         
 UPDATE PROCESO                        
 SET Estado = 'D2',                        
  Fecha_ProcesoAD = getdate()                        
 WHERE Codigo_proceso = @Codigo_proceso                        
 --Si hubo un error en la ejecucion del proceso debemos de colocar ese estado                        
 --en el codigo del programa                        
 EXECUTE AddLogInfo '', @Codigo_proceso, '', '', 'ProcesaArchivoDescuentoDefault', @usuario                         
SET NOCOUNT OFF                        
END 
GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivos]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivos]
@codigo_Proceso as uniqueidentifier,
@dateCode AS varchar ( 14)
AS
BEGIN
	declare @FormatoArchivoImportacion varchar(10)
	declare @sql as varchar (1000)
	SELECT @FormatoArchivoImportacion = FormatoArchivoImportacion 
	FROM PROCESO p 
		inner join Cliente c on ( p.Codigo_Cliente = c.Codigo_Cliente ) 
	WHERE CODIGO_PROCESO = @codigo_Proceso

	set @sql= 'execute procesaDatosArchivos'+@FormatoArchivoImportacion + ' ''' + cast ( @codigo_Proceso as varchar(36)) + ''',''' + @dateCode + ''''
	--exec( 'execute procesaDatosArchivos'+@FormatoArchivoImportacion + ' ''' + cast ( @codigo_Proceso as varchar(36)) + ''',''' + @dateCode + '''')
	exec ( @sql )
END


GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosDIREL]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosDIREL]
@codigo_Proceso as uniqueidentifier,
@dateCode AS varchar ( 14)
as
begin	

	DECLARE @tipoArchivo as varchar ( 20)
	select @tipoArchivo = SUBSTRING ( lineainformacion , 1, 8) 
	from TemporalArchivoTexto 
	WHERE 
		Codigo_proceso = @codigo_Proceso
		and dateCode = @dateCode
		AND orden = 2
	ORDER BY ORDEN

	if  @tipoArchivo  = 'Terccrep' or @tipoArchivo  = 'Terccres'
	begin
		exec procesaDatosArchivosDIRELTerccrep @codigo_Proceso, @dateCode
	end
	ELSE
	begin	

		select @tipoArchivo = SUBSTRING ( lineainformacion , 1, 3) 
		from TemporalArchivoTexto 
		WHERE 
			Codigo_proceso = @codigo_Proceso
			and dateCode = @dateCode
			AND orden = 3
		ORDER BY ORDEN


		if @tipoArchivo  = 'BEN'
		BEGIN
			EXEC procesaDatosArchivosDIRELBen  @codigo_Proceso, @dateCode
		END
		
/*		if @tipoArchivo  = 'REM'
		BEGIN*/
			select @tipoArchivo = SUBSTRING ( lineainformacion , 1, 6) 
			from TemporalArchivoTexto 
			WHERE 
				Codigo_proceso = @codigo_Proceso
				and dateCode = @dateCode
				AND orden = 3
			ORDER BY ORDEN
			--SELECT 1
			if @tipoArchivo = 'REM009' 
			begin
				EXEC procesaDatosArchivosDIRELREM  @codigo_Proceso, @dateCode
			end



			select @tipoArchivo = SUBSTRING ( lineainformacion , 1, 6) 
			from TemporalArchivoTexto 
			WHERE 
				Codigo_proceso = @codigo_Proceso
				and dateCode = @dateCode
				AND orden = 2
			ORDER BY ORDEN

			
			if @tipoArchivo = 'REM100' 
			begin
				EXEC procesaDatosArchivosDIRELREM100  @codigo_Proceso, @dateCode
			end
--		END
		--select 1
	end
END







GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosDIRELBen]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Modif. Por	: BANBIF(AHSP) - 20120925				*/
/* Motivo	: Evitar la caida por conversion a numeric		*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosDIRELBen]
@codigo_Proceso AS uniqueidentifier,
@dateCode 	AS varchar ( 14)
AS
BEGIN

	INSERT INTO ARCHIVODESCUENTOS
	SELECT  'BIF' 			as CodigoBanco, 
		CC.DLMO  		as Moneda, 
		cc.DLNP 		as NumeroPagare,
		cc.DLCM 		as CodigoModular,
		cc.DLNE		 	as NombreTrabajador,
		cc.DLCR			as CodigoReferencia,
		cc.DLAP			as Anio,
		cc.DLMP			as Mes,
		cc.DLIC			as Cuota,
		cc.DLST			as SituacionLaboral,
		CASE 	WHEN ISNUMERIC(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion ,83, 8))),',','')) = 0 THEN 0.00
			ELSE CAST(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion ,83, 8))), ',', '') as decimal (14,2)) 
		END			AS MontoDescuento,
		'C0' 			as Estado,
		@codigo_Proceso		as Codigo_proceso
	FROM 	clientecuota cc INNER JOIN TemporalArchivoTexto tat
		ON (  
	LTRIM(RTRIM(cc.DLCM))   =  LTRIM(RTRIM(substring ( lineainformacion , 10 , 10 )))  
		)
	WHERE cc.codigo_proceso = @codigo_Proceso--'DC9002F0-2510-4038-B542-2B4A0019EE08'
	and cc.codigo_proceso = tat.codigo_proceso 
	and tat.dateCode = @dateCode--'20060706121109'
	and isnumeric (substring ( lineainformacion , 10 , 10 ) )= 1
	--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''

	UPDATE  TemporalArchivoTexto 
	SET Procesa = 1
	WHERE Codigo_proceso = @codigo_Proceso
		and dateCode = @dateCode
		AND (LTRIM(RTRIM(substring ( lineainformacion, 10, 10 )))    IN
			(SELECT rtrim(ltrim(DLCM))  from clientecuota cre where Codigo_proceso = @codigo_Proceso
			)
		)
		and isnumeric ( substring ( lineainformacion, 10, 10 ) ) = 1
		--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''

END
GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosDIRELREM]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Modif. Por	: BANBIF(AHSP) - 20120925				*/
/* Motivo	: Evitar la caida por conversion a numeric		*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosDIRELREM]
@codigo_Proceso as uniqueidentifier,
@dateCode AS varchar ( 14)
AS
BEGIN

	INSERT INTO ARCHIVODESCUENTOS
	SELECT  'BIF' 			AS CodigoBanco, 
		CC.DLMO  		AS Moneda, 
		cc.DLNP 		AS NumeroPagare,
		cc.DLCM 		AS CodigoModular,
		cc.DLNE		 	AS NombreTrabajador,
		cc.DLCR			AS CodigoReferencia,
		cc.DLAP			AS Anio,
		cc.DLMP			AS Mes,
		cc.DLIC			AS Cuota,
		cc.DLST			AS SituacionLaboral,
		CASE 	WHEN ISNUMERIC(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion ,88, 8))),',','')) = 0 THEN 0.00
			ELSE CAST(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion ,88, 8))), ',', '') as decimal (14,2)) 
		END			AS MontoDescuento,
		'C0' 			AS Estado,
		@codigo_Proceso		AS Codigo_proceso
	FROM	clientecuota cc inner join TemporalArchivoTexto tat
		on (  
	LTRIM(RTRIM(cc.DLCM))   =  LTRIM(RTRIM(substring ( lineainformacion , 13 , 10 )))  
		)
	where cc.codigo_proceso = @codigo_Proceso--'DC9002F0-2510-4038-B542-2B4A0019EE08'
	and cc.codigo_proceso = tat.codigo_proceso 
	and tat.dateCode = @dateCode--'20060706121109'
	and isnumeric (substring ( lineainformacion , 13 , 10 ))= 1
	--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''


	UPDATE  TemporalArchivoTexto 
	SET 	Procesa = 1
	WHERE 	Codigo_proceso = @codigo_Proceso
		and dateCode = @dateCode
		AND (LTRIM(RTRIM(substring ( lineainformacion , 13 , 10 )))    IN
			(SELECT rtrim(ltrim(DLCM))  from clientecuota cre where Codigo_proceso = @codigo_Proceso
			)
		)
		and isnumeric ( substring ( lineainformacion , 13 , 10 ) ) = 1

END



GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosDIRELREM100]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Modif. Por	: BANBIF(AHSP) - 20120925				*/
/* Motivo	: Evitar la caida por conversion a numeric		*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosDIRELREM100]
@codigo_Proceso as uniqueidentifier,
@dateCode AS varchar ( 14)
AS
BEGIN

	INSERT INTO ARCHIVODESCUENTOS
	select 'BIF' 			AS CodigoBanco, 
		CC.DLMO  		AS Moneda, 
		cc.DLNP 		AS NumeroPagare,
		cc.DLCM 		AS CodigoModular,
		cc.DLNE		 	AS NombreTrabajador,
		cc.DLCR			AS CodigoReferencia,
		cc.DLAP			AS Anio,
		cc.DLMP			AS Mes,
		cc.DLIC			AS Cuota,
		cc.DLST			AS SituacionLaboral,
		CASE 	WHEN ISNUMERIC(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion ,100, 9))),',','')) = 0 THEN 0.00
			ELSE CAST(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion ,100, 9))), ',', '') as decimal (14,2)) 
		END			AS MontoDescuento,
		'C0' 			AS Estado,
		@codigo_Proceso		AS Codigo_proceso
	FROM	clientecuota cc INNER JOIN TemporalArchivoTexto tat
		on (  
	LTRIM(RTRIM(cc.DLCM))   =  LTRIM(RTRIM(substring ( lineainformacion ,1, 10 )))  
		)
	WHERE cc.codigo_proceso = @codigo_Proceso--'DC9002F0-2510-4038-B542-2B4A0019EE08'
	and cc.codigo_proceso = tat.codigo_proceso 
	and tat.dateCode = @dateCode--'20060706121109'
	and isnumeric (substring ( lineainformacion ,1, 10 ))= 1
	and rtrim ( substring ( lineainformacion ,100, 50 ) ) <> ''


	UPDATE  TemporalArchivoTexto 
	SET Procesa = 1
	WHERE Codigo_proceso = @codigo_Proceso
		and dateCode = @dateCode
		AND (LTRIM(RTRIM(substring ( lineainformacion ,1, 10 )))    IN
			(SELECT rtrim(ltrim(DLCM))  from clientecuota cre where Codigo_proceso = @codigo_Proceso
			)
		)
		and isnumeric ( substring ( lineainformacion ,1, 10 ) ) = 1
		and rtrim ( substring ( lineainformacion ,100, 50 ) ) <> ''
		--and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''

END



GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosDIRELTerccrep]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Modif. Por	: BANBIF(AHSP) - 20120926				*/
/* Motivo	: Evitar la caida por conversion a numeric		*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosDIRELTerccrep]
@codigo_Proceso as uniqueidentifier,
@dateCode AS varchar ( 14)
as
begin

	INSERT INTO ARCHIVODESCUENTOS
	select 'BIF' 			AS CodigoBanco, 
		CC.DLMO  		AS Moneda, 
		cc.DLNP 		AS NumeroPagare,
		cc.DLCM 		AS CodigoModular,
		cc.DLNE		 	AS NombreTrabajador,
		cc.DLCR			AS CodigoReferencia,
		cc.DLAP			AS Anio,
		cc.DLMP			AS Mes,
		cc.DLIC			AS Cuota,
		cc.DLST			AS SituacionLaboral,
		CASE 	WHEN ISNUMERIC(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion ,67, 11))),',','')) = 0 THEN 0.00
			ELSE CAST(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion ,67, 11))), ',', '') as decimal (14,2)) 
		END			AS MontoDescuento,

		'C0' 			AS Estado,
		@codigo_Proceso		AS Codigo_proceso

	from clientecuota cc inner join TemporalArchivoTexto tat
		on (  
	LTRIM(RTRIM(cc.DLCM))   =  LTRIM(RTRIM(substring ( lineainformacion, 1, 10 )))  
		)
	where cc.codigo_proceso = @codigo_Proceso--'DC9002F0-2510-4038-B542-2B4A0019EE08'
	and cc.codigo_proceso = tat.codigo_proceso 
	and tat.dateCode = @dateCode--'20060706121109'
	and isnumeric ( substring ( lineainformacion, 1, 10 ) ) = 1
	and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
	AND ISNUMERIC ( substring ( lineainformacion, 67, 11 ) ) = 1
	AND (
		(rtrim( ltrim( substring ( lineainformacion, 79, 20) ))= 'Registro Cobrado') 	
		OR 
		(rtrim( ltrim( substring ( lineainformacion, 79, 20) ))= 'Registro cargado') 	
		) 

	UPDATE  TemporalArchivoTexto 
	SET Procesa = 1
	WHERE Codigo_proceso = @codigo_Proceso
		and dateCode = @dateCode
		AND (LTRIM(RTRIM(substring ( lineainformacion, 1, 10 )))    IN
			(SELECT rtrim(ltrim(DLCM))  from clientecuota cre where Codigo_proceso = @codigo_Proceso
			)
		)
		and isnumeric ( substring ( lineainformacion, 1, 10 ) ) = 1
		and rtrim ( substring ( lineainformacion, 14, 5 )  ) <> ''
		AND ISNUMERIC ( substring ( lineainformacion, 67, 11 ) ) = 1
	AND (
		(rtrim( ltrim( substring ( lineainformacion, 79, 20) ))= 'Registro Cobrado') 	
		OR 
		(rtrim( ltrim( substring ( lineainformacion, 79, 20) ))= 'Registro cargado') 	
		) 

END



GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosDRIT]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Modif. Por	: BANBIF(AHSP) - 20120926				*/
/* Motivo	: Evitar la caida por conversion a numeric		*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosDRIT]
@codigo_Proceso as uniqueidentifier,
@dateCode AS varchar ( 14)
as
BEGIN

-- Establecemos todos los registros como procesados para esta carga de datos
UPDATE	TemporalArchivoTexto 
SET 	Procesa = 1
WHERE 	Codigo_proceso 	= @codigo_Proceso
and 	dateCode 	= @dateCode

-- Normalizar archivo de Texto y pasarlo a ARCHIVODESCUENTOS
	INSERT INTO ARCHIVODESCUENTOS
	select 'BIF' 			AS CodigoBanco, 
		CC.DLMO  		AS Moneda, 
		cc.DLNP 		AS NumeroPagare,
		cc.DLCM 		AS CodigoModular,
		cc.DLNE		 	AS NombreTrabajador,
		cc.DLCR			AS CodigoReferencia,
		cc.DLAP			AS Anio,
		cc.DLMP			AS Mes,
		cc.DLIC			AS Cuota,
		cc.DLST			AS SituacionLaboral,
		CASE 	WHEN ISNUMERIC(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion ,64, 9))),',','')) = 0 THEN 0.00
			ELSE CAST(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion ,64, 9))), ',', '') as decimal (14,2)) 
		END			AS MontoDescuento,
		'C0' 			AS Estado,
		@codigo_Proceso		AS Codigo_proceso
	
	from clientecuota cc inner join TemporalArchivoTexto tat
		on (  
			(replace ( ltrim(rtrim(substring ( lineainformacion , 24, 40   ))) , '?', 'Ñ')
			 LIKE 
			'%' + RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN)) + '%'
			)
			
			or 
			(RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN))
			 LIKE 
			'%' + replace ( ltrim(rtrim(substring ( lineainformacion , 24, 40 ))) , '?', 'Ñ') + '%'
			)
		)
	WHERE  CC.codigo_proceso = @codigo_Proceso--'fcc58676-ae87-45b6-9aab-fa5eaf7ce9ad'
		AND CC.codigo_proceso = tat.codigo_proceso
		and rtrim ( substring ( lineainformacion , 24, 40 ) ) <> ''
		and tat.dateCode = @dateCode--'20060706121109'
-------- condiciones para el archivo
		AND ISNUMERIC ( SUBSTRING ( lineainformacion , 64, 9 )   ) = 1
		AND 
		(SUBSTRING ( lineainformacion , 24, 40 ) <> 'TERAMERICANO DE FINANZAS ='
		OR
		SUBSTRING ( lineainformacion , 24, 40 ) NOT LIKE '%FINANZAS%'
		)


--- excluimos la informacion que no procesa marcandola
	update TemporalArchivoTexto 
	set Procesa = 0
	where 
	codigo_proceso = @codigo_Proceso
	and dateCode = @dateCode
	and lineainformacion not in ( 
	
			SELECT 	lineainformacion
			from clientecuota cc inner join TemporalArchivoTexto tat
			on (  
				(replace ( ltrim(rtrim(substring ( lineainformacion , 24, 40   ))) , '?', 'Ñ')
				 LIKE 
				'%' + RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN)) + '%'
				)
				
				or 
				(RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN))
				 LIKE 
				'%' + replace ( ltrim(rtrim(substring ( lineainformacion , 24, 40 ))) , '?', 'Ñ') + '%'
				)
				)
			WHERE  CC.codigo_proceso = @codigo_Proceso--'fcc58676-ae87-45b6-9aab-fa5eaf7ce9ad'
				AND CC.codigo_proceso = tat.codigo_proceso
				and rtrim ( substring ( lineainformacion , 24, 40 ) ) <> ''
				and tat.dateCode = @dateCode--'20060706121109'
	-------- condiciones para el archivo
				AND ISNUMERIC ( SUBSTRING ( lineainformacion , 64, 9 )   ) = 1
				AND 
				(SUBSTRING ( lineainformacion , 24, 40 ) <> 'TERAMERICANO DE FINANZAS ='
				OR
				SUBSTRING ( lineainformacion , 24, 40 ) NOT LIKE '%FINANZAS%'
				)
		)

END






GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosESSALUD]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosESSALUD]  
@codigo_Proceso as uniqueidentifier,  
@dateCode AS varchar ( 14)  
as  
begin  
--------------------------------------------------------  
------------ PROCESO PARA ESSALUD ----------------------  
--------------------------------------------------------  
DECLARE @LogitudLineaArchivo AS INT -- Longitud de la linea para procesar  
SET @LogitudLineaArchivo = 82  
  
--- Establecemos todos los registros como procesados para esta carga de datos  
UPDATE TemporalArchivoTexto   
SET Procesa = 1  
WHERE   
Codigo_proceso = @codigo_Proceso
and dateCode = @dateCode
  
--- Normalizar archivo de Texto y pasarlo a ARCHIVODESCUENTOS  
 INSERT INTO ARCHIVODESCUENTOS  
 select 'BIF'    as CodigoBanco,   
  CC.DLMO    as Moneda,   
  cc.DLNP   as NumeroPagare,  
  cc.DLCM   as CodigoModular,  
  cc.DLNE    as NombreTrabajador,  
  cc.DLCR   as CodigoReferencia,  
  cc.DLAP   as Anio,  
  cc.DLMP   as Mes,  
  cc.DLIC   as Cuota,  
  cc.DLST   as SituacionLaboral,  
  ltrim(rtrim(substring(lineainformacion, 72, 10))) as MontoDescuento,
  'C0' as Estado,  
  @codigo_Proceso as Codigo_proceso     
 from clientecuota cc inner join TemporalArchivoTexto tat  
  on (    
   cast (  
    case when isnull ( cc.DLCM, '')  = '' then '0' else  cc.DLCM end   
   as numeric )    
   = cast (substring ( tat.lineainformacion , 1, 7 ) as numeric )   
  )  
 where cc.codigo_proceso = @codigo_Proceso
 and cc.codigo_proceso = tat.codigo_proceso   
 and tat.dateCode = @dateCode
 and ISNUMERIC(SUBSTRING(tat.lineainformacion, 1, 7)) = 1
  
--- Los que no procesan los establecemos como Procesa = 0  
UPDATE  TemporalArchivoTexto   
SET Procesa = 0  
WHERE   
Codigo_proceso = @codigo_Proceso
and dateCode = @dateCode
AND 
(cast ( substring ( lineainformacion , 1, 7 )  as numeric ) NOT IN  
 (SELECT cast (case when isnull ( DLCM, '')  = '' then '0' else  DLCM end as numeric ) from clientecuota cre where Codigo_proceso = @codigo_Proceso)  
OR ISNUMERIC(SUBSTRING(lineainformacion, 1, 7)) = 0)  
end  
  
GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosHACHULUC]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20130117				*/
/* Observacion	: Importarcion de Archivo para Hosp. de Apoyo           */
/*     		: Chulucanas						*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosHACHULUC]
@codigo_Proceso AS uniqueidentifier,
@dateCode 	AS varchar ( 14)
AS BEGIN

/********************************************************************************/
/* Establecemos todos los registros como procesados para esta carga de datos	*/
/********************************************************************************/
UPDATE	TemporalArchivoTexto 
SET 	Procesa = 1
WHERE	Codigo_proceso	= @codigo_Proceso AND
	dateCode 	= @dateCode

/***************************************************/
/* Aqui procedemos a obtener el dato de los montos */
/***************************************************/

	INSERT INTO ARCHIVODESCUENTOS
	SELECT 'BIF' 			AS CodigoBanco, 
		CC.DLMO  		AS Moneda, 
		cc.DLNP 		AS NumeroPagare,
		cc.DLCM 		AS CodigoModular,
		cc.DLNE		 	AS NombreTrabajador,
		cc.DLCR			AS CodigoReferencia,
		cc.DLAP			AS Anio,
		cc.DLMP			AS Mes,
		cc.DLIC			AS Cuota,
		cc.DLST			AS SituacionLaboral,
		CAST(REPLACE(REPLACE(SUBSTRING(lineainformacion , 68, 10),' ',''), ',','.') AS DECIMAL(14,2)) MontoDescuento,
		'C0' 			AS Estado,
		@codigo_Proceso		AS Codigo_proceso
	FROM	ClienteCuota CC INNER JOIN TemporalArchivoTexto TAT
		ON (
			( REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 50))) ,'?','Ñ') ,'  ',' '), '-',' ')
			 LIKE '%' + REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '') + '%'
			)
			OR
			( REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '')
			 LIKE '%' + REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 50))) ,'?','Ñ') , '  ',' '), '-',' ') + '%'
			)
		)
	WHERE	CC.codigo_proceso = @codigo_Proceso	AND 
		CC.codigo_proceso = tat.codigo_proceso	AND 
		RTRIM(SUBSTRING(lineainformacion, 13, 50)) <> '' AND 
		tat.dateCode = @dateCode

	UPDATE	TemporalArchivoTexto 
	SET	Procesa = 0
	WHERE	Codigo_proceso	= @codigo_Proceso	AND 
		dateCode	= @dateCode		AND
		lineainformacion NOT IN ( 
	
	SELECT 	lineainformacion
	FROM	Clientecuota CC INNER JOIN TemporalArchivoTexto TAT
		ON (
			( REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 50))) ,'?','Ñ') ,'  ',' '), '-',' ')
			 LIKE '%' + REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '') + '%'
			)
			OR
			( REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '')
			 LIKE '%' + REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 50))) ,'?','Ñ') , '  ',' '), '-',' ') + '%'
			)
		)
	WHERE	CC.codigo_proceso = @codigo_Proceso	AND 
		CC.codigo_proceso = tat.codigo_proceso	AND 
		RTRIM(SUBSTRING(lineainformacion, 13, 50)) <> '' AND
		tat.dateCode = @dateCode
	)
END
GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosHAISROSA]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20130117				*/
/* Observacion	: Importarcion de Archivo para Hosp. de Apoyo           */
/*     		: I Santa Rosa						*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosHAISROSA]
@codigo_Proceso AS uniqueidentifier,
@dateCode 	AS varchar ( 14)
AS BEGIN

/********************************************************************************/
/* Establecemos todos los registros como procesados para esta carga de datos	*/
/********************************************************************************/
UPDATE	TemporalArchivoTexto 
SET 	Procesa = 1
WHERE	Codigo_proceso	= @codigo_Proceso AND
	dateCode 	= @dateCode

/***************************************************/
/* Aqui procedemos a obtener el dato de los montos */
/***************************************************/

	INSERT INTO ARCHIVODESCUENTOS
	SELECT 'BIF' 			AS CodigoBanco, 
		CC.DLMO  		AS Moneda, 
		cc.DLNP 		AS NumeroPagare,
		cc.DLCM 		AS CodigoModular,
		cc.DLNE		 	AS NombreTrabajador,
		cc.DLCR			AS CodigoReferencia,
		cc.DLAP			AS Anio,
		cc.DLMP			AS Mes,
		cc.DLIC			AS Cuota,
		cc.DLST			AS SituacionLaboral,
		CAST(REPLACE(REPLACE(SUBSTRING(lineainformacion , 68, 10),' ',''), ',','.') AS DECIMAL(14,2)) MontoDescuento,
		'C0' 			AS Estado,
		@codigo_Proceso		AS Codigo_proceso
	FROM	ClienteCuota CC INNER JOIN TemporalArchivoTexto TAT
		ON (
			( REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 50))) ,'?','Ñ') ,'  ',' '), '-',' ')
			 LIKE '%' + REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '') + '%'
			)
			OR
			( REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '')
			 LIKE '%' + REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 50))) ,'?','Ñ') , '  ',' '), '-',' ') + '%'
			)
		)
	WHERE	CC.codigo_proceso = @codigo_Proceso	AND 
		CC.codigo_proceso = tat.codigo_proceso	AND 
		RTRIM(SUBSTRING(lineainformacion, 13, 50)) <> '' AND 
		tat.dateCode = @dateCode

	UPDATE	TemporalArchivoTexto 
	SET	Procesa = 0
	WHERE	Codigo_proceso	= @codigo_Proceso	AND 
		dateCode	= @dateCode		AND
		lineainformacion NOT IN ( 
	
	SELECT 	lineainformacion
	FROM	Clientecuota CC INNER JOIN TemporalArchivoTexto TAT
		ON (
			( REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 50))) ,'?','Ñ') ,'  ',' '), '-',' ')
			 LIKE '%' + REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '') + '%'
			)
			OR
			( REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '')
			 LIKE '%' + REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 50))) ,'?','Ñ') , '  ',' '), '-',' ') + '%'
			)
		)
	WHERE	CC.codigo_proceso = @codigo_Proceso	AND 
		CC.codigo_proceso = tat.codigo_proceso	AND 
		RTRIM(SUBSTRING(lineainformacion, 13, 50)) <> '' AND
		tat.dateCode = @dateCode
	)
END
GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosHNSMERCED]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20121119				*/
/* Observacion	: Importarcion de Archivo para Hosp. Apoyo Nuestra	*/
/*     		: Señora de las Mercedes 				*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosHNSMERCED]
@codigo_Proceso AS uniqueidentifier,
@dateCode 	AS varchar ( 14)
AS BEGIN

/********************************************************************************/
/* Establecemos todos los registros como procesados para esta carga de datos	*/
/********************************************************************************/
UPDATE	TemporalArchivoTexto 
SET 	Procesa = 1
WHERE	Codigo_proceso	= @codigo_Proceso AND
	dateCode 	= @dateCode

/***************************************************/
/* Aqui procedemos a obtener el dato de los montos */
/***************************************************/

	INSERT INTO ARCHIVODESCUENTOS
	SELECT 'BIF' 			AS CodigoBanco, 
		CC.DLMO  		AS Moneda, 
		cc.DLNP 		AS NumeroPagare,
		cc.DLCM 		AS CodigoModular,
		cc.DLNE		 	AS NombreTrabajador,
		cc.DLCR			AS CodigoReferencia,
		cc.DLAP			AS Anio,
		cc.DLMP			AS Mes,
		cc.DLIC			AS Cuota,
		cc.DLST			AS SituacionLaboral,
		CAST(REPLACE(SUBSTRING(lineainformacion , 67, 11 ), ',','.') AS DECIMAL(14,2)) MontoDescuento,
		'C0' 			AS Estado,
		@codigo_Proceso		AS Codigo_proceso
	FROM	ClienteCuota CC INNER JOIN TemporalArchivoTexto TAT
		ON (
			( REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 45))) ,'?','Ñ') ,'  ',' '), '-',' ')
			 LIKE '%' + REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '') + '%'
			)
			OR
			( REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '')
			 LIKE '%' + REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 45))) ,'?','Ñ') , '  ',' '), '-',' ') + '%'
			)
		)
	WHERE	CC.codigo_proceso = @codigo_Proceso	AND 
		CC.codigo_proceso = tat.codigo_proceso	AND 
		RTRIM(SUBSTRING(lineainformacion, 13, 45)) <> '' AND 
		tat.dateCode = @dateCode

	UPDATE	TemporalArchivoTexto 
	SET	Procesa = 0
	WHERE	Codigo_proceso	= @codigo_Proceso	AND 
		dateCode	= @dateCode		AND
		lineainformacion NOT IN ( 
	
	SELECT 	lineainformacion
	FROM	Clientecuota CC INNER JOIN TemporalArchivoTexto TAT
		ON (
			( REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 45))) ,'?','Ñ') ,'  ',' '), '-',' ')
			 LIKE '%' + REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '') + '%'
			)
			OR
			( REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '')
			 LIKE '%' + REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 45))) ,'?','Ñ') , '  ',' '), '-',' ') + '%'
			)
		)
	WHERE	CC.codigo_proceso = @codigo_Proceso	AND 
		CC.codigo_proceso = tat.codigo_proceso	AND 
		RTRIM(SUBSTRING(lineainformacion, 13, 45)) <> '' AND
		tat.dateCode = @dateCode
	)
END
GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosLuciano]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20121119				*/
/* Observacion	: Importarcion de Archivo para Luciano			*/
/*     		: 			 				*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosLuciano]
@codigo_Proceso AS uniqueidentifier,
@dateCode 	AS varchar ( 14)
AS BEGIN

/********************************************************************************/
/* Establecemos todos los registros como procesados para esta carga de datos	*/
/********************************************************************************/
UPDATE	TemporalArchivoTexto 
SET 	Procesa = 1
WHERE	Codigo_proceso	= @codigo_Proceso AND
	dateCode 	= @dateCode

/***************************************************/
/* Aqui procedemos a obtener el dato de los montos */
/***************************************************/

	INSERT INTO ARCHIVODESCUENTOS
	SELECT 'BIF' 			AS CodigoBanco, 
		CC.DLMO  		AS Moneda, 
		cc.DLNP 		AS NumeroPagare,
		cc.DLCM 		AS CodigoModular,
		cc.DLNE		 	AS NombreTrabajador,
		cc.DLCR			AS CodigoReferencia,
		cc.DLAP			AS Anio,
		cc.DLMP			AS Mes,
		cc.DLIC			AS Cuota,
		cc.DLST			AS SituacionLaboral,
		CAST(REPLACE(SUBSTRING(lineainformacion , 66, 11 ), ',','') AS DECIMAL(14,2)) MontoDescuento,
		'C0' 			AS Estado,
		@codigo_Proceso		AS Codigo_proceso
	FROM	ClienteCuota CC INNER JOIN TemporalArchivoTexto TAT
		ON (
			( REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 17, 40))) ,'?','Ñ') ,'  ',' '), '-',' ')
			 LIKE '%' + RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)) + '%'
			)
			OR
			(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN))
			 LIKE '%' + REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 17, 40))) ,'?','Ñ') , '  ',' '), '-',' ') + '%'
			)
		)
	WHERE	CC.codigo_proceso = @codigo_Proceso	AND 
		CC.codigo_proceso = tat.codigo_proceso	AND 
		RTRIM(SUBSTRING(lineainformacion, 17, 40)) <> '' AND 
		tat.dateCode = @dateCode

	UPDATE	TemporalArchivoTexto 
	SET	Procesa = 0
	WHERE	Codigo_proceso	= @codigo_Proceso	AND 
		dateCode	= @dateCode		AND
		lineainformacion NOT IN ( 
	
	SELECT 	lineainformacion
	FROM	Clientecuota CC INNER JOIN TemporalArchivoTexto TAT
		ON (
			( REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 17, 40))) ,'?','Ñ') ,'  ',' '), '-',' ')
			 LIKE '%' + RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)) + '%'
			)
			OR
			(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN))
			 LIKE '%' + REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 17, 40))) ,'?','Ñ') , '  ',' '), '-',' ') + '%'
			)
		)
	WHERE	CC.codigo_proceso = @codigo_Proceso	AND 
		CC.codigo_proceso = tat.codigo_proceso	AND 
		RTRIM(SUBSTRING(lineainformacion, 17, 40)) <> '' AND
		tat.dateCode = @dateCode
	)
END
GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosMINSA]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosMINSA]
@codigo_Proceso as uniqueidentifier,
@dateCode AS varchar ( 14)
as
begin	

--- Establecemos todos los registros como procesados para esta carga de datos
UPDATE TemporalArchivoTexto 
SET Procesa = 1
WHERE 
Codigo_proceso = @codigo_Proceso
and dateCode = @dateCode


--- Normalizar archivo de Texto y pasarlo a ARCHIVODESCUENTOS
	INSERT INTO ARCHIVODESCUENTOS
	select 'BIF' 			as CodigoBanco, 
		CC.DLMO  		as Moneda, 
		cc.DLNP 		as NumeroPagare,
		cc.DLCM 		as CodigoModular,
		cc.DLNE		 	as NombreTrabajador,
		cc.DLCR			as CodigoReferencia,
		cc.DLAP			as Anio,
		cc.DLMP			as Mes,
		cc.DLIC			as Cuota,
		cc.DLST			as SituacionLaboral,
		cast (
		case when len ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) > 2 AND 
				ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 1 then
		
				substring(rtrim(ltrim(substring (lineainformacion , 66, 5 ))), 1, len(rtrim(ltrim(substring ( lineainformacion , 66, 5 ))))  - 2 ) 
				+ '.' +  substring(rtrim(ltrim(substring ( lineainformacion , 66, 5))),  len(rtrim(ltrim(substring ( lineainformacion , 66, 5 ))))  - 1, len(rtrim(ltrim(substring ( lineainformacion , 66, 5 )))))  
		
				when len ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) <= 2 AND ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 1 then
					ltrim(rtrim(substring ( lineainformacion , 66, 5 )))
				when ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 0 then	
					'0'
				end
		as decimal(14,2) ) MontoDescuento,
		'C0' as Estado,
		@codigo_Proceso---'DC9002F0-2510-4038-B542-2B4A0019EE08' 
		as Codigo_proceso
	
	from clientecuota cc inner join TemporalArchivoTexto tat
		on (  
			( REPLACE  (  replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ') , '  ', ' ')
			 LIKE 
			'%' + RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN)) + '%'
			)
			
			or 
			(RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN))
			 LIKE 
			'%' + REPLACE ( replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ'),  '  ', ' ') + '%'
			)
		)
	WHERE  CC.codigo_proceso = @codigo_Proceso--'fcc58676-ae87-45b6-9aab-fa5eaf7ce9ad'
		AND CC.codigo_proceso = tat.codigo_proceso
		and rtrim ( substring ( lineainformacion , 12, 54 ) ) <> ''
		and tat.dateCode = @dateCode--'20060706121109'


	update TemporalArchivoTexto 
	set Procesa = 0
	where 
	codigo_proceso = @codigo_Proceso
	and dateCode = @dateCode
	and lineainformacion not in ( 
	
	SELECT 	lineainformacion
	from clientecuota cc inner join TemporalArchivoTexto tat
			on (  
				(  REPLACE(  replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ'), '  ', ' ')
				 LIKE 
				'%' + RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN)) + '%'
				)
	
				or 
				(RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN))
				 LIKE 
				'%' + REPLACE ( replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ') , '  ', ' ') + '%'
				)
			)
	WHERE  CC.codigo_proceso = @codigo_Proceso
	AND CC.codigo_proceso = tat.codigo_proceso
	and rtrim ( substring ( lineainformacion , 12, 54 ) ) <> ''
	and tat.dateCode = @dateCode
	)
	
/*

select 
replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ')  Nombre,
cast (
case when len ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) > 2 AND 
		ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 1 then

		substring(rtrim(ltrim(substring (lineainformacion , 66, 5 ))), 1, len(rtrim(ltrim(substring ( lineainformacion , 66, 5 ))))  - 2 ) 
		+ '.' +  substring(rtrim(ltrim(substring ( lineainformacion , 66, 5))),  len(rtrim(ltrim(substring ( lineainformacion , 66, 5 ))))  - 1, len(rtrim(ltrim(substring ( lineainformacion , 66, 5 )))))  

		when len ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) <= 2 AND ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 1 then
			ltrim(rtrim(substring ( lineainformacion , 66, 5 )))
		when ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 66, 5 ))) ) = 0 then	
			'0'
		end
as decimal(14,2) ) MontoDescuento
from TemporalArchivoTexto 
where codigo_proceso = 'fcc58676-ae87-45b6-9aab-fa5eaf7ce9ad'
and rtrim ( substring ( lineainformacion , 12, 54 ) ) <> ''
*/	
end



GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosSDBF]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosSDBF]
@codigo_Proceso	AS uniqueidentifier,
@dateCode	AS varchar (14)
AS BEGIN

	--- Establecemos todos los registros como procesados para esta carga de datos
	UPDATE	TemporalArchivoTexto 
	SET 	Procesa = 1
	WHERE	Codigo_proceso	= @codigo_Proceso	AND
		dateCode	= @dateCode

	--- Normalizar archivo de Texto y pasarlo a ARCHIVODESCUENTOS
	INSERT INTO ARCHIVODESCUENTOS
	SELECT	'BIF' 			as CodigoBanco		, 
		CC.DLMO  		as Moneda		, 
		CC.DLNP 		as NumeroPagare		,
		CC.DLCM 		as CodigoModular	,
		CC.DLNE		 	as NombreTrabajador	,
		CC.DLCR			as CodigoReferencia	,
		CC.DLAP			as Anio			,
		CC.DLMP			as Mes			,
		CC.DLIC			as Cuota		,
		CC.DLST			as SituacionLaboral	,
		CONVERT(DECIMAL(14,2),LTRIM(SUBSTRING(lineainformacion,16,15))) as MontoDescuento,
		'C0' 			as Estado		,
		CC.Codigo_proceso	as Codigo_proceso
	FROM	CLIENTECUOTA 		CC,
		TemporalArchivoTexto	TAT,
		DLCRE 			DCR
	WHERE	CC.Codigo_proceso 	= @codigo_Proceso				AND
		CC.Codigo_proceso 	= TAT.Codigo_proceso				AND
		TAT.dateCode 		= @dateCode					AND
		CC.DLNP 		= DCR.DLACC					AND
		DCR.DLDNI		= SUBSTRING(TAT.lineainformacion,1,8)


	UPDATE	TemporalArchivoTexto 
	SET	Procesa		= 0
	WHERE	codigo_proceso	= @codigo_Proceso	AND
		dateCode 	= @dateCode		AND
		lineainformacion NOT IN ( 
					SELECT 	lineainformacion
					FROM	CLIENTECUOTA 		CC,
						TemporalArchivoTexto	TAT,
						DLCRE 			DCR
					WHERE	CC.Codigo_proceso 	= @codigo_Proceso		AND
						CC.Codigo_proceso 	= TAT.Codigo_proceso		AND
						TAT.dateCode 		= @dateCode			AND
						CC.DLNP 		= DCR.DLACC			AND
						DCR.DLDNI		= SUBSTRING(TAT.lineainformacion,1,8)
					)

END

GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosUESMCHULU]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/
/* Fecha Modif	: BANBIF(AHSP) - 20130110				*/
/* Observacion	: Importarcion de Archivo para Unidad Ejecutora 403	*/
/*     		: Salud Morropon Chulucanas 				*/
/************************************************************************/
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosUESMCHULU]
@codigo_Proceso AS uniqueidentifier,
@dateCode 	AS varchar ( 14)
AS BEGIN

/********************************************************************************/
/* Establecemos todos los registros como procesados para esta carga de datos	*/
/********************************************************************************/
UPDATE	TemporalArchivoTexto 
SET 	Procesa = 1
WHERE	Codigo_proceso	= @codigo_Proceso AND
	dateCode 	= @dateCode

/***************************************************/
/* Aqui procedemos a obtener el dato de los montos */
/***************************************************/

	INSERT INTO ARCHIVODESCUENTOS
	SELECT 'BIF' 			AS CodigoBanco, 
		CC.DLMO  		AS Moneda, 
		cc.DLNP 		AS NumeroPagare,
		cc.DLCM 		AS CodigoModular,
		cc.DLNE		 	AS NombreTrabajador,
		cc.DLCR			AS CodigoReferencia,
		cc.DLAP			AS Anio,
		cc.DLMP			AS Mes,
		cc.DLIC			AS Cuota,
		cc.DLST			AS SituacionLaboral,
		CAST(REPLACE(REPLACE(SUBSTRING(lineainformacion , 67, 11 ),' ',''), ',','.') AS DECIMAL(14,2)) MontoDescuento,
		'C0' 			AS Estado,
		@codigo_Proceso		AS Codigo_proceso
	FROM	ClienteCuota CC INNER JOIN TemporalArchivoTexto TAT
		ON (
			( REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 45))) ,'?','Ñ') ,'  ',' '), '-',' ')
			 LIKE '%' + REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '') + '%'
			)
			OR
			( REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '')
			 LIKE '%' + REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 45))) ,'?','Ñ') , '  ',' '), '-',' ') + '%'
			)
		)
	WHERE	CC.codigo_proceso = @codigo_Proceso	AND 
		CC.codigo_proceso = tat.codigo_proceso	AND 
		RTRIM(SUBSTRING(lineainformacion, 13, 45)) <> '' AND 
		tat.dateCode = @dateCode

	UPDATE	TemporalArchivoTexto 
	SET	Procesa = 0
	WHERE	Codigo_proceso	= @codigo_Proceso	AND 
		dateCode	= @dateCode		AND
		lineainformacion NOT IN ( 
	
	SELECT 	lineainformacion
	FROM	Clientecuota CC INNER JOIN TemporalArchivoTexto TAT
		ON (
			( REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 45))) ,'?','Ñ') ,'  ',' '), '-',' ')
			 LIKE '%' + REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '') + '%'
			)
			OR
			( REPLACE(RTRIM(LTRIM(DLPA)) + ' ' + RTRIM(LTRIM(DLMA)) + ' ' + RTRIM(LTRIM(DLMN)), 'Ñ', '')
			 LIKE '%' + REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(SUBSTRING(lineainformacion, 13, 45))) ,'?','Ñ') , '  ',' '), '-',' ') + '%'
			)
		)
	WHERE	CC.codigo_proceso = @codigo_Proceso	AND 
		CC.codigo_proceso = tat.codigo_proceso	AND 
		RTRIM(SUBSTRING(lineainformacion, 13, 45)) <> '' AND
		tat.dateCode = @dateCode
	)
END
GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosUPAO]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/    
/* Fecha Modif : BANBIF(CRP) - 20130808    */    
/* Descripcion : Importarcion de Archivo para UPAO */    
/************************************************************************/    
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosUPAO]  
@codigo_Proceso AS uniqueidentifier,    
@dateCode  AS varchar (14)    
AS BEGIN    
    
/********************************************************************************/    
/* Establecemos todos los registros como procesados para esta carga de datos */    
/********************************************************************************/    
UPDATE TemporalArchivoTexto     
SET  Procesa = 1    
WHERE Codigo_proceso = @codigo_Proceso AND    
 dateCode  = @dateCode    
    
/***************************************************/    
/* Aqui procedemos a obtener el dato de los montos */    
/***************************************************/    
    
 INSERT INTO ARCHIVODESCUENTOS    
 SELECT 'BIF'    AS CodigoBanco,     
  CC.DLMO    AS Moneda,     
  cc.DLNP   AS NumeroPagare,    
  cc.DLCM   AS CodigoModular,    
  cc.DLNE    AS NombreTrabajador,    
  cc.DLCR   AS CodigoReferencia,    
  cc.DLAP   AS Anio,    
  cc.DLMP   AS Mes,    
  cc.DLIC   AS Cuota,    
  cc.DLST   AS SituacionLaboral,    
  REPLACE(REPLACE(SUBSTRING(lineainformacion , 64, 11 ),' ',''), ',','') AS MontoDescuento,    
  'C0'    AS Estado,    
  @codigo_Proceso  AS Codigo_proceso    
 FROM ClienteCuota CC INNER JOIN TemporalArchivoTexto TAT    
			ON SUBSTRING(lineainformacion, 13, 5) = RIGHT(DLCM, 5)
 WHERE CC.codigo_proceso = @codigo_Proceso AND     
  CC.codigo_proceso = tat.codigo_proceso AND     
  RTRIM(SUBSTRING(lineainformacion, 19, 45)) <> '' AND     
  tat.dateCode = @dateCode    
    
 UPDATE TemporalArchivoTexto     
 SET Procesa = 0    
 WHERE Codigo_proceso = @codigo_Proceso AND     
  dateCode = @dateCode  AND    
  lineainformacion NOT IN (     
     
 SELECT  lineainformacion    
 FROM Clientecuota CC INNER JOIN TemporalArchivoTexto TAT    
  ON SUBSTRING(lineainformacion, 13, 5) = RIGHT(DLCM, 5)
 WHERE CC.codigo_proceso = @codigo_Proceso AND     
  CC.codigo_proceso = tat.codigo_proceso AND     
  RTRIM(SUBSTRING(lineainformacion, 19, 45)) <> '' AND    
  tat.dateCode = @dateCode    
 )    
END
GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosUTES]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosUTES]          
@codigo_Proceso as uniqueidentifier,          
@dateCode AS varchar ( 14)          
as          
begin           
          
--- Establecemos todos los registros como procesados para esta carga de datos          
UPDATE TemporalArchivoTexto           
SET Procesa = 1          
WHERE           
Codigo_proceso = @codigo_Proceso          
and dateCode = @dateCode          
          
        
delete TemporalArchivoTexto         
where codigo_proceso = @codigo_Proceso         
AND ( ISNUMERIC (rtrim(ltrim(substring ( lineainformacion , 1, 6  )))) = 0)         
        
delete TemporalArchivoTexto         
where codigo_proceso = @codigo_Proceso        
and rtrim(ltrim(substring ( lineainformacion , 1, 1  ))) like '%0%'        
        
          
--- Normalizar archivo de Texto y pasarlo a ARCHIVODESCUENTOS          
 INSERT INTO ARCHIVODESCUENTOS          
 select 'BIF'    as CodigoBanco,           
  CC.DLMO    as Moneda,           
  cc.DLNP   as NumeroPagare,          
  cc.DLCM   as CodigoModular,          
  cc.DLNE    as NombreTrabajador,          
  cc.DLCR   as CodigoReferencia,          
  cc.DLAP   as Anio,          
  cc.DLMP   as Mes,          
  cc.DLIC   as Cuota,          
  cc.DLST   as SituacionLaboral,          
  cast (          
  case when len ( rtrim(ltrim(substring ( lineainformacion , 71,7  ))) ) > 2 AND           
    ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 71,7  ))) ) = 1 then          
            
    substring(rtrim(ltrim(substring (lineainformacion , 71,7  ))), 1, len(rtrim(ltrim(substring ( lineainformacion , 71,7 ))))  - 3 )           
    + '.' +  substring(rtrim(ltrim(substring ( lineainformacion , 71,7 ))),  len(rtrim(ltrim(substring ( lineainformacion , 71,7  ))))  - 1, len(rtrim(ltrim(substring ( lineainformacion , 71,7  )))))            
            
    when len ( rtrim(ltrim(substring ( lineainformacion , 71,7  ))) ) <= 2 AND ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 71,7  ))) ) = 1 then          
     ltrim(rtrim(substring ( lineainformacion , 71,7  )))          
    when ISNUMERIC ( rtrim(ltrim(substring ( lineainformacion , 71,7  ))) ) = 0 then           
     '0'          
    end          
  as decimal(14,2) ) MontoDescuento,          
  'C0' as Estado,          
  @codigo_Proceso---'DC9002F0-2510-4038-B542-2B4A0019EE08'           
  as Codigo_proceso          
           
 from clientecuota cc inner join TemporalArchivoTexto tat          
  on (            
   /*( REPLACE  (  replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ') , '  ', ' ')          
    LIKE           
   '%' + RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN)) + '%'          
   )          
             
   or           
   (RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN))          
    LIKE           
   '%' + REPLACE ( replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ'),  '  ', ' ') + '%'          
   )  */    
 cc.DLCM = '0000' +  rtrim(ltrim(substring ( lineainformacion , 1, 6  )))        
  )          
 WHERE  CC.codigo_proceso = @codigo_Proceso--'fcc58676-ae87-45b6-9aab-fa5eaf7ce9ad'          
  AND CC.codigo_proceso = tat.codigo_proceso          
  and rtrim ( substring ( lineainformacion , 12, 54 ) ) <> ''          
  and tat.dateCode = @dateCode--'20060706121109'          
          
          
update TemporalArchivoTexto           
 set Procesa = 0          
 where           
 codigo_proceso = @codigo_Proceso          
 and dateCode = @dateCode          
 and lineainformacion not in (           
           
 SELECT  lineainformacion          
 from clientecuota cc inner join TemporalArchivoTexto tat          
   on (            
 /*  (  REPLACE(  replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ'), '  ', ' ')          
     LIKE           
    '%' + RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN)) + '%'          
    )          
         
    or           
    (RTRIM ( LTRIM ( DLPA )) + ' ' + RTRIM ( LTRIM (DLMA )) + ' '+ RTRIM ( LTRIM ( DLMN))          
     LIKE           
    '%' + REPLACE ( replace ( ltrim(rtrim(substring ( lineainformacion , 12, 54 ))) , '?', 'Ñ') , '  ', ' ') + '%'          
    ) */     
    
 cc.DLCM = '0000' +  rtrim(ltrim(substring ( lineainformacion , 1, 6  )))       
   )          
 WHERE  CC.codigo_proceso = @codigo_Proceso          
 AND CC.codigo_proceso = tat.codigo_proceso          
 and rtrim ( substring ( lineainformacion , 12, 54 ) ) <> ''          
 and tat.dateCode = @dateCode          
 )    
end          


GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosUTESNO6]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/************************************************************************/  
/* Fecha Modif : BANBIF(CRP) - 20130808    */  
/* Descripcion : Importarcion de Archivo para UTES 06 */  
/************************************************************************/  
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosUTESNO6]
@codigo_Proceso AS uniqueidentifier,  
@dateCode  AS varchar (14)  
AS BEGIN  
  
/********************************************************************************/  
/* Establecemos todos los registros como procesados para esta carga de datos */  
/********************************************************************************/  
UPDATE TemporalArchivoTexto   
SET  Procesa = 1  
WHERE Codigo_proceso = @codigo_Proceso AND  
 dateCode  = @dateCode  
  
/***************************************************/  
/* Aqui procedemos a obtener el dato de los montos */  
/***************************************************/  
  
 INSERT INTO ARCHIVODESCUENTOS  
 SELECT 'BIF'    AS CodigoBanco,   
  CC.DLMO    AS Moneda,   
  cc.DLNP   AS NumeroPagare,  
  cc.DLCM   AS CodigoModular,  
  cc.DLNE    AS NombreTrabajador,  
  cc.DLCR   AS CodigoReferencia,  
  cc.DLAP   AS Anio,  
  cc.DLMP   AS Mes,  
  cc.DLIC   AS Cuota,  
  cc.DLST   AS SituacionLaboral,  
  REPLACE(REPLACE(SUBSTRING(lineainformacion , 67, 11 ),' ',''), ',','.') AS MontoDescuento,  
  'C0'    AS Estado,  
  @codigo_Proceso  AS Codigo_proceso  
 FROM ClienteCuota CC INNER JOIN TemporalArchivoTexto TAT  
						ON SUBSTRING(lineainformacion, 1, 6) = right(dlcm, 6)
 WHERE CC.codigo_proceso = @codigo_Proceso AND   
  CC.codigo_proceso = tat.codigo_proceso AND   
  RTRIM(SUBSTRING(lineainformacion, 13, 45)) <> '' AND   
  tat.dateCode = @dateCode  
  
 UPDATE TemporalArchivoTexto   
 SET Procesa = 0  
 WHERE Codigo_proceso = @codigo_Proceso AND   
  dateCode = @dateCode  AND  
  lineainformacion NOT IN (   
   
 SELECT  lineainformacion  
 FROM Clientecuota CC INNER JOIN TemporalArchivoTexto TAT  
						ON  SUBSTRING(lineainformacion, 1, 6) = right(dlcm, 6) 
 WHERE CC.codigo_proceso = @codigo_Proceso AND   
  CC.codigo_proceso = tat.codigo_proceso AND   
  RTRIM(SUBSTRING(lineainformacion, 13, 45)) <> '' AND  
  tat.dateCode = @dateCode  
 )  
END
GO
/****** Object:  StoredProcedure [dbo].[procesaDatosArchivosVDBF]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[procesaDatosArchivosVDBF]
@codigo_Proceso	AS uniqueidentifier,
@dateCode	AS varchar (14)
AS BEGIN

	--- Establecemos todos los registros como procesados para esta carga de datos
	UPDATE	TemporalArchivoTexto 
	SET 	Procesa = 1
	WHERE	Codigo_proceso	= @codigo_Proceso	AND
		dateCode	= @dateCode

	--- Normalizar archivo de Texto y pasarlo a ARCHIVODESCUENTOS
	INSERT INTO ARCHIVODESCUENTOS
	SELECT	'BIF' 			as CodigoBanco		, 
		CC.DLMO  		as Moneda		, 
		CC.DLNP 		as NumeroPagare		,
		CC.DLCM 		as CodigoModular	,
		CC.DLNE		 	as NombreTrabajador	,
		CC.DLCR			as CodigoReferencia	,
		CC.DLAP			as Anio			,
		CC.DLMP			as Mes			,
		CC.DLIC			as Cuota		,
		CC.DLST			as SituacionLaboral	,
		CONVERT(DECIMAL(14,2),LTRIM(SUBSTRING(lineainformacion,16,15))) as MontoDescuento,
		'C0' 			as Estado		,
		CC.Codigo_proceso	as Codigo_proceso
	FROM	CLIENTECUOTA 		CC,
		TemporalArchivoTexto	TAT
	WHERE	CC.Codigo_proceso 	= @codigo_Proceso				AND
		CC.Codigo_proceso 	= TAT.Codigo_proceso				AND
		CC.DLCM 		= SUBSTRING(TAT.lineainformacion,1,10)		AND
		TAT.dateCode 		= @dateCode

	UPDATE	TemporalArchivoTexto 
	SET	Procesa		= 0
	WHERE	codigo_proceso	= @codigo_Proceso	AND
		dateCode 	= @dateCode		AND
		lineainformacion NOT IN ( 
					SELECT 	lineainformacion
					FROM	CLIENTECUOTA 		CC,
						TemporalArchivoTexto	TAT,
						DLCRE 			DCR
					WHERE	CC.Codigo_proceso 	= @codigo_Proceso				AND
						CC.Codigo_proceso 	= TAT.Codigo_proceso				AND
						CC.DLCM 		= SUBSTRING(TAT.lineainformacion,1,10)		AND
						TAT.dateCode 		= @dateCode
					)

END



GO
/****** Object:  StoredProcedure [dbo].[ProcesandoCargaCronogramaFuturo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ProcesandoCargaCronogramaFuturo]
AS
BEGIN
	--Verificamos si la tabla temporal esta llena, si lo esta hay un proceso realizandose 
	--y no se puede cargar hasta que este vacia nuevamente
	DECLARE @B AS BIT
	SET @B = 0 
	if exists ( SELECT 1 FROM DLENV ) 
	BEGIN
		SET @B = 1
	END
	SELECT @B AS BIT
END


GO
/****** Object:  StoredProcedure [dbo].[ProcesosAutomaticosInsert]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*12 Proceso Automatico*/

CREATE OR ALTER PROCEDURE [dbo].[ProcesosAutomaticosInsert]
(
	@iProcesoAutomaticoId	INT OUT,	
	@iTotalRegistros		INT,
	@iProcesados			INT,
	@iErroneos				INT,
	@vMensajeProceso		VARCHAR(1000),
	@iEstado				INT,
	@vUsuario				VARCHAR(100)
)
AS
BEGIN
	INSERT INTO [dbo].[PROCESOS_AUTOMATICOS]
	(iTotalRegistros,iProcesados,iErroneos,vMensajeProceso,iEstado,vUsuarioCreacion,dFechaCreacion)
	VALUES
	(@iTotalRegistros,@iProcesados,@iErroneos,@vMensajeProceso,@iEstado,@vUsuario,GETDATE())
	
	SET @iProcesoAutomaticoId = @@IDENTITY
END

GO
/****** Object:  StoredProcedure [dbo].[ProcesosAutomaticosSelect]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ProcesosAutomaticosSelect]
(
	@iProcesoAutomaticoId	INT,	
	@iEstado				INT
)
AS
BEGIN
	SELECT DISTINCT
			PA.iProcesoAutomaticoId,			
			PA.iTotalRegistros,
			PA.iProcesados,
			PA.iErroneos,
			PA.vMensajeProceso,
			PA.iEstado,
			SP.vDescripcion AS vEstado,
			PA.dFechaCreacion,
			PA.dFechaModificacion
	FROM [dbo].[PROCESOS_AUTOMATICOS] PA	
	INNER JOIN [dbo].[SystemParameters] SP ON PA.iEstado = CAST(SP.vValor AS INTEGER) AND SP.iGrupoId = 7
	WHERE
				(PA.iProcesoAutomaticoId = @iProcesoAutomaticoId OR @iProcesoAutomaticoId = 0) 			
			AND (PA.iEstado = @iEstado OR @iEstado = 0)
	ORDER BY PA.dFechaCreacion DESC, PA.dFechaModificacion DESC
	
END

GO
/****** Object:  StoredProcedure [dbo].[ProcesosAutomaticosUpdate]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ProcesosAutomaticosUpdate]
(
	@iProcesoAutomaticoId	INT,
	@iTotalRegistros		INT,
	@iProcesados			INT,
	@iErroneos				INT,
	@vMensajeProceso		VARCHAR(1000),
	@iEstado				INT,
	@vUsuario				VARCHAR(100)
)
AS
BEGIN
	UPDATE [dbo].[PROCESOS_AUTOMATICOS]
	SET		
		iTotalRegistros = @iTotalRegistros,
		iProcesados = @iProcesados,
		iErroneos = @iErroneos,
		vMensajeProceso = @vMensajeProceso,
		iEstado = @iEstado,		
		vUsuarioModificacion = @vUsuario,
		dFechaModificacion = GETDATE()
	WHERE
			iProcesoAutomaticoId = @iProcesoAutomaticoId
END

GO
/****** Object:  StoredProcedure [dbo].[pValidaDatosAcceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[pValidaDatosAcceso]  (@ID varchar(50))
as
	SELECT COUNT(*) FROM AccesoSeguridad
		WHERE vUserId = @ID



GO
/****** Object:  StoredProcedure [dbo].[RegularizaMontosCargaTexto]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[RegularizaMontosCargaTexto]
@Codigo_proceso as nvarchar ( 36 ) 
AS
BEGIN
/* 
 * El procedimiento coloca el punto decimal en los montos que les corresponde
 *
 */
	UPDATE ARCHIVODESCUENTOS
	SET Cuota = Case When len ( Cuota ) > 2 AND ISNUMERIC ( Cuota ) = 1 then
					substring(Cuota, 1, len(Cuota)  - 2 ) + '.' +  substring(Cuota,  len(Cuota)  - 1, len(Cuota))  
				When len ( Cuota ) <= 2 AND ISNUMERIC ( Cuota ) = 1 then
					Cuota
				When ISNUMERIC ( Cuota ) = 0 then	
					'0'
				End,
		MontoDescuento  = Case When len ( MontoDescuento ) > 2 AND ISNUMERIC ( MontoDescuento ) = 1 Then
					Substring(MontoDescuento, 1, Len(MontoDescuento)  - 2 ) + '.' +  Substring(MontoDescuento,  len(MontoDescuento)  - 1, len(MontoDescuento))
				When Len ( MontoDescuento ) <= 2 AND ISNUMERIC ( MontoDescuento ) = 1 then
					MontoDescuento
				When ISNUMERIC ( MontoDescuento ) = 0 then	
					'0'
				End
	WHERE Codigo_Proceso = @Codigo_Proceso 
END


GO
/****** Object:  StoredProcedure [dbo].[ReporteNominaAutomaticaCabecera]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ReporteNominaAutomaticaCabecera]
(
	@idFuncionario INT	
)
AS
BEGIN	
	declare @iTotalEmpresa		int
	declare @iNumeroCredito		int
	declare @dTotalImporte		decimal(18,2)

	declare @resultados table
	(
		iTotalEmpresas	int,
		iNumeroCreditos	int,
		dTotalImporte	decimal(18,2)
	)	

	set @iTotalEmpresa =	(
								select 
									count(lec.vCodigoProceso)
								from log_envio_correos lec
								inner join cliente c on lec.iCodigoCliente = c.codigo_cliente
								where		
										c.id_funcionario = @idFuncionario
									and lec.iTipoEnvioCorreoId = 1
									and lec.iEstado = 1
									and convert(char(10),dFechaCreacion,120) = convert(char(10),getdate(),120)
									and lec.iProcesoAutomaticoId <> 1
							)
							
	set @iNumeroCredito =	(
								select 
									count(cc.dlnp)
								from log_envio_correos lec
								inner join cliente c on lec.iCodigoCliente = c.codigo_cliente
								inner join clientecuota cc on lec.vcodigoproceso = cc.codigo_proceso
								where		
										c.id_funcionario = @idFuncionario
									and lec.iTipoEnvioCorreoId = 1
									and lec.iEstado = 1
									and convert(char(10),dFechaCreacion,120) = convert(char(10),getdate(),120)
									and lec.iProcesoAutomaticoId <> 1
							)

	set @dTotalImporte =	(
								select 
									isnull(sum(cc.dlic),0)
								from log_envio_correos lec
								inner join cliente c on lec.iCodigoCliente = c.codigo_cliente
								inner join clientecuota cc on lec.vcodigoproceso = cc.codigo_proceso
								where		
										c.id_funcionario = @idFuncionario
									and lec.iTipoEnvioCorreoId = 1
									and lec.iEstado = 1
									and convert(char(10),dFechaCreacion,120) = convert(char(10),getdate(),120)
									and lec.iProcesoAutomaticoId <> 1
							)

	insert into @resultados
	values
	(@iTotalEmpresa,@iNumeroCredito,@dTotalImporte)

	select * from @resultados
END

GO
/****** Object:  StoredProcedure [dbo].[ReporteNominaAutomaticaDetalle]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ReporteNominaAutomaticaDetalle]                
  
	@idFuncionario as int                  

AS  
	select 
		'Empresa' = C.Nombre_Cliente,
		'RUC' = C.NumeroDocumento,
		'CODIGO_IBS' = C.Codigo_IBS,
		'NROCREDITOS' = (SELECT COUNT(ISNULL(DLNP,0)) FROM ClienteCuota WHERE CODIGO_PROCESO = lec.vcodigoproceso),
		'IMPORTE' = (SELECT ISNULL(SUM(ISNULL(DLIC,0)),0) FROM ClienteCuota WHERE CODIGO_PROCESO = lec.vcodigoproceso)
	from log_envio_correos lec
	inner join cliente c on lec.iCodigoCliente = c.codigo_cliente	
	where		
			c.id_funcionario = @idFuncionario
		and lec.iTipoEnvioCorreoId = 1
		and lec.iEstado = 1
		and convert(char(10),dFechaCreacion,120) = convert(char(10),getdate(),120)
		and lec.iProcesoAutomaticoId <> 1

GO
/****** Object:  StoredProcedure [dbo].[ResponsableOficinaInsert]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*13 Responsable de Oficina*/

CREATE OR ALTER PROCEDURE [dbo].[ResponsableOficinaInsert]
(	
	@iOficinaId			INT,
	@vOficina	    	VARCHAR(100) ,
	@vNombreResponsable		VARCHAR(100) ,
	@vCorreoResponsable		VARCHAR(100) ,	
	@vUsuario			VARCHAR(50)
)
AS
BEGIN
	INSERT INTO [dbo].[ResponsableOficina]
	(		
		iOficinaId,
		vOficina,
		vNombreResponsable,
		vCorreoResponsable,
	
		vUsuarioCreacion,
		dFechaCreacion		
	)
	VALUES
	(
		@iOficinaId,
		@vOficina,
		@vNombreResponsable,
		@vCorreoResponsable,
		@vUsuario,
		GETDATE()
	)
END

GO
/****** Object:  StoredProcedure [dbo].[ResponsableOficinaSelect]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ResponsableOficinaSelect]
(
	@iResponsableId  	INT,
	@vOficina			VARCHAR(100),
	@vNombreResponsable  VARCHAR(100)	
)
AS
BEGIN
	SELECT
	iResponsableId		   ,
	iOficinaId				,
	vOficina				,
	vNombreResponsable		,
	vCorreoResponsable		,
	iEstado					,
	vUsuarioCreacion		,
	dFechaCreacion			,
	vUsuarioModificacion	,
	dFechaModificacion		
				
	FROM 	[dbo].[ResponsableOficina] 
	WHERE
			(iResponsableId = @iResponsableId OR @iResponsableId = 0)
		AND (vOficina = @vOficina OR @vOficina = '')
		AND (vNombreResponsable LIKE  @vNombreResponsable + '%' OR @vNombreResponsable ='') 
		AND (iEstado = 1)
END

GO
/****** Object:  StoredProcedure [dbo].[ResponsableOficinaUpdate]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ResponsableOficinaUpdate]
(
	@iResponsableId		    INT ,
	@iOficinaId			INT,
	@vOficina	    	VARCHAR(100) ,
	@vNombreResponsable		VARCHAR(100) ,
	@vCorreoResponsable		VARCHAR(100) ,
	@vUsuario			VARCHAR(50)
)
AS
BEGIN
	UPDATE [dbo].[ResponsableOficina]
	SET
		
		iOficinaId = @iOficinaId,
		vOficina  = @vOficina,
		vNombreResponsable = @vNombreResponsable,
		vCorreoResponsable = @vCorreoResponsable,
		vUsuarioModificacion = @vUsuario,
		dFechaModificacion = GETDATE()
	WHERE
	iResponsableId	= @iResponsableId	
END

GO
/****** Object:  StoredProcedure [dbo].[spObtenerAlertasEnviar]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[spObtenerAlertasEnviar]
(
	@CODCLIENTE	INT,
	@SALDO		DECIMAL(18,2),
	@ANIO		INT,
	@MES		INT	
)
AS
BEGIN
	--DECLARE @CODCLIENTE	INT
	--DECLARE @ANIO		INT
	--DECLARE @MES		INT
	--DECLARE @SALDO		DECIMAL(18,2)
	--DECLARE @DIAS		DATETIME --PARA PRUEBAS CON DIAS DIFERENTES A LA FECHA ACTUAL
	DECLARE @CODPROCESO	VARCHAR(1000)	
	DECLARE @CODIBS		INT	
	DECLARE @DIA		INT
	DECLARE @FECHAPAGO	DATETIME

	SET NOCOUNT ON

	--SET @CODCLIENTE = 190829058
	--SET @ANIO = 2016
	--SET @MES = 2
	--SET @SALDO = CAST(13.48 AS DECIMAL(18,2))
	--SET @DIAS	= CONVERT(DATETIME, CONVERT(VARCHAR(4),'2016') + '/' + CONVERT(VARCHAR(2),'01') + '/' + CONVERT(VARCHAR(2),'28'),120)
	SET @CODIBS = (SELECT ISNULL(codigo_IBS,0) FROM [dbo].[Cliente] WHERE Codigo_Cliente = @CODCLIENTE)
	
	--PRINT CAST(@DIAS AS VARCHAR)
	
	SET @CODPROCESO = (SELECT TOP 1 CODIGO_PROCESO FROM [dbo].[Proceso] WHERE Codigo_Cliente = @CODCLIENTE ORDER BY CAST(Anio_Periodo AS INTEGER) DESC, CAST(Mes_Periodo AS INTEGER) DESC)	

	--SELECT * FROM [dbo].[Cliente] WHERE codigo_cliente = 190828178
	--SELECT * FROM [dbo].[dlcre] WHERE dlccc = 53131

	DECLARE @T_CLIENTE AS TABLE
	(
		iEmpresaId		INT,
		vEmpresa		VARCHAR(100),
		iDiaPago		INT,
		iCuentaSoles	VARCHAR(100),
		iCuentaDolares	VARCHAR(100)
	)

	INSERT INTO @T_CLIENTE
	(
		iEmpresaId,
		vEmpresa,
		iDiaPago
	)
	SELECT DISTINCT
		dlccc,
		dlncc,
		dldpg
	FROM [dbo].[dlcre] WHERE dlccc = @CODIBS

	UPDATE @T_CLIENTE
	SET
		iCuentaSoles = ISNULL((SELECT DISTINCT CAST(DLCTA AS VARCHAR(100)) FROM [dbo].[dlcre] WHERE DLCCC = @CODIBS AND DLCCY = 'SOL'),''),
		iCuentaDolares = ISNULL((SELECT DISTINCT CAST(DLCTA AS VARCHAR(100)) FROM [dbo].[dlcre] WHERE DLCCC = @CODIBS AND DLCCY = 'USD'),'')
		
	SELECT @DIA = iDiaPago FROM @T_CLIENTE
	SET @FECHAPAGO = CONVERT(DATETIME, CONVERT(VARCHAR(4),@ANIO) + '/' + CONVERT(VARCHAR(2),CASE WHEN LEN(@MES) = 1 THEN '0' + @MES ELSE @MES END) + '/' + CONVERT(VARCHAR(2),CASE WHEN LEN(@DIA) = 1 THEN '0' + @DIA ELSE @DIA END),120)
	
	--SELECT DATEDIFF(day,GETDATE(),@FECHAPAGO)	

	--SELECT * FROM @T_CLIENTE

	DECLARE @T_ALERTAS_1 AS TABLE
	(
		iCodigoIBS			INT,		
		iAlertaIClienteId	INT,
		iAlertaId			INT,		
		iClienteId			INT,
		iTipoAlerta			INT,
		iDias				INT,
		iAdjunto			INT
	)
	
	/* Agregar PRE*/
	
	DECLARE @ENVIOALERTA	INTEGER
	
	SET @ENVIOALERTA = (SELECT COUNT(*) FROM LOG_ENVIO_CORREOS LEC
						WHERE 
								LEC.iCodigoCliente = @CODCLIENTE 
							AND LEC.iAnioPeriodo = @ANIO 
							AND LEC.iMesPeriodo = @MES
							AND LEC.iTipoEnvioCorreoId = 2
							AND LEC.iEstado = 1)
							
	IF (@ENVIOALERTA = 0)
		BEGIN
			INSERT INTO @T_ALERTAS_1
			SELECT 
					@CODIBS,
					AC.iAlertaClienteId,
					AC.iAlertaId,
					AC.iClienteId,
					2,
					AC.iDiasAntes,
					AC.iAdjunto
			FROM [dbo].[AlertaCliente] AC
			INNER JOIN [dbo].[Alertas] A ON AC.iAlertaId = A.iAlertaID
			INNER JOIN [dbo].[Cliente] C1 ON AC.iClienteId = C1.Codigo_Cliente
			INNER JOIN @T_CLIENTE C2 ON C1.Codigo_IBS = C2.iEmpresaId			
			WHERE 
						AC.iClienteId = @CODCLIENTE 
					AND A.iTipoAlerta = 1
					AND DATEDIFF(DAY,GETDATE(),@FECHAPAGO) - AC.iDiasAntes = 0
					AND A.iEstadoAlerta = 1	
		END
			
	--SELECT * FROM @T_ALERTAS_1
			
	/* Agregar POST Y VENCIMIENTO */
	
	DECLARE @NUMCUOTA		INTEGER	
	DECLARE @ESTADO			VARCHAR(2)
	
	DECLARE @CUOTAS TABLE
	(
		DLCCC	INT,
		DLNCC	VARCHAR(100),
		DLCTA	VARCHAR(100),
		DLDPG	INT,
		DLPCCY	VARCHAR(10),
		DLACC	VARCHAR(100),		
		DLCCY	VARCHAR(10),
		DLCUN	INT,
		DLNCL	VARCHAR(100),
		DLAPP	VARCHAR(100),
		DLAPM	VARCHAR(100),
		DLPPDY	INT,
		DLPPDM	INT,
		DLPPDD	INT,
		DLPPNU	INT,
		DLPPFL	VARCHAR(10),
		FECHA	VARCHAR(10)
	)

	INSERT INTO @CUOTAS
	SELECT 
		CRE.DLCCC,
		CRE.DLNCC,
		CRE.DLCTA,
		CRE.DLDPG,
		PMT.DLPCCY,
		CRE.DLACC,
		CRE.DLCCY,
		CRE.DLCUN,
		CRE.DLNCL,
		CRE.DLAPP,
		CRE.DLAPM,	
		PMT.DLPPDY,
		PMT.DLPPDM,
		PMT.DLPPDD,
		PMT.DLPPNU,
		PMT.DLPPFL,		
		CAST(CAST(2000 + LTRIM(RTRIM(PMT.DLPPDY)) AS VARCHAR(4)) + '/' + CAST(CASE LEN(LTRIM(RTRIM(PMT.DLPPDM))) WHEN 1 THEN '0' + LTRIM(RTRIM(PMT.DLPPDM)) WHEN 2 THEN LTRIM(RTRIM(PMT.DLPPDM)) END AS VARCHAR(2)) + '/' + CAST(CASE LEN(LTRIM(RTRIM(PMT.DLPPDD))) WHEN 1 THEN '0' + LTRIM(RTRIM(PMT.DLPPDD)) WHEN 2 THEN LTRIM(RTRIM(PMT.DLPPDD)) END AS VARCHAR(2)) AS VARCHAR(10))
	FROM DLCRE CRE 
	INNER JOIN DLPMT PMT ON PMT.DLPACC = CRE.DLACC
	WHERE 
				CRE.DLCCC = 254437			
			AND PMT.DLPPDY = (SELECT TOP 1 DLPPDY FROM DLPMT WHERE DLPACC = CRE.DLACC AND DLPPFL = '' ORDER BY DLPPNU ASC)
			AND PMT.DLPPDM = (SELECT TOP 1 DLPPDM FROM DLPMT WHERE DLPACC = CRE.DLACC AND DLPPFL = '' ORDER BY DLPPNU ASC)
			
	--SELECT * FROM @CUOTAS
				
	DECLARE @VALIDAR INTEGER
	
	SET @VALIDAR = (SELECT COUNT(*) FROM @CUOTAS WHERE FECHA < CAST(GETDATE() AS VARCHAR(10)))
	
	SET @ENVIOALERTA = (SELECT COUNT(*) FROM LOG_ENVIO_CORREOS LEC
						WHERE 
								LEC.iCodigoCliente = @CODCLIENTE 
							AND LEC.iAnioPeriodo = @ANIO 
							AND LEC.iMesPeriodo = @MES
							AND LEC.iTipoEnvioCorreoId = 3
							AND LEC.iEstado = 1)
						
	SET @ESTADO = (SELECT Estado FROM [dbo].[Proceso] WHERE Codigo_Proceso = @CODPROCESO)
	
	/*AGREGAR POST PAGO A ALERTAS*/
	
	IF @ENVIOALERTA = 0 AND @SALDO < 50 AND (@ESTADO <> 'A2' AND @ESTADO <> 'A3') AND @VALIDAR > 0
		BEGIN
			INSERT INTO @T_ALERTAS_1
			SELECT 
				@CODIBS,
				AC.iAlertaClienteId,
				AC.iAlertaId,
				AC.iClienteId,
				3,
				AC.iDiasDespues,
				AC.iAdjunto	
			FROM [dbo].[AlertaCliente] AC
			INNER JOIN [dbo].[Alertas] A ON AC.iAlertaId = A.iAlertaId
			INNER JOIN [dbo].[Cliente] C1 ON AC.iClienteId = C1.Codigo_Cliente
			INNER JOIN @T_CLIENTE C2 ON C1.Codigo_IBS = C2.iEmpresaId
			WHERE 
						AC.iClienteId = @CODCLIENTE 
					AND A.iTipoAlerta = 2					
					AND A.iEstadoAlerta = 1
					AND AC.iEstado = 1	
		END
		
	--SELECT * FROM @T_ALERTAS_1
		
	/*AGREGAR VENCIMIENTO A ALERTAS*/
	
	SET @ENVIOALERTA = (SELECT COUNT(*) FROM LOG_ENVIO_CORREOS LEC							
						WHERE 
								LEC.iCodigoCliente = @CODCLIENTE 
							AND LEC.iAnioPeriodo = @ANIO 
							AND LEC.iMesPeriodo = @MES
							AND LEC.iTipoEnvioCorreoId = 4
							AND LEC.iEstado = 1)
	
	IF @ENVIOALERTA = 0 AND @SALDO < 50 AND (@ESTADO = 'A3') AND @VALIDAR > 0
		BEGIN
			INSERT INTO @T_ALERTAS_1
			SELECT 
				@CODIBS,
				AC.iAlertaClienteId,
				AC.iAlertaId,
				AC.iClienteId,
				4,
				AC.iDiasDespues,
				AC.iAdjunto	
			FROM [dbo].[AlertaCliente] AC
			INNER JOIN [dbo].[Alertas] A ON AC.iAlertaId = A.iAlertaId
			INNER JOIN [dbo].[Cliente] C1 ON AC.iClienteId = C1.Codigo_Cliente
			INNER JOIN @T_CLIENTE C2 ON C1.Codigo_IBS = C2.iEmpresaId
			WHERE 
						AC.iClienteId = @CODCLIENTE 
					AND A.iTipoAlerta = 3
					AND A.iEstadoAlerta = 1
					AND AC.iEstado = 1	
		END

	--SELECT * FROM @T_ALERTAS_1

	DECLARE @T_ALERTA_ENVIAR AS TABLE
	(
		iAlertaId			INT,
		iTipoAlerta			INT,
		vAlerta				VARCHAR(100),
		vNombreEmpresa		VARCHAR(100),
		iFechaPago			INT,
		iCuentaAbono		VARCHAR(100),
		vNombreFuncionario	VARCHAR(125),
		vEmailFuncionario	VARCHAR(50),
		vAnexoFuncionario	VARCHAR(11),
		vCorreosEnviar		VARCHAR(1000),
		iMesCuota			INT,
		iAñoCuota			INT,	
		vAsuntoMensaje		VARCHAR(1000),		
		vCuerpoMensaje		VARCHAR(5000),
		vAdjunto			INT
	)
	
	DECLARE @Correos1	VARCHAR(1000)			
			
	SELECT @Correos1 = COALESCE(@Correos1 + ', ', '') + vEmailCoordinador 
	FROM [dbo].[coordinadorCliente]
	WHERE 
			iClienteId = @CODCLIENTE	
		AND iEstado = 1

	INSERT INTO @T_ALERTA_ENVIAR
	SELECT
			A1.iAlertaId
			,A2.iTipoAlerta
			,A1.vNombreAlerta
			,(SELECT vEmpresa FROM @T_CLIENTE)
			,(SELECT iDiaPago FROM @T_CLIENTE)
			,(SELECT CASE WHEN LEN(iCuentaSoles) > 0 THEN iCuentaSoles ELSE iCuentaDolares END FROM @T_CLIENTE)
			,ISNULL(FC.nombre_funcionario,'')
			,ISNULL(FC.email_funcionario,'')
			,ISNULL(FC.telefono_funcionario,'')
			,@Correos1
			,@MES
			,@ANIO
			,A1.vAsuntoMensaje
			,A1.vCuerpoMensaje
			,A2.iAdjunto
	FROM [dbo].[Alertas] A1
	INNER JOIN @T_ALERTAS_1 A2 ON A1.iAlertaId = A2.iAlertaId
	INNER JOIN [dbo].[Cliente] C ON A2.iClienteId = C.Codigo_Cliente
	INNER JOIN [dbo].[Funcionario_Convenios] FC ON C.id_Funcionario = FC.id_Funcionario

	SELECT * FROM @T_ALERTA_ENVIAR

	SET NOCOUNT OFF
END

/*

Pruebas Unitarias: 

exec [dbo].[spObtenerAlertasEnviar] 190827918,50,2016,1

*/
GO
/****** Object:  StoredProcedure [dbo].[spObtenerCorreoUsuario]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*11 Usuarios*/

CREATE OR ALTER PROCEDURE [dbo].[spObtenerCorreoUsuario]
(
	@userName	VARCHAR(100)
)
AS
BEGIN
	SELECT 
			[CorreoElectronico]
	FROM [dbo].Usuarios
	WHERE
			[UserId] = @userName
END

GO
/****** Object:  StoredProcedure [dbo].[spObtenerEMailsEnviosClientes]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[spObtenerEMailsEnviosClientes]
(
	@iCodigoCliente		int
)
AS
BEGIN
	DECLARE @Correos1	VARCHAR(1000)			
			
	SELECT @Correos1 = COALESCE(@Correos1 + ', ', '') + vEmailCoordinador 
	FROM [dbo].[CoordinadorCliente]
	WHERE iClienteId = @iCodigoCliente	
					
	SELECT ISNULL(@Correos1,'') AS CORREOS	
END

GO
/****** Object:  StoredProcedure [dbo].[spObtenerEMailsFuncionarioCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*09 Funcionario Cliente*/

CREATE OR ALTER PROCEDURE [dbo].[spObtenerEMailsFuncionarioCliente]
(
	@iCodigoCliente		int
)
AS
BEGIN
	DECLARE @Correos1	VARCHAR(1000)			
	
	SELECT @Correos1 = ISNULL(fc.email_funcionario,'')
	FROM [dbo].[Cliente] c
	INNER JOIN [dbo].[funcionario_convenios] fc on c.id_funcionario = fc.id_funcionario
	WHERE c.Codigo_Cliente = @iCodigoCliente	
	
	SELECT @Correos1	AS CORREOS	
END

GO
/****** Object:  StoredProcedure [dbo].[spObtenerListaClientes]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[spObtenerListaClientes]
(
	@CodigoCliente		NUMERIC(9,0),
	@NombreCliente		VARCHAR(100),
	@TipoDocumento		VARCHAR(2),
	@NumeroDocumento	VARCHAR(12),
	@iStartRowIndex		INT,
	@iMaxRows			INT,
	@iTotalRows			INT OUT	
)
AS
BEGIN	
	SELECT 
		ROW_NUMBER() OVER(ORDER BY LTRIM(C.Nombre_Cliente) ASC) AS iRowNumber,
		LTRIM([Codigo_Cliente]) AS 'Codigo_Cliente', 
		LTRIM([Codigo_IBS]) AS 'Codigo_IBS',
		LTRIM(ISNULL([Nombre_Cliente],'')) AS 'Nombre_Cliente', 
		sp.[vDescripcion] AS 'TipoDocumento', 
		c.TipoDocumento as 'CodTipDocumento',
		LTRIM([NumeroDocumento]) AS 'NumeroDocumento', 
		LTRIM([CorreoElectronico]) AS 'CorreoElectronico',
		CanDelete = 
					CASE 
						WHEN EXISTS(SELECT NULL FROM [dbo].[proceso] WHERE Codigo_Cliente = c.Codigo_Cliente) THEN CAST(0 AS BIT) 
						ELSE CAST(1 AS BIT)
					END
	INTO #TEMP
	FROM [dbo].[Cliente] C 
	LEFT OUTER JOIN [dbo].[SystemParameters] sp ON (CONVERT(VARCHAR(1),C.[TipoDocumento]) = CONVERT(VARCHAR(1),sp.vValor) AND sp.iGrupoId = 1)	
	WHERE 
				[Codigo_Cliente] = @CodigoCliente OR ISNULL(@CodigoCliente,0) = 0
			AND ([Nombre_Cliente] LIKE @NombreCliente + '%' OR ISNULL(@NombreCliente,'') = '')
			AND ([TipoDocumento] = @TipoDocumento OR ISNULL(@TipoDocumento,'') = '')
			AND ([NumeroDocumento] = @NumeroDocumento OR ISNULL(@NumeroDocumento,'') = '')
	
	DECLARE @iEndRow	INT,
			@iStartRow	INT
			
	SELECT @iTotalRows = COUNT(*) FROM #TEMP
	
	IF (@iStartRowIndex = 0)
		BEGIN
			SET @iStartRow = @iStartRowIndex
			SET @iEndRow = @iTotalRows
		END	
	ELSE
		BEGIN
			SET @iStartRow = ((@iStartRowIndex - 1) * @iMaxRows) + 1
			SET @iEndRow = @iStartRow + @iMaxRows - 1
		END	
		
	SELECT *
	FROM #TEMP
	WHERE iRowNumber BETWEEN @iStartRow AND @iEndRow
	ORDER BY iRowNumber ASC
END

GO
/****** Object:  StoredProcedure [dbo].[ss_envio_aviso_recordatorio_pago]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[ss_envio_aviso_recordatorio_pago]                        
/*                        
Autor: Christian Rivera                        
Fecha: 05-06-2014                        
Motivo: EA 273-Mejoras convenios                        
Descripcion: Envía los avisos de recordatorio de pago a los coordinadores de las empresas via e-mail                        
Modificacion: 06/08/2014 NCA: se corrigio la logica del select para conseguir la fecha de pago - dias para el aviso del recordatorio.              
*/                        
as                        
                        
declare @dias_antes_vencimiento_cuota tinyint                        
declare @asunto_mensaje varchar(250)                        
declare @cuerpo_mensaje varchar(2500)                        
declare @nombre_cliente varchar(200)                        
declare @fecha_pago varchar(10)                         
declare @cuenta_abono_soles decimal(12,0)                        
declare @cuenta_abono_dolares decimal(12,0)                        
declare @nombre_funcionario_convenios varchar(125)                        
declare @email_funcionario_convenios varchar(50)                        
declare @anexo_funcionario_convenios varchar(11)                        
declare @email_coordinador varchar(4000)  --NCA MOD.                    
DECLARE @subject varchar(250)                        
DECLARE @body varchar(2500)                        
declare @codigo_IBS int                        
declare @id_aviso smallint                        
declare @fecha_proceso datetime              
                        
set nocount on                        
                        
set @id_aviso = 1 --recordatorio de pago                        
set @fecha_proceso = getdate()  --fecha de ejecucion del proceso                        
                        
--obtenemos los parametros de aviso de recordatorio de pago                        
select  @dias_antes_vencimiento_cuota = dias_antes_vencimiento_cuota,                          
  @asunto_mensaje = asunto_mensaje,                        
  @cuerpo_mensaje = cuerpo_mensaje                        
from aviso                         
where id_aviso = @id_aviso and estado_aviso = 1        
        
--insertamos los registros de la dlcre en una tabla temporal        
select * into #dlcre from dlcre        
        
--retiramos los registros de empresas que tienen mas de una fecha de pago (para evitar duplicidad)         
delete #dlcre        
from #dlcre a,        
 (select r.dlccc, r.dldpg, count(*) as cant         
 from (select distinct dlccc, dldpg from #dlcre) r         
 group by r.dlccc, r.dldpg         
 having count(*) > 1) b        
where a.dlccc = b.dlccc        
        
--retiramos los registros de empresas que tienen mas de una cuenta de cargo por moneda (para evitar duplicidad)        
delete #dlcre        
from #dlcre a,         
 (select r.dlccc, r.dlccy, count(*) as cant        
 from (select distinct dlccc, dlcta, dlccy from #dlcre) r         
 group by r.dlccc, r.dlccy         
 having count(*) > 1) b        
where a.dlccc = b.dlccc        
        
--creamos tabla temporal con los datos dia de pago y cuenta de cargo por empresa        
create table #cliente        
 (        
 dlccc decimal(9, 0),         
     dldpg decimal(2, 0),         
  dlcta_soles decimal(12, 0),         
  dlcta_dolares decimal(12, 0)        
 )        
        
insert into #cliente (dlccc, dldpg)        
select distinct dlccc, dldpg from #dlcre        
        
--actualizamos para cuenta de cargo en soles        
update #cliente        
set dlcta_soles = b.dlcta        
from #cliente a, (select distinct dlccc, dlcta, dlccy, dldpg from #dlcre) b        
where a.dlccc = b.dlccc and        
  b.dlccy = 'SOL'        
        
--actualizamos para cuenta de cargo en dolares        
update #cliente        
set dlcta_dolares = b.dlcta        
from #cliente a, (select distinct dlccc, dlcta, dlccy, dldpg from #dlcre) b        
where a.dlccc = b.dlccc and        
  b.dlccy = 'USD'        
           
--cursor para el envio de aviso de recordatorio de pago via e-mail                        
 DECLARE CURSOR_RECORDATORIO_PAGO CURSOR FOR (         
    select ltrim(rtrim(a.nombre_cliente)) as nombre_cliente,                               
  convert(varchar(10), dateadd(day, @dias_antes_vencimiento_cuota, @fecha_proceso) ,103) as fecha_pago,                
  ltrim(rtrim(isnull(b.dlcta_soles,0))) as cuenta_abono_soles,         
  ltrim(rtrim(isnull(b.dlcta_dolares,0))) as cuenta_abono_dolares,          
  ltrim(rtrim(d.nombre_funcionario)) as nombre_funcionario_convenios,                          
  ltrim(rtrim(d.email_funcionario)) as email_funcionario_convenios,                          
  ltrim(rtrim(d.telefono_funcionario)) as anexo_funcionario_convenios,                          
  ltrim(rtrim(dbo.fn_ObtenerCorreoCoordinadoresxCliente(a.codigo_cliente))) as email_coordinador,                
  ltrim(rtrim(a.codigo_IBS)) as codigo_IBS                     
    from cliente a  join dlemp c    
     on a.codigo_ibs = c.dlecun    
     join #cliente b        
     on b.dlccc = c.dlecun and                           
      day(dateadd(day, @dias_antes_vencimiento_cuota, @fecha_proceso)) = c.dleden    
     join funcionario_convenios d        
      on a.id_funcionario = d.id_funcionario)            
             
 OPEN CURSOR_RECORDATORIO_PAGO                                
 FETCH NEXT FROM CURSOR_RECORDATORIO_PAGO INTO @nombre_cliente, @fecha_pago, @cuenta_abono_soles, @cuenta_abono_dolares, @nombre_funcionario_convenios,                         
     @email_funcionario_convenios, @anexo_funcionario_convenios, @email_coordinador, @codigo_IBS                        
 WHILE @@FETCH_STATUS = 0                                
 BEGIN                           
  set @subject = replace(@asunto_mensaje, '[Nombre_Empresa]', @nombre_cliente)                        
  set @body = replace(@cuerpo_mensaje, '[Nombre_Empresa]', @nombre_cliente)                        
  set @body = replace(@body, '[Fecha_Pago]', @fecha_pago)                        
  set @body = replace(@body, '[Cuenta_Abono]', (case when @cuenta_abono_soles <> 0 and @cuenta_abono_dolares = 0 then 'Soles: ' + ltrim(rtrim(str(@cuenta_abono_soles))) when @cuenta_abono_soles = 0 and @cuenta_abono_dolares <> 0 then 'Dólares: ' + ltrim(rtrim(str(@cuenta_abono_dolares))) else 'Soles: ' + ltrim(rtrim(str(@cuenta_abono_soles))) + '</BR>' + 'Cuenta de abono Dólares: ' + ltrim(rtrim(str(@cuenta_abono_dolares))) end))                        
  set @body = replace(@body, '[Nombre_Funcionario_Convenios]', @nombre_funcionario_convenios)                        
  set @body = replace(@body, '[Email_Funcionario_Convenios]', @email_funcionario_convenios)                        
  set @body = replace(@body, '[Anexo_Funcionario_Convenios]', @anexo_funcionario_convenios)                        
                   
   --envia el aviso                    
   EXEC MSDB.DBO.SP_SEND_DBMAIL                                 
   @RECIPIENTS=@email_coordinador,                                
   @COPY_RECIPIENTS = @email_funcionario_convenios,                  
   @BLIND_COPY_RECIPIENTS='',                                
   @PROFILE_NAME = 'Convenios',                                
   @SUBJECT =@subject,                                
   @BODY = @body,                                
   @BODY_FORMAT = 'HTML'                                 
                                
   exec dbo.ins_log_ejecucion_aviso @id_aviso, @codigo_IBS, @email_coordinador                        
                        
   FETCH NEXT FROM CURSOR_RECORDATORIO_PAGO INTO @nombre_cliente, @fecha_pago, @cuenta_abono_soles, @cuenta_abono_dolares, @nombre_funcionario_convenios,                         
     @email_funcionario_convenios, @anexo_funcionario_convenios, @email_coordinador, @codigo_IBS                        
 END                             
 CLOSE CURSOR_RECORDATORIO_PAGO                        
 DEALLOCATE CURSOR_RECORDATORIO_PAGO           
        
 drop table #cliente        
 drop table #dlcre 
GO
/****** Object:  StoredProcedure [dbo].[ss_envio_aviso_reporte_generacion_automatica]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE OR ALTER PROCEDURE [dbo].[ss_envio_aviso_reporte_generacion_automatica]
   @id_aviso INT,
   @FECHA_ENVIOMAIL DATETIME
  
  as
  begin
 declare @asunto_mensaje varchar(250)          
 declare @cuerpo_mensaje varchar(2500)  
 DECLARE @ID_FUNCIONARIO INT
 DECLARE @EMAIL_FUNCIONARIO VARCHAR(50)
 DEClARE @BODY VARCHAR(5500)
 DEClARE @LINEA VARCHAR(500)
 DECLARE @LINEAS VARCHAR(5000)

  
 SET @BODY = '<H1>Reporte de Generación Automatica</H1><TABLE BORDER="1"><TR><TD><Strong>Empresa</Strong></TD><TD><Strong>Nro. clientes</Strong></TD><TD><Strong>Monto soles</Strong></TD><TD><Strong>Monto dolares</Strong></TD></TR>@REGISTROS</TABLE>'
 SET @LINEAS = ''
  
select      
  @asunto_mensaje = asunto_mensaje,          
  @cuerpo_mensaje = cuerpo_mensaje          
from aviso           
where id_aviso = @id_aviso         

 SET @cuerpo_mensaje  = REPLACE(@cuerpo_mensaje,'[FECHA]', CONVERT(VARCHAR,@FECHA_ENVIOMAIL,103))
  
  DECLARE CURSOR_FUNCIONARIO SCROLL CURSOR FOR
  
	SELECT ID_FUNCIONARIO,EMAIL_FUNCIONARIO FROM FUNCIONARIO_CONVENIOS
  
  FOR READ ONLY
  
  OPEN CURSOR_FUNCIONARIO
  FETCH CURSOR_FUNCIONARIO INTO @ID_FUNCIONARIO,@EMAIL_FUNCIONARIO
    
    WHILE @@FETCH_STATUS = 0
	BEGIN	   
	
		DECLARE CURSOR_LINEA SCROLL CURSOR FOR
					  
  			--Select 
			  --(select  '<TR><TD>' + Cast(cnx.Nombre_empresa as char(100)) + '</TD><TD>&nbsp;' + Cast(cnx.Cantidad_registros as char(10)) + '</TD><TD>' + Cast(cnx.Monto_deuda_soles as char(20)) + '</TD><TD>' + isnull(Cast(cnx.Monto_deuda_dolares as char(20)),'&nbsp') + '</TD></TR>'
			  --from dbo.clientenomina cnx
			  --WHERE convert(varchar,cnx.Fecha_envio_recepcion,112) = convert(varchar,@FECHA_ENVIOMAIL,112)
			  --AND cnx.Id_funcionario = @ID_FUNCIONARIO and ltrim(rtrim(cnx.Tipo_proceso))='B'
			  --and cnx.Nomina_id = (select Max(cn.Nomina_id) where cn.codigo_proceso = cnx.codigo_proceso )  ) as LINEA
			  --from clientenomina cn
			  --WHERE convert(varchar,cn.Fecha_envio_recepcion,112) = convert(varchar,@FECHA_ENVIOMAIL,112)
			  --AND cn.Id_funcionario = @ID_FUNCIONARIO and ltrim(rtrim(cn.Tipo_proceso))='B'			  			  
			  --group by codigo_proceso
			  
  			Select 
			  (select  '<TR><TD>' + Cast(cnx.Nombre_empresa as char(100)) + '</TD><TD>&nbsp;' + Cast(cnx.Cantidad_registros as char(10)) + '</TD><TD>' + Cast(cnx.Monto_deuda_soles as char(20)) + '</TD><TD>' + isnull(Cast(cnx.Monto_deuda_dolares as char(20)),'&nbsp') + '</TD></TR>'
			  from dbo.clientenomina cnx
			  WHERE convert(varchar,cnx.Fecha_envio_recepcion,112) = convert(varchar,@FECHA_ENVIOMAIL,112)
			  AND cnx.Id_funcionario = @ID_FUNCIONARIO and ltrim(rtrim(cnx.Tipo_proceso))='B'
			  and cnx.Nomina_id = (select Max(cn.Nomina_id) where cn.Codigo_clienteIBS = cnx.Codigo_clienteIBS )  ) as LINEA
			  from clientenomina cn
			  WHERE convert(varchar,cn.Fecha_envio_recepcion,112) = convert(varchar,@FECHA_ENVIOMAIL,112)
			  AND cn.Id_funcionario = @ID_FUNCIONARIO and ltrim(rtrim(cn.Tipo_proceso))='B'			  			  
			  group by Codigo_clienteIBS
			  

		FOR READ ONLY		  
		
		OPEN CURSOR_LINEA
		FETCH CURSOR_LINEA INTO @LINEA
		
		WHILE @@FETCH_STATUS = 0
		BEGIN	
			SET @LINEAS = @LINEAS + @LINEA
			FETCH CURSOR_LINEA INTO @LINEA
		END
	  close CURSOR_LINEA
	  deallocate CURSOR_LINEA		

	if ltrim(rtrim(@LINEAS)) <>''
	begin
	  --print @LINEAS
	   SET @BODY = REPLACE(@BODY,'@REGISTROS',@LINEAS)	  
	   SET @BODY =  @cuerpo_mensaje + '<BR /><BR />' + @BODY
	   
	   EXEC MSDB.DBO.SP_SEND_DBMAIL                   
	   @RECIPIENTS=@EMAIL_FUNCIONARIO,                  
	   @COPY_RECIPIENTS = '',    
	   @BLIND_COPY_RECIPIENTS='',                  
	   @PROFILE_NAME = 'Convenios',                  
	   @SUBJECT =@asunto_mensaje,                  
	   @BODY = @BODY,                  
	   @BODY_FORMAT = 'HTML'     	  
	   --print @BODY
	      
		--update dbo.clientenomina set clientenomina.fecha_envioFuncionario=getdate() 
		--WHERE convert(varchar,clientenomina.Fecha_envio_recepcion,112) = convert(varchar,@FECHA_ENVIOMAIL,112)
		--AND clientenomina.Id_funcionario = @ID_FUNCIONARIO and ltrim(rtrim(clientenomina.Tipo_proceso))='B'
		--and clientenomina.Nomina_id in (select Max(cn.Nomina_id) from clientenomina cn where cn.codigo_proceso = clientenomina.codigo_proceso
		--and convert(varchar,cn.Fecha_envio_recepcion,112) = convert(varchar,@FECHA_ENVIOMAIL,112)
		--AND cn.Id_funcionario = @ID_FUNCIONARIO and ltrim(rtrim(cn.Tipo_proceso))='B')  	   

		update dbo.clientenomina set clientenomina.fecha_envioFuncionario=getdate() 
		WHERE convert(varchar,clientenomina.Fecha_envio_recepcion,112) = convert(varchar,@FECHA_ENVIOMAIL,112)
		AND clientenomina.Id_funcionario = @ID_FUNCIONARIO and ltrim(rtrim(clientenomina.Tipo_proceso))='B'
		and clientenomina.Nomina_id in (select Max(cn.Nomina_id) from clientenomina cn where cn.Codigo_clienteIBS = clientenomina.Codigo_clienteIBS
		and convert(varchar,cn.Fecha_envio_recepcion,112) = convert(varchar,@FECHA_ENVIOMAIL,112)
		AND cn.Id_funcionario = @ID_FUNCIONARIO and ltrim(rtrim(cn.Tipo_proceso))='B')  	   	   	   
	   	   
	end
	  
	 SET @BODY = '<H1>Reporte de Generación Automatica</H1><TABLE BORDER="1"><TR><TD><Strong>Empresa</Strong></TD><TD><Strong>Nro. clientes</Strong></TD><TD><Strong>Monto soles</Strong></TD><TD><Strong>Monto dolares</Strong></TD></TR>@REGISTROS</TABLE>'
	 SET @LINEAS = ''	  
	  
	 FETCH CURSOR_FUNCIONARIO INTO @ID_FUNCIONARIO,@EMAIL_FUNCIONARIO
	END
  close CURSOR_FUNCIONARIO
  deallocate CURSOR_FUNCIONARIO
  
end
  
GO
/****** Object:  StoredProcedure [dbo].[ss_envio_aviso_vencimiento_pago]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[ss_envio_aviso_vencimiento_pago]                        
/*                        
Autor: Christian Rivera                        
Fecha: 05-06-2014                        
Motivo: EA 273-Mejoras convenios                        
Descripcion: Envía los avisos de vencimiento de pago a los coordinadores de las empresas via e-mail                        
*/                        
as                        
                        
declare @dias_despues_vencimiento_cuota tinyint                        
declare @asunto_mensaje varchar(250)                        
declare @cuerpo_mensaje varchar(2500)                        
declare @nombre_cliente varchar(200)                        
declare @fecha_pago varchar(10)                         
declare @cuenta_abono_soles decimal(12,0)                        
declare @cuenta_abono_dolares decimal(12,0)                        
declare @nombre_funcionario_convenios varchar(125)                        
declare @email_funcionario_convenios varchar(50)                        
declare @anexo_funcionario_convenios varchar(11)                        
declare @email_coordinador varchar(4000)                        
DECLARE @subject varchar(250)                        
DECLARE @body varchar(2500)                        
declare @codigo_IBS int                        
declare @id_aviso smallint                        
declare @fecha_proceso datetime                
                        
set nocount on                        
                        
set @id_aviso = 2 --vencimiento de pago                        
set @fecha_proceso = getdate()  --fecha de ejecucion del proceso                 
                        
--obtenemos los parametros de aviso de vencimiento de pago                        
select  @dias_despues_vencimiento_cuota = dias_despues_vencimiento_cuota,                          
  @asunto_mensaje = asunto_mensaje,                        
  @cuerpo_mensaje = cuerpo_mensaje                        
from aviso                         
where id_aviso = @id_aviso and estado_aviso = 1           
          
--insertamos los registros de la dlcre en una tabla temporal          
select * into #dlcre from dlcre          
          
--retiramos los registros de empresas que tienen mas de una fecha de pago (para evitar duplicidad)           
delete #dlcre          
from #dlcre a,          
 (select r.dlccc, r.dldpg, count(*) as cant           
 from (select distinct dlccc, dldpg from #dlcre) r           
 group by r.dlccc, r.dldpg           
 having count(*) > 1) b          
where a.dlccc = b.dlccc          
          
--retiramos los registros de empresas que tienen mas de una cuenta de cargo por moneda (para evitar duplicidad)          
delete #dlcre          
from #dlcre a,           
 (select r.dlccc, r.dlccy, count(*) as cant          
 from (select distinct dlccc, dlcta, dlccy from #dlcre) r           
 group by r.dlccc, r.dlccy           
 having count(*) > 1) b          
where a.dlccc = b.dlccc          
          
--creamos tabla temporal con los datos dia de pago y cuenta de cargo por empresa          
create table #cliente          
 (          
 dlccc decimal(9, 0),           
     dldpg decimal(2, 0),           
  dlcta_soles decimal(12, 0),           
  dlcta_dolares decimal(12, 0)          
 )          
          
insert into #cliente (dlccc, dldpg)          
select distinct dlccc, dldpg from #dlcre          
          
--actualizamos para cuenta de cargo en soles          
update #cliente          
set dlcta_soles = b.dlcta          
from #cliente a, (select distinct dlccc, dlcta, dlccy, dldpg from #dlcre) b          
where a.dlccc = b.dlccc and          
  b.dlccy = 'SOL'          
          
--actualizamos para cuenta de cargo en dolares          
update #cliente          
set dlcta_dolares = b.dlcta          
from #cliente a, (select distinct dlccc, dlcta, dlccy, dldpg from #dlcre) b          
where a.dlccc = b.dlccc and          
  b.dlccy = 'USD'                       
                        
--cursor para el envio de aviso de vencimiento de pago via e-mail                        
 DECLARE CURSOR_VENCIMIENTO_PAGO CURSOR FOR (                                
    select ltrim(rtrim(a.nombre_cliente)) as nombre_cliente,                          
  convert(varchar(10), dateadd(day, -@dias_despues_vencimiento_cuota, @fecha_proceso) ,103) as fecha_pago,                
  ltrim(rtrim(isnull(b.dlcta_soles,0))) as cuenta_abono_soles,           
  ltrim(rtrim(isnull(b.dlcta_dolares,0))) as cuenta_abono_dolares,          
  ltrim(rtrim(d.nombre_funcionario)) as nombre_funcionario_convenios,                        
  ltrim(rtrim(d.email_funcionario)) as email_funcionario_convenios,                        
  ltrim(rtrim(d.telefono_funcionario)) as anexo_funcionario_convenios,                        
  ltrim(rtrim(dbo.fn_ObtenerCorreoCoordinadoresxCliente(a.codigo_cliente))) as email_coordinador,                
  ltrim(rtrim(a.codigo_IBS)) as codigo_IBS                        
    from cliente a join dlemp c      
      on a.codigo_ibs = c.dlecun      
     join #cliente b                        
      on b.dlccc = c.dlecun and                             
       day(dateadd(day, -@dias_despues_vencimiento_cuota, @fecha_proceso)) = c.dledpa and          
       exists (select * from dlcre, dlpmt where dlcre.dlacc = dlpmt.dlpacc and dlcre.dlccc = b.dlccc) --creditos morosos      
     join funcionario_convenios d                        
      on a.id_funcionario = d.id_funcionario)      
                        
 OPEN CURSOR_VENCIMIENTO_PAGO                                
 FETCH NEXT FROM CURSOR_VENCIMIENTO_PAGO INTO @nombre_cliente, @fecha_pago, @cuenta_abono_soles, @cuenta_abono_dolares, @nombre_funcionario_convenios,                         
     @email_funcionario_convenios, @anexo_funcionario_convenios, @email_coordinador, @codigo_IBS                        
 WHILE @@FETCH_STATUS = 0                                
 BEGIN                          
  set @subject = replace(@asunto_mensaje, '[Nombre_Empresa]', @nombre_cliente)                        
  set @body = replace(@cuerpo_mensaje, '[Nombre_Empresa]', @nombre_cliente)                          
  set @body = replace(@body, '[Cuenta_Abono]', (case when @cuenta_abono_soles <> 0 and @cuenta_abono_dolares = 0 then 'en Soles es ' + ltrim(rtrim(str(@cuenta_abono_soles))) when @cuenta_abono_soles = 0 and @cuenta_abono_dolares <> 0 then 'en Dólares es ' + ltrim(rtrim(str(@cuenta_abono_dolares))) else 'en Soles es ' + ltrim(rtrim(str(@cuenta_abono_soles))) + '. La cuenta en Dólares es ' + ltrim(rtrim(str(@cuenta_abono_dolares))) end))                          
  set @body = replace(@body, '[Nombre_Funcionario_Convenios]', @nombre_funcionario_convenios)                        
  set @body = replace(@body, '[Email_Funcionario_Convenios]', @email_funcionario_convenios)                        
  set @body = replace(@body, '[Anexo_Funcionario_Convenios]', @anexo_funcionario_convenios)                        
                       
  --envia el aviso                    
   EXEC MSDB.DBO.SP_SEND_DBMAIL                                 
   @RECIPIENTS=@email_coordinador,                                
   @COPY_RECIPIENTS = @email_funcionario_convenios,                  
   @BLIND_COPY_RECIPIENTS='',                                
   @PROFILE_NAME = 'Convenios',                                
   @SUBJECT =@subject,                                
   @BODY = @body,                                
   @BODY_FORMAT = 'HTML'                                 
                                
   exec dbo.ins_log_ejecucion_aviso @id_aviso, @codigo_IBS, @email_coordinador                        
                        
   FETCH NEXT FROM CURSOR_VENCIMIENTO_PAGO INTO @nombre_cliente, @fecha_pago, @cuenta_abono_soles, @cuenta_abono_dolares, @nombre_funcionario_convenios,                         
     @email_funcionario_convenios, @anexo_funcionario_convenios, @email_coordinador, @codigo_IBS                        
 END                             
 CLOSE CURSOR_VENCIMIENTO_PAGO                        
 DEALLOCATE CURSOR_VENCIMIENTO_PAGO           
          
 drop table #cliente          
 drop table #dlcre
GO
/****** Object:  StoredProcedure [dbo].[ss_envio_resumen_carga_pagos]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[ss_envio_resumen_carga_pagos]            
/*                      
Autor: Christian Rivera                      
Fecha: 21-07-2014                      
Motivo: EA 273-Mejoras convenios                      
Descripcion: Envía a los funcionarios el resumen de la carga de los pagos enviados por las empresas            
*/                      
as                      
                      
declare @id_funcionario int            
declare @email_funcionario varchar(50)            
DECLARE @tableHTML  NVARCHAR(MAX)            
            
set nocount on                      
            
--cursor para obtener la lista de funcionarios de convenio activos            
 DECLARE FUNCIONARIO_CONVENIOS CURSOR FOR (            
 select id_funcionario, email_funcionario            
 from funcionario_convenios             
 where estado_funcionario = 1)            
 OPEN FUNCIONARIO_CONVENIOS            
 FETCH NEXT FROM FUNCIONARIO_CONVENIOS INTO @id_funcionario, @email_funcionario            
 WHILE @@FETCH_STATUS = 0                              
 BEGIN                        
            
 IF EXISTS (select * from ClienteNomina a join proceso b            
           on a.codigo_proceso = b.codigo_proceso            
          join cliente c            
           on b.codigo_cliente = c.codigo_cliente and            
            c.id_funcionario = @id_funcionario            
    where a.tipo_nomina = 'R' and             
     a.tipo_formato = 'N' and             
     a.tipo_proceso = 'B' and            
     convert(char(8),a.fecha_envio_recepcion,112) = convert(char(8),getdate(),112) and            
     a.fecha_enviofuncionario is null)          
 BEGIN           
  --armamos el cuerpo del mensaje            
  SET @tableHTML =            
   N'<H1>Resumen Carga Pagos Convenios</H1>' +            
   N'<table border="1">' +            
   N'<tr><th>Empresa</th><th>Total Aplicados</th>' +            
   N'<th>Total Procesados</th><th>Total Rechazados</th></tr>' +            
   CAST ( ( select td = a.nombre_empresa, '',            
    td = (a.cantidad_registros_ok + a.cantidad_registros_ko), '',            
    td = a.cantidad_registros_ok, '',            
    td = a.cantidad_registros_ko                  
  from ClienteNomina a join proceso b            
     on a.codigo_proceso = b.codigo_proceso            
   join cliente c            
     on b.codigo_cliente = c.codigo_cliente and            
    c.id_funcionario = @id_funcionario            
  where a.tipo_nomina = 'R' and             
   a.tipo_formato = 'N' and             
   a.tipo_proceso = 'B' and            
   convert(char(8),a.fecha_envio_recepcion,112) = convert(char(8),getdate(),112) and            
   a.fecha_enviofuncionario is null            
    FOR XML PATH('tr'), TYPE             
   ) AS NVARCHAR(MAX) ) +            
   N'</table>' ;              
             
  --envia el mensaje                  
  EXEC MSDB.DBO.SP_SEND_DBMAIL                               
  @RECIPIENTS=@email_funcionario,            
  @BLIND_COPY_RECIPIENTS='',                              
  @PROFILE_NAME = 'Convenios',                              
  @SUBJECT ='ENVIO REPORTE DE CARGA AUTOMÁTICA DE CONVENIOS',                              
  @BODY = @tableHTML,                              
  @BODY_FORMAT = 'HTML'             
             
  --actualizamos funcionario y fecha de envio            
  update ClienteNomina            
    set id_funcionario = @id_funcionario,             
    fecha_enviofuncionario = getdate()            
   from ClienteNomina a join proceso b            
   on a.codigo_proceso = b.codigo_proceso            
    join cliente c            
   on b.codigo_cliente = c.codigo_cliente and            
     c.id_funcionario = @id_funcionario            
   where a.tipo_nomina = 'R' and             
    a.tipo_formato = 'N' and             
    a.tipo_proceso = 'B' and            
    convert(char(8),a.fecha_envio_recepcion,112) = convert(char(8),getdate(),112) and            
    a.fecha_enviofuncionario is null      
 END          
 FETCH NEXT FROM FUNCIONARIO_CONVENIOS INTO @id_funcionario, @email_funcionario            
 END                           
 CLOSE FUNCIONARIO_CONVENIOS      
 DEALLOCATE FUNCIONARIO_CONVENIOS 
GO
/****** Object:  StoredProcedure [dbo].[SystemParametersEliminar]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[SystemParametersEliminar]
(
	@iGrupoId	INT,
	@iParametroId INT,
	@iEstado INT,
	@vUsuarioModificacion VARCHAR(50)
)
AS
BEGIN

DECLARE @L_ACCION NVARCHAR(80)
DECLARE @L_MENSAJE NVARCHAR(500)

	IF @iGrupoId = 0
		BEGIN

			SET @L_ACCION = 'Eliminar Padre Mantenimiento'

			UPDATE dbo.SystemParameters
				SET  iEstado = @iEstado
					,vUsuarioModificacion = @vUsuarioModificacion
					,dFechaModificacion = GETDATE()
			WHERE	iGrupoId = 0 AND
					iParametroId = @iParametroId

			SET @L_MENSAJE = 'iParametroId=' + CAST(@iParametroId AS VARCHAR(20)) + '|iEstado;1?' + CAST(@iEstado AS VARCHAR(2))

		END
	ELSE
		BEGIN

			SET @L_ACCION = 'Eliminar Hijo Mantenimiento'

			UPDATE dbo.SystemParameters
				SET  iEstado = @iEstado
					,vUsuarioModificacion = @vUsuarioModificacion
					,dFechaModificacion = GETDATE()
			WHERE	iGrupoId = @iGrupoId AND
					iParametroId = @iParametroId


			SET @L_MENSAJE = 'iGrupoId=' + CAST(@iGrupoId AS VARCHAR(20)) + ',iParametroId=' + CAST(@iParametroId AS VARCHAR(20)) + '|iEstado;1?' + CAST(@iEstado AS VARCHAR(2))

		END

	--LOG
	INSERT INTO EventoSistema VALUES (GETDATE(), 'BIFConvenios', 'Info', @L_ACCION, @L_MENSAJE, '', @vUsuarioModificacion)
	
END

GO
/****** Object:  StoredProcedure [dbo].[SystemParametersInsert]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*06 System Parameters*/

CREATE OR ALTER PROCEDURE [dbo].[SystemParametersInsert]
(
	@iGrupoId		INT,
	@iParametroId	INT,
	@vDescripcion	VARCHAR(500),
	@vValor			VARCHAR(100),
	@iOrden			INT,
	@iVisible		INT,
	@dFechaInicio	DATETIME,
	@dFechaFin		DATETIME,
	@iEstado		INT,
	@vUsuario		VARCHAR(50)
)
AS
BEGIN
	INSERT INTO [dbo].[SystemParameters]
	(
		iGrupoId,
		iParametroId,
		vDescripcion,
		vValor,
		iOrden,
		iVisible,
		dFechaInicio,
		dFechaFin,
		iEstado,
		vUsuarioCreacion,
		dFechaCreacion
	)
	VALUES
	(
		@iGrupoId,
		@iParametroId,
		@vDescripcion,
		@vValor,
		@iOrden,
		@iVisible,
		@dFechaInicio,
		@dFechaFin,
		@iEstado,
		@vUsuario,
		GETDATE()
	)
END

GO
/****** Object:  StoredProcedure [dbo].[SystemParametersInsertar]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[SystemParametersInsertar]
(
	@iGrupoId	INT,
	@iParametroId INT = NULL,
	@vDescripcion VARCHAR(500),
	@vValor VARCHAR(max),
	@iOrden INT,
	@iVisible INT = NULL,
	@dFechaInicio DATETIME = NULL,
	@dFechaFin DATETIME = NULL,
	@iEstado INT,
	@vUsuarioCreacion VARCHAR(50)
)
AS
BEGIN

DECLARE @L_ACCION NVARCHAR(80)
DECLARE @L_MENSAJE NVARCHAR(500)

SET @iOrden = ISNULL((SELECT MAX(iOrden) FROM SystemParameters WHERE iGrupoId = @iGrupoId), 0) + 1

	IF @iGrupoId = 0
		BEGIN

			SET @L_ACCION = 'Insertar Padre Mantenimiento'
			SET @iParametroId = (SELECT MAX(iParametroId) FROM SystemParameters WHERE iGrupoId = @iGrupoId) + 1
			SET @L_MENSAJE = 'iParametroId=' + CAST(@iParametroId AS VARCHAR(20)) + '|vDescripcion;' + @vDescripcion + ',vValor;' + @vValor + ',iOrden;' + CAST(@iOrden AS VARCHAR(10))
		END
	ELSE
		BEGIN

			SET @L_ACCION = 'Insertar Hijo Mantenimiento'
			SET @iParametroId = ((SELECT COUNT(iParametroId) FROM SystemParameters WHERE iGrupoId = @iGrupoId) + 1) * (@iGrupoId * 100)
			SET @L_MENSAJE = 'iGrupoId=' + CAST(@iGrupoId AS VARCHAR(20)) + ',iParametroId=' + CAST(@iParametroId AS VARCHAR(20)) + '|vDescripcion;' + @vDescripcion + ',vValor;' + @vValor + ',iOrden;' + CAST(@iOrden AS VARCHAR(10)) + ',iVisible;' + CAST(ISNULL(@iVisible, '') AS VARCHAR(5)) + ',dFechaInicio;' + CAST(ISNULL(@dFechaInicio, '') AS VARCHAR(12)) + ',dFechaFin;' + CAST(ISNULL(@dFechaFin, '') AS VARCHAR(12))
		END

	

	INSERT INTO [dbo].[SystemParameters]
			   ([iGrupoId]
			   ,[iParametroId]
			   ,[vDescripcion]
			   ,[vValor]
			   ,[iOrden]
			   ,[iVisible]
			   ,[dFechaInicio]
			   ,[dFechaFin]
			   ,[iEstado]
			   ,[vUsuarioCreacion]
			   ,[dFechaCreacion]
			   ,[vUsuarioModificacion]
			   ,[dFechaModificacion])
		 VALUES
			   (@iGrupoId
			   ,@iParametroId
			   ,@vDescripcion
			   ,@vValor
			   ,@iOrden
			   ,1
			   ,@dFechaInicio
			   ,@dFechaFin
			   ,@iEstado
			   ,@vUsuarioCreacion
			   ,GETDATE()
			   ,NULL
			   ,NULL)


	--LOG
	INSERT INTO EventoSistema VALUES (GETDATE(), 'BIFConvenios', 'Info', @L_ACCION, @L_MENSAJE, '', @vUsuarioCreacion)

END

GO
/****** Object:  StoredProcedure [dbo].[SystemParametersListar]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[SystemParametersListar]
( 
	@iGrupoId	INT,
	@iParametroId INT = NULL,
	@vDescripcion VARCHAR(max),
	@iVisible INT = NULL,
	@iEstado INT
)
AS
BEGIN

IF @iGrupoId = 0
	BEGIN

		--PADRE
		SELECT	 ROW_NUMBER() OVER(ORDER BY PAD.iGrupoId, PAD.iParametroId, PAD.iOrden ASC) AS Correlativo
				,PAD.iGrupoId
				,PAD.iParametroId
				,PAD.vDescripcion
				,PAD.vValor
				,PAD.iOrden
				,PAD.iEstado
				,EST.vDescripcion AS NombreEstado
				,COUNT(HIJ.iGrupoId) NUM_HIJOS
		FROM SystemParameters PAD
		LEFT JOIN SystemParameters HIJ ON
			HIJ.iGrupoId = PAD.iParametroId
		LEFT JOIN SystemParameters EST ON
			EST.iGrupoId = 13 AND
			EST.vValor = PAD.iEstado
		WHERE	PAD.iGrupoId = 0 AND
				PAD.vDescripcion LIKE ('%' + @vDescripcion + '%') AND
				PAD.iEstado = CASE WHEN @iEstado = -1 THEN PAD.iEstado ELSE @iEstado END
		GROUP BY PAD.iGrupoId, PAD.iParametroId, PAD.vDescripcion, PAD.vValor, PAD.iOrden, PAD.iEstado, EST.vDescripcion
		ORDER BY PAD.iGrupoId, PAD.iParametroId, PAD.iOrden ASC

	END
ELSE
	BEGIN

		--HIJO
		SELECT	 ROW_NUMBER() OVER(ORDER BY P.iGrupoId, P.iParametroId, P.iOrden ASC) AS Correlativo
				,P.iGrupoId
				,P.iParametroId
				,P.vDescripcion
				,P.vValor
				,P.iOrden
				,P.iVisible
				,VIS.vDescripcion AS NombreVisible
				,P.dFechaInicio
				,P.dFechaFin
				,P.iEstado
				,EST.vDescripcion AS NombreEstado
				,P.vUsuarioCreacion
				,P.dFechaCreacion
				,P.vUsuarioCreacion
				,P.dFechaModificacion
		FROM SystemParameters P
		LEFT JOIN SystemParameters EST ON
			EST.iGrupoId = 13 AND
			EST.vValor = P.iEstado
		LEFT JOIN SystemParameters VIS ON
			VIS.iGrupoId = 12 AND
			VIS.vValor = P.iVisible
		WHERE	P.iGrupoId > 0 AND
				P.iGrupoId = @iGrupoId AND
				P.vDescripcion LIKE ('%' + @vDescripcion + '%') AND
				P.iVisible = CASE WHEN @iVisible = -1 THEN P.iVisible ELSE @iVisible END AND
				P.iEstado = CASE WHEN @iEstado = -1 THEN P.iEstado ELSE @iEstado END
		ORDER BY P.iGrupoId, P.iParametroId, P.iOrden ASC

	END
	
END

GO
/****** Object:  StoredProcedure [dbo].[SystemParametersModificar]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[SystemParametersModificar]
(
	@iGrupoId	INT,
	@iParametroId INT,
	@vDescripcion VARCHAR(500),
	@vValor VARCHAR(max),
	@iOrden INT,
	@iVisible INT = NULL,
	@dFechaInicio DATETIME = NULL,
	@dFechaFin DATETIME = NULL,
	@iEstado INT,
	@vDescripcionO VARCHAR(500),
	@vValorO VARCHAR(500),
	@iOrdenO INT,
	@iVisibleO INT = NULL,
	@dFechaInicioO DATETIME = NULL,
	@dFechaFinO DATETIME = NULL,
	@iEstadoO INT,

	@vUsuarioModificacion VARCHAR(50)
)
AS
BEGIN

DECLARE @L_ACCION NVARCHAR(80)
DECLARE @L_MENSAJE NVARCHAR(500)

	IF @iGrupoId = 0
		BEGIN

			SET @L_ACCION = 'Actualizar Padre Mantenimiento'
			UPDATE dbo.SystemParameters
				SET  vDescripcion = @vDescripcion
					,vValor = @vValor
					,iOrden = @iOrden
					,iEstado = @iEstado
					,vUsuarioModificacion = @vUsuarioModificacion
					,dFechaModificacion = GETDATE()
			WHERE	iGrupoId = @iGrupoId AND
					iParametroId = @iParametroId

			SET @L_MENSAJE = 'iParametroId=' + CAST(@iParametroId AS VARCHAR(20)) + '|vDescripcion;' + @vDescripcion + '?' + @vDescripcionO + ',vValor;' + @vValor + '?' + @vValorO + ',iOrden;' + CAST(@iOrden AS VARCHAR(10)) + '?' + CAST(@iOrdenO AS VARCHAR(10))
		END
	ELSE
		BEGIN

			SET @L_ACCION = 'Actualizar Hijo Mantenimiento'
			UPDATE dbo.SystemParameters
				SET  vDescripcion = @vDescripcion
					,vValor = @vValor
					,iOrden = @iOrden
					,iVisible = @iVisible
					,dFechaInicio = @dFechaInicio
					,dFechaFin = @dFechaFin
					,iEstado = @iEstado
					,vUsuarioModificacion = @vUsuarioModificacion
					,dFechaModificacion = GETDATE()
			WHERE	iGrupoId = @iGrupoId AND
					iParametroId = @iParametroId

			SET @L_MENSAJE = 'iGrupoId=' + CAST(@iGrupoId AS VARCHAR(20)) + ',iParametroId=' + CAST(@iParametroId AS VARCHAR(20)) + '|vDescripcion;' + @vDescripcion + '?' + @vDescripcionO + ',vValor;' + @vValor + '?' + @vValorO + ',iOrden;' + CAST(@iOrden AS VARCHAR(10)) + '?' + CAST(@iOrdenO AS VARCHAR(10)) + ',iVisible;' + CAST(ISNULL(@iVisible, '') AS VARCHAR(5)) + '?' + CAST(ISNULL(@iVisibleO, '') AS VARCHAR(5)) + ',dFechaInicio;' + CAST(ISNULL(@dFechaInicio, '') AS VARCHAR(12)) + '?' + CAST(ISNULL(@dFechaInicioO, '') AS VARCHAR(12)) + ',dFechaFin;' + CAST(ISNULL(@dFechaFin, '') AS VARCHAR(12)) + '?' + CAST(ISNULL(@dFechaFinO, '') AS VARCHAR(12))

		END

	--LOG
	INSERT INTO EventoSistema VALUES (GETDATE(), 'BIFConvenios', 'Info', @L_ACCION, @L_MENSAJE, '', @vUsuarioModificacion)

	
END

GO
/****** Object:  StoredProcedure [dbo].[SystemParametersSelect]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/* Pruebas Unitarias*/

-- EXEC [dbo].[SystemParametersSelectGrupo]

CREATE OR ALTER PROCEDURE [dbo].[SystemParametersSelect]
(
	@iGrupoId	INT
)
AS
BEGIN
	SELECT
			iGrupoId,
			iParametroId,
			vDescripcion,
			vValor,
			iOrden,
			iVisible,
			dFechaInicio,
			dFechaFin,
			iEstado
	FROM [dbo].[SystemParameters]
	WHERE
			iGrupoId = @iGrupoId
		AND iVisible = 1
	ORDER BY iGrupoId, iParametroId, iOrden ASC
END

GO
/****** Object:  StoredProcedure [dbo].[SystemParametersSelectGrupo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[SystemParametersSelectGrupo]
AS
BEGIN
	SELECT
			iGrupoId,
			iParametroId,
			vDescripcion,
			vValor,
			iOrden,
			iVisible,
			dFechaInicio,
			dFechaFin,
			iEstado
	FROM [dbo].[SystemParameters]
	WHERE
			iGrupoId = 0
		AND iVisible = 1
	ORDER BY iGrupoId, iParametroId, iOrden ASC
END

GO
/****** Object:  StoredProcedure [dbo].[up_ActualizaFechaEnvioNomina]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*            
Autor: Noel Callapiña  
Fecha: 03/09/2014
Motivo: EA 273-Mejoras convenios            
Descripcion: Actualiza Fecha de Envio de la Nomina
*/  
CREATE OR ALTER PROCEDURE [dbo].[up_ActualizaFechaEnvioNomina]
	@codigo_proceso varchar(255),
	@Retorno_out bit output     
as  
begin try
	/*
		0. Variables de Log
	*/
	declare @usuario as varchar(10)
	declare @mensaje as varchar(1000)
	declare @accion as varchar(255)
	declare @nivel as varchar(50)
	declare @hilo as varchar(255)
	declare @excepcion as varchar(4000)

	set @usuario = 'batch'
	set @Retorno_out = 0
	set @mensaje = 'Inicio del Proceso Actualiza Fecha Envio Nomina: @id_proceso='  + @codigo_proceso
	set @accion = 'EnvioMasivoCorreos'
	set @nivel = 'Info'
	set @hilo = 'BIFConvenios'
	set @excepcion = ''

	/*
		0.1 Variables de soporte
	*/
	declare @tipo_proceso char(1)
	declare @tipo_nomina char(1)

	set @tipo_proceso = 'B'
	set @tipo_nomina = 'E'

	/*
		0.2. Registrar log Inicio Proceso
	*/
		exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

	/*
		1. Ejecutar Proceso Masivo de Envio de correos.
	*/

	update clientenomina set Fecha_envio_recepcion = (select Fecha_EnvioEmail from proceso where codigo_proceso=@codigo_proceso)
		where nomina_id = (select max(nomina_id) from clientenomina 
							where tipo_proceso = @tipo_proceso and tipo_nomina=@tipo_nomina 
							and codigo_proceso = @codigo_proceso)



	/*
		4. Registrar log Fin Proceso
	*/
	set @mensaje = 'Fin del Proceso Actualiza Fecha Envio Nomina'
	--Ejecucion
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
	
	set @Retorno_out = 1

end try
begin catch
	set @Retorno_out = 0
	
	/*
		Registro Log 
	*/
	select @mensaje = dbo.uf_GetErrorInfo() + ', pCodigo_proceso='  + @codigo_proceso
	set @nivel = 'Error'
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
end catch

/*
	PRUEBAS UNITARIAS
	*****************
*/
/*

/*
drop procedure up_ActualizaFechaEnvioNomina
*/

declare @Retorno  as bit
exec up_ActualizaFechaEnvioNomina '07192C3C-E54C-405C-9906-24A5A7DEDD84', @Retorno OUTPUT
select convert(char(1), @Retorno) as retorno

*/
GO
/****** Object:  StoredProcedure [dbo].[up_ActualizaProcesoEnvioMasivo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[up_ActualizaProcesoEnvioMasivo]
	@id_proceso int,
	@NombrePaso nvarchar(6),
	@valor bit,
	@mensaje nvarchar(200)
as 
begin

	declare @sql nvarchar(400)
	declare @definicion nvarchar(400)

	set @sql = N'update dbo.em_proceso set '+@NombrePaso+ N'=@vvalor,fecha'+@NombrePaso+ N'=getdate(),mensaje=@vmensaje where id_proceso=@vid_proceso'
	set @definicion = N'@vvalor bit,@vmensaje nvarchar(200),@vid_proceso int'
	
	execute sp_executesql @sql, @definicion, @vvalor=@valor, @vmensaje=@mensaje, @vid_proceso=@id_proceso 

end

/*
	PRUEBAS UNITARIAS
	*****************
*/
/*
	sp_help em_proceso
	drop procedure dbo.up_ActualizaProcesoEnvioMasivo

	declare @ret int 
	exec dbo.up_CrearProcesoEnvioMasivo @ret
	print convert(varchar(10), @ret)

	select * from em_proceso

	exec dbo.up_ActualizaProcesoEnvioMasivo @id_proceso=1,@NombrePaso='paso1',@valor=1
	exec dbo.up_ActualizaProcesoEnvioMasivo 1,N'paso5',1, N'prueba5'
*/

GO
/****** Object:  StoredProcedure [dbo].[up_ActualizaProcesoEstadisticas]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*          
	Autor: Noel Callapiña
	Fecha: 16/07/2014       
	Motivo: EA 273-Mejoras convenios          
	Descripcion: Actualiza estadisticas del proceso de envios mails masivo.
*/ 
CREATE OR ALTER PROCEDURE [dbo].[up_ActualizaProcesoEstadisticas]
	@id_proceso int,
	@total int,
	@procesados int,
	@errores int,
	@tipo smallint
as 
begin
	set nocount on
	
	if @tipo = 1
	begin 
		update em_proceso set 
			impTotal = @total,	impProcesados = @procesados , impErrores = @errores
		where id_proceso = @id_proceso
	end
	else if @tipo = 2
	begin
		update em_proceso set 
			EnvTotal = @total,	EnvProcesados = @procesados , EnvErrores = @errores
		where id_proceso = @id_proceso
	end

	set nocount off
end

/*
	PRUEBAS UNITARIAS
	*****************
*/
/*
	sp_help em_proceso
	drop procedure dbo.up_ActualizaProcesoEstadisticas

	declare @ret int 
	exec dbo.up_ActualizaProcesoEstadisticas @ret
	print convert(varchar(10), @ret)

	select * from em_proceso

	exec dbo.up_ActualizaProcesoEnvioMasivo @id_proceso=1,@NombrePaso='paso1',@valor=1
	exec dbo.up_ActualizaProcesoEnvioMasivo 1,N'paso5',1, N'prueba5'
*/

GO
/****** Object:  StoredProcedure [dbo].[up_CrearProcesoEnvioMasivo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[up_CrearProcesoEnvioMasivo]
	@id_proceso_out int output
as 
begin

	insert into em_proceso (fechaProceso,paso1,paso2,paso3,paso4,paso5)
		values (getdate(),0,0,0,0,0)
	
	select @id_proceso_out = @@identity

end
/*
	sp_help em_proceso
	drop procedure dbo.up_CrearProcesoEnvioMasivo
	DBCC CHECKIDENT('em_proceso', RESEED, 0)
	delete from em_proceso
/*
	PRUEBAS UNITARIAS
	*****************
*/
	declare @ret int 
	exec dbo.up_CrearProcesoEnvioMasivo @ret
	print convert(varchar(10), @ret)

	select * from em_proceso
*/
GO
/****** Object:  StoredProcedure [dbo].[up_EnviarCorreoMasivo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*            
Autor: Noel Callapiña  
Fecha: 16/07/2014         
Motivo: EA 273-Mejoras convenios            
Descripcion: Enviar correos de forma masiva.
*/  
CREATE OR ALTER PROCEDURE [dbo].[up_EnviarCorreoMasivo]         
	@id_proceso int,
	@Retorno_out bit output     
as  
begin try
	/*
		0. Variables de Log
	*/
	declare @usuario as varchar(10)
	declare @mensaje as varchar(1000)
	declare @accion as varchar(255)
	declare @nivel as varchar(50)
	declare @hilo as varchar(255)
	declare @excepcion as varchar(4000)

	set @usuario = 'batch'
	set @Retorno_out = 0
	set @mensaje = 'Inicio del Proceso Masivo Envio Correos: @id_proceso='  + convert(varchar(10),@id_proceso)
	set @accion = 'EnvioMasivoCorreos'
	set @nivel = 'Info'
	set @hilo = 'BIFConvenios'
	set @excepcion = ''
	/*
		0.1 Variables Estadisticas
	*/
	declare @procesados as int
	declare @errores as int
	declare @total as int

	set @procesados = 0
	set @errores = 0
	select @total = count(1) from em_ListadoCuotas where id_proceso = @id_proceso

	/*
		0.2 Variables de Soporte al Proceso
	*/
	declare @id as int
	declare @ret as bit	--Var retorno proceso individual
	declare @codigo_clienteIBS as numeric(18,0)
	declare @anio as varchar(4)
	declare @mes as varchar(2)
	declare @fecha_proceso as varchar(8)
	declare @codigo_cliente as numeric(9,0)
	declare @empresa as varchar(50)
	declare @codigo_proceso as varchar(255)

	declare @nombre_funcionario as varchar(100)
	declare @email_funcionario as varchar(100)
	declare @telefono_funcionario as varchar(50)

	set @ret = 0
	select @id = min(id) from em_listadoCuotas where id_proceso = @id_proceso and fechaAct_envio_mail is null
	set @codigo_proceso = ''
	
	/*
		0.3 Variables de Soporte al Correo
	*/
	declare @asunto_plantilla as varchar(250)
	declare @cuerpo_plantilla as varchar(2500)
	declare @asunto varchar(250)
	declare @cuerpo varchar(2500)
	declare @para varchar(1000)
	declare @formato_cuerpo varchar(4)
	declare @nombre_profile varchar(9)
	declare @idAviso as int
	declare @archivo_adjunto as varchar(255)
	
	--inicializacion
	set @idAviso = 3	--CronogramaFuturo
	select @asunto_plantilla=asunto_mensaje, @cuerpo_plantilla=cuerpo_mensaje from aviso where id_aviso = @idAviso  
	set @asunto = ''
	set @cuerpo = ''
	set @para = ''
	set @formato_cuerpo='html'
	set @nombre_profile='convenios'
	set @archivo_adjunto=''

	/*
		0.4. Registrar log Inicio Proceso
	*/
		exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

	/*
		1. Ejecutar Proceso Masivo de Envio de correos.
	*/
	--Inicio Iteracion
	while (@id is not null)
	begin
		/*
			1.0 Inicializacion
		*/
			set @ret = 0

		/*
			1.1 Se obtiene informacion para el proceso ImportaPagareEmpresa
		*/
			select 
				   @codigo_clienteIBS=DLECC,
				   @anio=DLEAP,
				   @mes=DLEMP,
				   @fecha_proceso=DLEFP,
				   @codigo_cliente=CODIGO_CLIENTE,
				   @empresa = DLNCC,
				   @archivo_adjunto = ruta_archivo,
				   @codigo_proceso = codigo_proceso
			from em_listadoCuotas where id_proceso = @id_proceso and id = @id

		/*
			1.1. Obtener caracteristicas del correo
		*/
			
			/*
				Obtener Correos de coordinadores por cliente
			*/
			select @para = dbo.fn_ObtenerCorreoCoordinadoresxCliente(@codigo_cliente)	--declarar var

			/*
				Obtener información del funcionario
			*/
			select @nombre_funcionario=nombre_funcionario,@email_funcionario=email_funcionario, @telefono_funcionario=telefono_funcionario 
				from fObtenerFuncionario(@codigo_cliente)
			/*
				Formatea asunto y cuerpo
			*/
			set @asunto = replace(@asunto_plantilla,'[Nombre_Empresa]',@empresa)		--declarar var
			set @cuerpo = replace(@cuerpo_plantilla,'[Mes]',dbo.uf_ObtenerDescripcionMes(@mes))
			set @cuerpo = replace(@cuerpo,'[Nombre_Empresa]',@empresa)
			set @cuerpo = replace(@cuerpo,'[Anio]',@anio)
			set @cuerpo = replace(@cuerpo,'[Nombre_Funcionario_Convenios]',@nombre_funcionario)
			set @cuerpo = replace(@cuerpo,'[Email_Funcionario_Convenios]',@email_funcionario)
			set @cuerpo = replace(@cuerpo,'[Anexo_Funcionario_Convenios]',@telefono_funcionario)

		/*
			1.2. Ejecutar envio de mail
		*/
			exec msdb.dbo.SP_SEND_DBMAIL                     
				@recipients = @para,             
				@copy_recipients = '',      
				@blind_copy_recipients='',                    
				@profile_name = @nombre_profile,                    
				@subject =@asunto,                    
				@body = @cuerpo,                    
				@body_format = @formato_cuerpo,
				@file_attachments = @archivo_adjunto
			
			/*
				1.2.1 Control de errores
			*/
			if @@error = 0
			begin
				/*
					1. seteamos retorno exito.
				*/
				set @ret = 1

				/*
					2. actualizamos fecha envio
				*/
				exec ActualizaEnvioListadoMasivo @id_proceso, @id

				/*
					3. Actualizacion Envio en Tabla Proceso
				*/	
				if isnull(@codigo_proceso,'')<>''
				begin
					/*
						3.a Actualizacion fecha envio de proceso
					*/
					exec updatefechaobtencionarchivo @codigo_proceso, 1, @usuario 
					
					/*
						3.a.1 Validar si hubo Error
					*/

					if @@error <> 0 
					begin
						--Hubo error
						/*
							3.a.1 Registar Log Error
						*/
						set @mensaje = 'Error al Actualizar Fecha Envio Mail: @id_proceso='  + convert(varchar(10),@id_proceso) + ' @codigo_proceso=' + @codigo_proceso
						set @nivel = 'Error'
 						--Ejecucion
						exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

					end
					else
					begin
						--No hubo Error
						/*
							3.a.2 Registar Nomina
						*/
						exec up_ActualizaFechaEnvioNomina @codigo_proceso, @ret OUTPUT
						
						/*
							3.a.3 Evaluamos retorno
						*/
						if @ret = 0
						begin
							/*
								1. seteamos retorno exito.
							*/
							set @ret = 1

							/*
								2. Registrar en Log la no actualizacion
							*/
							--Inicializacion
							set @mensaje = 'Error al actualizar Fecha Envio Nomina @codigo_proceso=' + @codigo_proceso
							set @nivel = 'Error'
							--Ejecucion
							exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
						end

						
					end

					

				end
				else
				begin	
					/*
						3.b Registrar en Log la no actualizacion
					*/
					--Inicializacion
					set @mensaje = 'La fecha de envio de la empresa ' + @empresa + ' con id_proceso ' + convert(varchar(10),@id_proceso) + ' no fue actualizada correctamente en la table PROCESO.' 
					set @nivel = 'Info'
					--Ejecucion
					exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
				end
				
								
			end

		/*
			1.3 Actualiza Contadores
		*/
			if @ret = 1
				set @procesados = @procesados + 1
			if @ret = 0
				set @errores = @errores  + 1

		/*
			1.4 Obtener nuevo @id
		*/
			select @id = min(id) from em_listadoCuotas where id_proceso = @id_proceso and id > @id and fechaAct_envio_mail is null
	end
	
		

	/*
		3. Actualizar estadisticas.
	*/	
	exec up_ActualizaProcesoEstadisticas @id_proceso, @total, @procesados, @errores, 2

	/*
		4. Registrar log Fin Proceso
	*/
	set @mensaje = 'Fin del Proceso Masivo Envio Correos: @id_proceso='  + convert(varchar(10),@id_proceso)
	--Ejecucion
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
	
	set @Retorno_out = 1

end try
begin catch
	set @Retorno_out = 0
	
	/*
		Registro Log 
	*/
	select @mensaje = dbo.uf_GetErrorInfo() + ', pCodigo_proceso='  + @codigo_proceso
	set @nivel = 'Error'
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
end catch

/*
	PRUEBAS UNITARIAS
	*****************
*/
/*

/*
drop procedure up_EnviarCorreoMasivo
*/

declare @Retorno  as bit
exec up_EnviarCorreoMasivo 11, @Retorno OUTPUT
select convert(char(1), @Retorno) as retorno

select * from em_proceso 

select * from proceso 

select * from em_listadoCuotas where id_proceso =12

sp_helptext updatefechaobtencionarchivo

*/
GO
/****** Object:  StoredProcedure [dbo].[up_EnviarResumenEnvioMasivoAFuncionarios]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*            
Autor: Noel Callapiña  
Fecha: 23/07/2014         
Motivo: EA 273-Mejoras convenios            
Descripcion: Enviar Reporte Envio Masivo A Funcionario 
*/  
CREATE OR ALTER PROCEDURE [dbo].[up_EnviarResumenEnvioMasivoAFuncionarios]
	@id_proceso as int,
	@retorno as bit output 
as  
begin try
	set nocount on
	/*
		0. Variables de Log
	*/
	declare @usuario as varchar(10)
	declare @mensaje as varchar(1000)
	declare @accion as varchar(255)
	declare @nivel as varchar(50)
	declare @hilo as varchar(255)
	declare @excepcion as varchar(4000)

	set @usuario = 'batch'
	set @mensaje = 'Inicio Enviar Resumen Envio Masivo a Funcionarios: @id_proceso=' + convert(varchar(10),@id_proceso)
	set @accion = 'EnviarResumenFuncionarios'
	set @nivel = 'Info'
	set @hilo = 'BIFConvenios'
	set @excepcion = ''
	
	/*
		0.1 Variables de Proceso
	*/
	declare @aviso as int
	declare @fecha_envio as datetime

	set @aviso = 4
	set @fecha_envio = null
	set @retorno = 0

	/*
		1. Registrar en log - inicio.
	*/
		exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

	/*
		2. Obtener Informacion
	*/
		select @fecha_envio = fechaProceso from em_proceso where id_proceso = @id_proceso
	
	/*
		3. Ejecutar Proceso de Registro
	*/
		exec ss_envio_aviso_reporte_generacion_automatica @aviso, @fecha_envio

	/*
		3.1 Control de Errores
	*/
	if @@error <> 0
	begin
		/*
			Registrar Log de ocurrencia
		*/
			set @mensaje = 'Error en Enviar Resumen Envio Masivo a Funcionarios: @id_proceso=' + convert(varchar(10),@id_proceso) + ' @fecha_envio=' + convert(varchar(10),@fecha_envio,103)
			set @nivel = 'Error'
			--Ejecucion
			exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
	end
	else
	begin
		--Proceso exitoso
		set @retorno = 1
	end

	/*
		4. Registrar en log - fin.
	*/
	set @nivel = 'Info'
	set @mensaje = 'Fin Exitoso Enviar Resumen Envio Masivo a Funcionarios: @id_proceso=' + convert(varchar(10),@id_proceso) + ' @fecha_envio=' + convert(varchar(10),@fecha_envio,103)
	--Ejecucion
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

	set nocount off
end try
begin catch
	set @retorno = 0
	
	/*
		Registro Log 
	*/
	select @mensaje = dbo.uf_GetErrorInfo() + ', id_proceso='  + convert(varchar(10), @id_proceso)
	set @nivel = 'Error'
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

end catch



/*
	drop procedure up_EnviarResumenEnvioMasivoAFuncionarios
*/

/*
	PRUEBAS UNITARIAS
	*****************
declare @retorno as bit
exec up_EnviarResumenEnvioMasivoAFuncionarios  7,@retorno output
select @retorno

select * from em_proceso 
select * from em_listadocuotas

select top 100 * from eventosistema order by 1 desc 
*/
GO
/****** Object:  StoredProcedure [dbo].[up_ImportaPagareEmpresa]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*          
	Autor: Noel Callapiña
	Fecha: 16/07/2014       
	Motivo: EA 273-Mejoras convenios          
	Descripcion: Importa Pagare de Empresa
*/ 
CREATE OR ALTER PROCEDURE [dbo].[up_ImportaPagareEmpresa]  
	@id_proceso int,
	@id int,
	@codigo_clienteIBS numeric(18,0),
	@anio varchar(4),
	@mes varchar(2),
	@fecha_proceso varchar(8),
	@codigo_cliente numeric(9,0),
	@Retorno_out bit output
as
begin try
/*
	TODO: Revisar control de errores. 18/07/2014
*/

/*
	0. Variables de apoyo
*/
declare @codigo_proceso as varchar(255)
declare @usuario as varchar(10)
declare @mensaje as varchar(1000)
declare @accion as varchar(255)
declare @nivel as varchar(50)
declare @hilo as varchar(255)
declare @excepcion as varchar(4000)

set @usuario = 'batch'
set @Retorno_out = 0
set @mensaje = 'Inicio del Proceso: @codigo_clienteIBS='  + convert(varchar(18),@codigo_clienteIBS)+ ' @anio=' + @anio + ' @mes=' + @mes + ' @fecha_proceso=' + @fecha_proceso + ' @codigo_cliente=' + convert(varchar(9),@codigo_cliente) + ' @id_proceso='  + convert(varchar(10),@id_proceso)
set @accion = 'ImportaPagareEmpresa'
set @nivel = 'Info'
set @hilo = 'BIFConvenios'
set @excepcion = ''

/*
	0. Registro Log del Proceso
*/
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
/*
	1. Tablas temporales de soporte
*/
	create table #Proceso(
		codigo_proceso varchar(255)
	)

/*
	2. Generamos un proceso
*/
	insert  #Proceso exec  AddProceso @codigo_cliente,@anio,@mes,@fecha_proceso,@usuario 
	
	--seteamos codigo proceso
	select @codigo_proceso = codigo_proceso from #Proceso
	
	/*
		2.1 Verificar codigo_proceso retornado
	*/
		if @codigo_proceso = '-1'
		begin 
			
			/*
				2.1.1 Obtiene codigo_proceso existente
			*/
			insert #Proceso exec GetProceso @codigo_cliente,@anio,@mes
		
			--seteamos codigo proceso
			select @codigo_proceso = codigo_proceso from #Proceso

			/*
				2.1.2 Registramos log.
			*/
			set @mensaje = 'Código proceso existente: '  + @codigo_proceso + ' para el cliente ' + convert(varchar(9),@codigo_cliente)
			exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
				
		end

	/*
		2.2 Borra tabla temporal
	*/
	drop table #Proceso

/*
	3. Registro  información de la empresa - pagarés
*/

	INSERT INTO [DLENV]([Codigo_proceso], [DLEAG], [DLEAN], [DLECC], [DLECO], [DLEMO], 
			[DLENP], [DLECM], [DLENE], [DLEPA], [DLEMA], [DLEMN], 
			[DLECR], [DLEAP], [DLEMP], [DLEIC], [DLEST], [DLEFP], [DLESD], [DLFLI], [NUMCUOTAS] )  
	SELECT @codigo_proceso AS codigo_proceso
		  ,CONVERT(VARCHAR(3),[DLEAG]) AS DLEAG
		  ,CONVERT(VARCHAR(2),[DLEAN]) AS DLEAN
		  ,CONVERT(VARCHAR(9),[DLECC]) AS DLECC
		  ,CONVERT(VARCHAR(4),[DLECO]) AS DLECO 
		  ,[DLEMO]
		  ,[DLENP] ,[DLECM] ,[DLENE] ,[DLEPA] ,[DLEMA] ,[DLEMN]
		  ,[DLECR] 
		  ,CONVERT(VARCHAR(4),[DLEAP])  AS DLEAP
		  ,CONVERT(VARCHAR(2),[DLEMP])  AS DLEMP
		  ,CONVERT(VARCHAR(14),SUM(DLIMC - DLIPC + DLITF)) AS DLEIC
		  ,[DLEST] ,[DLEFP]
		  ,CONVERT(VARCHAR(1),CASE WHEN COUNT(1) > 1 THEN 1 ELSE 0 END) AS DLESD
		  ,[DLFLI]
		  ,COUNT(1) AS NUMCUOTAS
	FROM [dbo].[vw_PagaresEnvioMasivo] v
	WHERE rDLVCAM <= @anio+dbo.lpad('0',@mes,2)
	GROUP BY  [DLECC], DLEAN, DLEAG, DLECO, DLEMO, DLENP, DLECM, DLENE, 
			  DLEPA, DLEMA, DLEMN, DLECR, 
			  cDLNCT, cDLVCAM, [DLEAP], [DLEMP], cDLVCD, DLEST, DLFLI,DLEFP
	HAVING cDLNCT = MAX(rDLNCT)	 AND [DLECC]=@codigo_clienteIBS
			AND cDLVCAM <= @anio+dbo.lpad('0',@mes,2)

	/*
		Control de errores
	*/
	if @@ERROR = 0 
	begin
		set @Retorno_out = 1
	end

/*
	4. Registro de la deuda de los trabajadores de la empresa (ObtenerDeudaDeIBS)
*/
	if @Retorno_out = 1
	begin
		 /*
			Inicializamos flag del proceso.
		 */
		 set @Retorno_out = 0
		 
		 /*
			Registro de la deuda.
		 */
		 INSERT INTO [HistoricoDLCCR](  
						  [Codigo_proceso], [DLACC], [DLCCY],   
						  [DLVCA], [DLVCM], [DLVCD], [DLNCT],   
						  [DLIMC], [DLIPC], [DLITF], [DLSTS]   )  
		 SELECT 
				@codigo_proceso AS codigo_proceso,
				DLACC, 
				DLCCY, 
				DLVCA, 
				DLVCM, 
				DLVCD, 
				DLNCT, 
				DLIMC, 
				DLIPC, 
				DLITF, 
				DLSTS
			FROM vw_DeudaEnvioMasivo 
			WHERE DLVCAM <= @anio+dbo.lpad('0',@mes,2) 
				  AND DLCCC = @codigo_clienteIBS
			
			
			/*
				Control de errores
			*/
			if @@ERROR = 0 
			begin
				set @Retorno_out = 1
			end
		

	end

/*
	5. Envia la informacion de IBS a la cliente cuota.
*/
	if @Retorno_out = 1			--Proceso anterior OK?
	begin
		 /*
			Inicializamos flag del proceso.
		 */
		 set @Retorno_out = 0
		 
		 /*
			Procesa informacion a la cliente cuota.
		 */
		 exec EnviaEspacioTrabajo @codigo_proceso,@usuario
	end

	/*
		6. Control de errores
	*/
	if @@ERROR = 0 
	begin
		set @Retorno_out = 1

		/*
			6.1. Actualizac codigo Proceso
		*/
		exec ActualizaCodigoProcesoListadoMasivo @id_proceso, @id, @codigo_proceso
		/*
			6.2. Registro Log Exito del proceso
		*/
		set @mensaje = 'Finalizó Importación de Pagares: pCodigo_proceso='  + @codigo_proceso

		exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
	end
	
	--select @codigo_proceso

end try
begin catch
	set @Retorno_out = 0
	
	/*
		Registro Log 
	*/
	select @mensaje = dbo.uf_GetErrorInfo() + ', pCodigo_proceso='  + @codigo_proceso
	set @nivel = 'Error'
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

end catch

/*
SP_HELP em_listadoCuotas
sp_helptext AddProceso
SP_HELP [DLENV]
sp_help tmp_pagares
drop procedure dbo.up_ImportaPagareEmpresa
*/

/*
	PRUEBAS UNITARIAS
	*****************
/*   --inicializacion
delete from clientecuota where codigo_proceso in (select codigo_proceso from proceso where usuariocreacion='batch')
delete from proceso where usuariocreacion='batch'
delete from [DLENV]
--drop table tmp_pagares
*/


declare @ret as bit
EXEC dbo.up_ImportaPagareEmpresa 1, 330611, '2014', '8', '20140716', '190828602', @ret OUTPUT
select @ret

select * from proceso where usuariocreacion='batch'

select * from [DLENV]

select * from clientecuota where codigo_proceso in (select codigo_proceso from proceso where usuariocreacion='batch')

select * from em_listadoCuotas 

*/

GO
/****** Object:  StoredProcedure [dbo].[up_ImportaPagaresEnvioMasivo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*          
	Autor: Noel Callapiña
	Fecha: 16/07/2014       
	Motivo: EA 273-Mejoras convenios          
	Descripcion: Proceso de Carga de importes.
*/ 
CREATE OR ALTER PROCEDURE [dbo].[up_ImportaPagaresEnvioMasivo]  
	@id_proceso int,
	@Retorno_out bit output     
as
/*
	input: tabla em_ListadoCuotas cargada.
	output: Proceso generado y tabla cliente cuota Poblada.
*/
begin try
	/*
		0. Variables de Log
	*/
	declare @usuario as varchar(10)
	declare @mensaje as varchar(1000)
	declare @accion as varchar(255)
	declare @nivel as varchar(50)
	declare @hilo as varchar(255)
	declare @excepcion as varchar(4000)

	set @usuario = 'batch'
	set @Retorno_out = 0
	set @mensaje = 'Inicio del Proceso Masivo: @id_proceso='  + convert(varchar(10),@id_proceso)
	set @accion = 'ImportaPagaresDeIBSMasivo'
	set @nivel = 'Info'
	set @hilo = 'BIFConvenios'
	set @excepcion = ''

	/*
		0.1 Variables Estadisticas
	*/
	declare @procesados as int
	declare @errores as int
	declare @total as int

	set @procesados = 0
	set @errores = 0
	select @total = count(1) from em_ListadoCuotas where id_proceso = @id_proceso

	/*
		0.2 Variables de Soporte al Proceso
	*/
	declare @id as int
	declare @ret as bit	--Var retorno proceso individual
	declare @codigo_clienteIBS as numeric(18,0)
	declare @anio as varchar(4)
	declare @mes as varchar(2)
	declare @fecha_proceso as varchar(8)
	declare @codigo_cliente as numeric(9,0)

	set @ret = 0
	select @id = min(id) from em_listadoCuotas where id_proceso = @id_proceso

	/*
		0. Registro Log del Proceso
	*/
		exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

	/*
		1. Ejecutando Proceso
		   Descripcion: Ejecutar el proceso ImportaPagareEmpresa para todos los registros de tabla em_listadoCuotas
	*/
	
	--Inicio Iteracion
	while (@id is not null)
	begin

		/*
			1.1 Se obtiene informacion para el proceso ImportaPagareEmpresa
		*/
		select 
			   @codigo_clienteIBS=DLECC,
			   @anio=DLEAP,
			   @mes=DLEMP,
			   @fecha_proceso=DLEFP,
			   @codigo_cliente=CODIGO_CLIENTE
		from em_listadoCuotas where id_proceso = @id_proceso and id = @id
		
		/*
			1.2 Se ejecuta proceso ImportaPagareEmpresa
		*/
		exec up_ImportaPagareEmpresa  @id_proceso,@id,@codigo_clienteIBS,@anio,@mes,@fecha_proceso,@codigo_cliente,@ret OUTPUT

		/*
			1.3 Actualiza Contadores
		*/
			if @ret = 1
				set @procesados = @procesados + 1
			if @ret = 0
				set @errores = @errores  + 1

		/*
			1.4 Obtener nuevo @id
		*/
			select @id = min(id) from em_listadoCuotas where id_proceso = @id_proceso and id > @id
	end

	/*
		2. Actualiza Estadisticas
	*/
	exec up_ActualizaProcesoEstadisticas @id_proceso, @total, @procesados, @errores, 1

	/*
		3. Registro de finalizacion de proceso masivo.
	*/
	--Inicializacion
	set @mensaje = 'Fin del Proceso Masivo: @id_proceso='  + convert(varchar(10),@id_proceso)
	--Ejecucion
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

	/*
		3. Setea var de retorno.
	*/
	set @Retorno_out = 1
	
end try
begin catch
	set @Retorno_out = 0
	
	/*
		Registro Log 
	*/
	select @mensaje = dbo.uf_GetErrorInfo() + ', id_proceso='  + convert(varchar(10), @id_proceso)
	set @nivel = 'Error'
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

end catch

/*
	PRUEBAS UNITARIAS
	*****************
/*   --inicializacion
delete from clientecuota where codigo_proceso in (select codigo_proceso from proceso where usuariocreacion='batch')
delete from proceso where usuariocreacion='batch'
delete from [DLENV]
--drop table tmp_pagares

drop procedure up_ImportaPagaresEnvioMasivo
*/


declare @ret as bit
EXEC dbo.up_ImportaPagaresEnvioMasivo 2, @ret OUTPUT
select @ret

select * from em_proceso

select * from proceso where usuariocreacion='batch'

select * from [DLENV]

select * from clientecuota where codigo_proceso in (select codigo_proceso from proceso where usuariocreacion='batch')

select * from em_listadoCuotas 


*/
GO
/****** Object:  StoredProcedure [dbo].[up_ObtenerCuotaEnvioMasivo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[up_ObtenerCuotaEnvioMasivo]  
	@id_proceso int,
	@Retorno_out  bit output
     
/*          
	Autor: Noel Callapiña
	Fecha: 16/07/2014       
	Motivo: EA 273-Mejoras convenios          
	Descripcion: Obtiene el listado de cuotas para el envio masivo a empresas.
*/          
as
begin try
/*
	0.1 Variables de Log
*/
	declare @usuario as varchar(10)
	declare @mensaje as varchar(1000)
	declare @accion as varchar(255)
	declare @nivel as varchar(50)
	declare @hilo as varchar(255)
	declare @excepcion as varchar(4000)

	set @usuario = 'batch'
	set @Retorno_out = 0
	set @mensaje = 'Inicio Obtener Cuotas para Envio Masivo: @id_proceso='  + convert(varchar(10),@id_proceso)
	set @accion = 'ObtenerCuotasBatch'
	set @nivel = 'Info'
	set @hilo = 'BIFConvenios'
	set @excepcion = ''

/*
	0. Registrar log Inicio Proceso
*/
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

/*
	0.1. Definicion Variables Auxialiares
*/
	DECLARE @FECHA AS DATETIME;
	--Inicializacion
	SET @FECHA = GETDATE();
	SET @Retorno_out = 0;

/*
	1. Se genera consulta para listar las cuotas
*/

WITH ListadoCuotas
AS
(
	SELECT DISTINCT  
		e.DLNCC,		-- REPLACE CST.CUSNA1  X  e.DLNCC
		CAST(e.CUSTID as CHARACTER(2)) AS CUSTID, --REPLACE CST.CUSTID  X  e.CUSTID
		CAST (e.CUSIDN AS CHARACTER (12)) AS CUSIDN,  --REPLACE CST.CUSIDN  X  e.CUSIDN
		e.DLCCC AS DLECC, 	
		CAST ( 2000 + c.DLVCA  AS CHARACTER ( 4 ) )  AS DLEAP, 
		e.DLCCC AS CUSCUN,  --REPLACE MAX(CST.CUSCUN) X e.CUSCUN
		CAST(c.DLVCM AS CHARACTER(2)) AS DLEMP, 
		CAST(YEAR(GETDATE())  AS CHARACTER(4)) + 
			CASE LEN(RTRIM(CAST(MONTH(GETDATE()) AS CHARACTER(2))))  
				WHEN 1 THEN '0' + RTRIM(CAST(MONTH(GETDATE()) AS CHARACTER(2)))  
				WHEN 2 THEN SUBSTRING('00' + CAST(MONTH(GETDATE()) AS CHARACTER(2)), 3, 2)  END + 
			CASE LEN(RTRIM(CAST(DAY(GETDATE()) AS CHARACTER(2)))) 
				WHEN 1 THEN '0' + RTRIM(CAST(DAY(GETDATE())  AS CHARACTER(2))) 
				WHEN 2 THEN SUBSTRING('00' + CAST(DAY(GETDATE()) AS CHARACTER(2)), 3, 2) END AS DLEFP,
		cli.CODIGO_CLIENTE  
		FROM DLCRE e INNER JOIN  DLCCR r ON e.DLACC = r.DLACC 
			INNER JOIN  DLCCR c ON e.DLACC = c.DLACC AND c.DLSTS = '' 
			--INNER JOIN  DLCNV CNV ON (E.DLCCC = CNV.CNVCUN AND E.DLAÑO = CNV.AÑCONV AND E.DLAGC = CNV.AGCONV AND E.DLCOC = CNV.COCONV) 
			--INNER JOIN  CUMST CST ON (CNV.CNVCUN = CST.CUSCUN)  
			INNER JOIN DLEMP D ON ( D.DLECUN = E.DLCCC AND D.DLEAEN = c.DLVCA AND D.DLEMEN = c.DLVCM ) 
			/*
				Valida que el cliente exista en la bd de convenios y tenga habilitado el flag de envio automatico.
			*/
			INNER JOIN CLIENTE cli ON cli.TipoDocumento=e.CUSTID and cli.NumeroDocumento=e.CUSIDN and IND_ENVIO_AUTOMATICO_LISTADO='S' 
	
		WHERE     (RTRIM(r.DLSTS) = '')  
			/*
				Se valida fecha actual se igual dia de pago.
			*/
			and datediff(day, getdate(), 
						dbo.uf_ObtenerFechaPagoxDia(
							case ltrim(rtrim(cli.dia_envio_planilla)) when '' then 0 else convert(int,cli.dia_envio_planilla) end,
							getdate()
						) 
					) = 0
			/*
				Se obtiene la informacion de n meses adelantando.
			*/
			/*
				and dbo.DateFromParts(D.DLEAEN,D.DLEMEN,1)
			*/
			
			and day(dateadd(month, 0,getdate())) = case ltrim(rtrim(cli.dia_envio_planilla)) when '' then 0 else convert(int,cli.dia_envio_planilla) end
		GROUP BY e.DLNCC, e.CUSTID, e.CUSIDN, e.DLCCC, e.DLAÑO, e.DLAGC, e.DLCOC, e.DLCCY, e.DLACC, e.DLCEM, e.DLNCL, e.DLAPP, e.DLAPM,  e.DLPRN, e.DLSGN, e.DLCCR, e.DLPLA, e.DLCUS, c.DLNCT, c.DLVCA, c.DLVCM, c.DLVCD, e.DLSTS, cli.CODIGO_CLIENTE
		--ORDER BY 1, DLEMP
),
/*
	2. Consulta que retorna los procesos registrados en el sistema.
*/
ListadoProcesos
AS
(
	 SELECT TipoDocumento, NumeroDocumento, Anio_periodo, Mes_Periodo   
	 FROM CLIENTE C  
	  INNER JOIN PROCESO P ON (C.Codigo_Cliente = P.Codigo_Cliente)  
	 WHERE Anio_periodo in (  year ( dateadd ( mm ,1,  getdate ()  ) ), year ( getdate ()) )  
	 and Mes_periodo in ( month ( dateadd ( mm ,1,  getdate ()  ) ),  month ( getdate()))  
)


/*
	3. Registra las cuotas de clientes que no tengan algún proceso asociado.
*/
insert into em_ListadoCuotas (id_proceso,id,DLNCC,CUSTID,CUSIDN,DLECC,DLEAP,CUSCUN,DLEMP,DLEFP,CODIGO_CLIENTE,fechaGeneracion)
--SELECT DLNCC,len(DLNCC), CUSTID,len(CUSTID),CUSIDN,len(CUSIDN),DLECC,DLEAP,len(DLEAP),CUSCUN,DLEMP,len(DLEMP),DLEFP,len(DLEFP)--,@FECHA
SELECT @id_proceso,
	ROW_NUMBER() OVER(ORDER BY DLNCC ASC ),
	DLNCC,CUSTID,CUSIDN,DLECC,
	CASE WHEN LEN(RTRIM(LTRIM(DLEAP)))=4 THEN DLEAP ELSE CONVERT(VARCHAR(4),(2000+CONVERT(NUMERIC,DLEAP))) END AS DLEAP,
	CUSCUN,
	--CASE WHEN LEN(RTRIM(LTRIM(DLEMP)))=2 THEN DLEMP ELSE RIGHT('00'+RTRIM(LTRIM(DLEMP)),2) END AS DLEMP,
	RTRIM(LTRIM(DLEMP)) as DLEMP,
	DLEFP,CODIGO_CLIENTE,@FECHA
FROM ListadoCuotas l LEFT JOIN ListadoProcesos p ON
	l.CUSTID=p.TipoDocumento AND l.CUSIDN=p.NumeroDocumento
	AND l.DLEAP = p.Anio_periodo AND l.DLEMP = p.Mes_Periodo
WHERE p.tipodocumento is null
--ORDER BY 1, DLEMP

/*
	4. Setea variable de control
*/
if @@rowcount > 0
begin 
	/*
		4.a Setea Flag Proceso Satisfactorio
	*/
	set @Retorno_out = 1
end
else
begin
	/*
		4.b Registra log
	*/
	set @mensaje = 'Cuotas Obtenidas: CERO - @id_proceso='  + convert(varchar(10),@id_proceso)
	--Ejecucion
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
end

/*
	5. Actualizo proceso.
*/
	exec dbo.up_ActualizaProcesoEnvioMasivo @id_proceso,N'paso1',1, N''

/*
	6. Registra log
*/
	set @mensaje = 'Fin Obtener Cuotas para Envio Masivo @id_proceso='  + convert(varchar(10),@id_proceso)
	--Ejecucion
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

end try
begin catch
	set @Retorno_out = 0
	
	/*
		Registro Log 
	*/
	select @mensaje = dbo.uf_GetErrorInfo() + ', id_proceso='  + convert(varchar(10), @id_proceso)
	set @nivel = 'Error'
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

end catch


/*
sp_help cliente
select * from DLCRE 
select IND_ENVIO_AUTOMATICO_LISTADO,* from cliente where IND_ENVIO_AUTOMATICO_LISTADO='S'
select IND_ENVIO_AUTOMATICO_LISTADO,* from cliente where numerodocumento in ('20100141583','20503522340','20353723180','20516547732')
update  cliente set IND_ENVIO_AUTOMATICO_LISTADO='N' WHERE IND_ENVIO_AUTOMATICO_LISTADO='S'
update  cliente set IND_ENVIO_AUTOMATICO_LISTADO='S' WHERE numerodocumento in ('20100141583','20503522340','20353723180','20516547732')
select rownum,* from proceso
select * from clientecuota
drop procedure dbo.up_ObtenerCuotaEnvioMasivo
delete from em_ListadoCuotas
select  * from em_proceso
select * from cliente
sp_help cliente

/*
PRUEBAS UNITARIAS
*****************
*/
declare @ret as bit 
EXEC dbo.up_ObtenerCuotaEnvioMasivo  1, @ret output
SELECT @ret


select top 100 * from eventosistema order by 1 desc 

select * from em_ListadoCuotas
sp_help em_ListadoCuotas
*/

GO
/****** Object:  StoredProcedure [dbo].[up_RegistraEventoSistema]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[up_RegistraEventoSistema]
	@Hilo varchar(255),
	@Nivel varchar(50),
	@Accion varchar(255),
	@Mensaje varchar(1000),
	@Excepcion varchar(4000),
	@Usuario varchar(50)
/*          
Autor: Noel Callapiña
Fecha: 16/07/2014       
Motivo: EA 273-Mejoras convenios          
Descripcion: Registra en la tabla eventos sistema
*/          
as
begin
	set nocount on

	INSERT INTO EventoSistema (Fecha,Hilo,Nivel,Accion,Mensaje,Excepcion, Usuario)
		VALUES ( GETDATE(), @Hilo, @Nivel, @Accion, @Mensaje, @Excepcion, @Usuario)

	set nocount off

end


/*
PRUEBAS UNITARIAS
*****************
sp_help eventosistema
select * from eventosistema order by fecha desc
drop procedure dbo.up_RegistraEventoSistema
exec dbo.up_RegistraEventoSistema 'BIFConvenios','Info','Prueba','Mensaje Prueba','Excepcion Prueba','Batch'
*/
GO
/****** Object:  StoredProcedure [dbo].[up_RegistrarNomina]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*            
Autor: Noel Callapiña  
Fecha: 23/07/2014         
Motivo: EA 273-Mejoras convenios            
Descripcion: Registrar Nomina 
*/  
CREATE OR ALTER PROCEDURE [dbo].[up_RegistrarNomina]
	@codigo_proceso varchar(255)
as  
begin try
	/*
		0. Variables de Log
	*/
	declare @usuario as varchar(10)
	declare @mensaje as varchar(1000)
	declare @accion as varchar(255)
	declare @nivel as varchar(50)
	declare @hilo as varchar(255)
	declare @excepcion as varchar(4000)

	set @usuario = 'batch'
	set @mensaje = 'Inicio del Registro Nomina: @codigo_proceso=' + @codigo_proceso
	set @accion = 'RegistrarNomina'
	set @nivel = 'Info'
	set @hilo = 'BIFConvenios'
	set @excepcion = ''
	
	/*
		0.1 Variables de Proceso
	*/
	declare @cantidad_clientes as int
	declare @total_soles as decimal(15,2)
	declare @total_dolares as decimal(15,2)
	declare @tipo_nomina as varchar(2)
	declare @tipo_formato as varchar(2)
	declare @tipo_proceso as varchar(2)
	declare @cantidad_clientes_soles as int 
	declare @cantidad_clientes_dolares as int 

	set @cantidad_clientes = 0
	set @total_soles = 0 
	set @total_dolares = 0
	set @tipo_nomina = 'E'
	set @tipo_formato = 'N'
	set @tipo_proceso = 'B'
	set @cantidad_clientes_soles=0
	set @cantidad_clientes_dolares=0

	/*
		1. Registrar en log - inicio.
	*/
		exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

	/*
		2. Obtener Informacion
	*/
	--SOLES
	select @total_soles = sum(t.dlic), @cantidad_clientes_soles = count(1) from tmp_CuotasPorVencerResultado t
		inner join proceso p on p.codigo_cliente = t.codigo_cliente and p.codigo_proceso = @codigo_proceso
		where t.dlmo = 'SOL' group by t.codigo_cliente

	--DOLARES
	select @total_dolares = sum(t.dlic), @cantidad_clientes_dolares = count(1) from tmp_CuotasPorVencerResultado t
		inner join proceso p on p.codigo_cliente = t.codigo_cliente and p.codigo_proceso = @codigo_proceso
		where t.dlmo = 'USD' group by t.codigo_cliente
	
	--CANTIDAD CLIENTES
	set @cantidad_clientes = @cantidad_clientes_soles + @cantidad_clientes_dolares
	
	/*
		3. Ejecutar Proceso de Registro
	*/
	exec insertanominaentradasalida @codigo_proceso, @cantidad_clientes,@total_soles,@total_dolares,@tipo_nomina,@tipo_formato,@tipo_proceso,@usuario

	/*
		3.1 Control de Errores
	*/
	if @@error <> 0
	begin
		/*
			Registrar Log de ocurrencia
		*/
			set @mensaje = 'Error en el Registro de Nomina: @codigo_proceso=' + @codigo_proceso + ' @cantidad_clientes=' + convert(varchar(10),@cantidad_clientes)  + ' @total_soles=' + convert(varchar(17),@total_soles) + ' @total_dolares=' + convert(varchar(17),@total_dolares)
			set @nivel = 'Error'
			--Ejecucion
			exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario
	end

	/*
		4. Registrar en log - fin.
	*/
	set @nivel = 'Info'
	set @mensaje = 'Fin Exitoso del Registro Nomina: @codigo_proceso=' + @codigo_proceso
	--Ejecucion
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

end try
begin catch
	/*
		Registro Log 
	*/
	select @mensaje = dbo.uf_GetErrorInfo() + ', pCodigo_proceso='  + @codigo_proceso
	set @nivel = 'Error'
	exec dbo.up_RegistraEventoSistema @hilo,@nivel,@accion,@Mensaje,@excepcion,@usuario

end catch



/*
	drop procedure up_RegistrarNomina
*/

/*
	PRUEBAS UNITARIAS
	*****************
	
exec up_RegistrarNomina  '2C195AEC-262E-451F-80CE-8DE945698926'

select * from clientenomina where codigo_proceso = '2C195AEC-262E-451F-80CE-8DE945698926'

select sum(t.dlic), count(1) from tmp_CuotasPorVencerResultado t
		inner join proceso p on p.codigo_cliente = t.codigo_cliente and p.codigo_proceso = 'DE129219-6D2B-4360-8B39-4A701FFAA628'
		where t.dlmo = 'SOL' group by t.codigo_cliente

select top 100 * from eventosistema order by 1 desc 
*/
GO
/****** Object:  StoredProcedure [dbo].[update_formato_importacion]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[update_formato_importacion]  
@cliente_id as int,  
@formato_importacion as varchar(20)  
as  
begin  
update Cliente set FormatoArchivoImportacion = @formato_importacion  
where Codigo_Cliente = @cliente_id  
end  

GO
/****** Object:  StoredProcedure [dbo].[UpdateCliente]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[UpdateCliente]    
@Codigo_Cliente  numeric (9,0),    
@Nombre_Cliente  nvarchar(500),    
@TipoDocumento  varchar (2),    
@NumeroDocumento varchar (12),    
@CorreoElectronico varchar (200),    
@telefono_1 varchar(11),   
@telefono_2 varchar(11),   
@telefono_3 varchar(11),   
@telefono_4 varchar(11),   
@dia_envio_planilla char(2),   
@dia_cierre_planilla char(2),   
@meses_anticipacion_envio_listado char(2),   
@dia_corte char(2),   
@id_funcionario int,   
@codigo_IBS int,   
@codigo_institucion varchar(10),   
@ind_envio_automatico_listado char(1),   
@usuario_creacion varchar(30),   
@fecha_creacion datetime,   
@usuario_modificacion varchar(30),   
@fecha_modificacion datetime  
/*Modificado por: Christian Rivera  
 Fecha: 10-06-2014  
 Motivo: EA 273-Mejoras convenios  
 Descripcion: Se añaden los nuevos campos del mantenimiento de datos de empresas  
*/  
as    
BEGIN    
SET NOCOUNT ON    
 If Not Exists ( Select 1 From cliente Where NumeroDocumento = ltrim(rtrim(@NumeroDocumento)))    
  Begin    
--   INSERT INTO [Cliente](  [Nombre_Cliente], [FormatoArchivo],  [Codigo_Referencia],     
--      [TipoDocumento],  [NumeroDocumento], [CorreoElectronico])    
   INSERT INTO Cliente (Nombre_Cliente, FormatoArchivo, Codigo_Referencia, TipoDocumento,  
    NumeroDocumento, CorreoElectronico, telefono_1, telefono_2, telefono_3,   
    telefono_4, dia_envio_planilla, dia_cierre_planilla, meses_anticipacion_envio_listado,   
    dia_corte, id_funcionario, codigo_IBS, codigo_institucion, ind_envio_automatico_listado,   
    usuario_creacion, fecha_creacion)    
      VALUES(@Nombre_Cliente, 'default', 'BIF', @TipoDocumento,   
    ltrim(rtrim(@NumeroDocumento)), @CorreoElectronico, @telefono_1, @telefono_2, @telefono_3,   
    @telefono_4, @dia_envio_planilla, @dia_cierre_planilla, @meses_anticipacion_envio_listado,   
    @dia_corte, @id_funcionario, @codigo_IBS, @codigo_institucion, @ind_envio_automatico_listado,   
    @usuario_creacion, @fecha_creacion)    
  
   EXECUTE AddLogInfo '', @@identity, '', '', 'UpdateCliente', @usuario_creacion    
  End    
 Else    
 Begin    
  UPDATE Cliente    
  SET Nombre_Cliente = @Nombre_Cliente,     
  TipoDocumento = @TipoDocumento,    
  NumeroDocumento = ltrim(rtrim(@NumeroDocumento)),    
  CorreoElectronico = @CorreoElectronico,   
  telefono_1 = @telefono_1,   
  telefono_2 = @telefono_2,   
  telefono_3 = @telefono_3,   
  telefono_4 = @telefono_4,   
  dia_envio_planilla = @dia_envio_planilla,   
  dia_cierre_planilla = @dia_cierre_planilla,   
  meses_anticipacion_envio_listado = @meses_anticipacion_envio_listado,   
  dia_corte = @dia_corte,   
  id_funcionario = @id_funcionario,   
  codigo_IBS = @codigo_IBS,   
  codigo_institucion = @codigo_institucion,   
  ind_envio_automatico_listado = @ind_envio_automatico_listado,   
  usuario_modificacion = @usuario_modificacion,   
  fecha_modificacion = @fecha_modificacion  
  WHERE Codigo_Cliente = @Codigo_Cliente    
  
  EXECUTE AddLogInfo '', @Codigo_Cliente, '', '', 'UpdateCliente', @usuario_modificacion    
 End    
SET NOCOUNT OFF    
END    
GO
/****** Object:  StoredProcedure [dbo].[UpdateClienteCuota]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[UpdateClienteCuota]
@numeroLote	bigint, 
@DLNP		decimal(18,0),
@ESTADO 	BIT
AS
BEGIN
	declare @codigo_proceso as uniqueidentifier 
	select @codigo_proceso = codigo_proceso from lotebloqueo
	where codigoLote = @numeroLote 

	UPDATE  CuotasBloqueo
	set bloqueado = @estado
	where Codigo_proceso  = @codigo_proceso
	and dlnp = @dlnp
		and CodigoLote = @numeroLote

	/*UPDATE ClienteCuota
	SET bloqueado = @estado
	where Codigo_proceso  = @codigo_proceso
	and dlnp = @dlnp*/
END



GO
/****** Object:  StoredProcedure [dbo].[UpdateClienteCuotaProrroga]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[UpdateClienteCuotaProrroga]
@numeroLote	bigint, 
@DLNP		decimal(18,0),
@ESTADO 	BIT,
@EDFLAGP 	char ( 1 ) 
AS
BEGIN
	declare @codigo_proceso as uniqueidentifier 
	select @codigo_proceso = codigo_proceso from [LoteProrroga]
	where codigoLote = @numeroLote 

	UPDATE  CuotasProrroga
	set prorrogado = @estado,
		EDFLAGP = @EDFLAGP
	where Codigo_proceso  = @codigo_proceso
	and dlnp = @dlnp
	and codigolote = @numeroLote

	UPDATE ClienteCuota
	SET prorrogado = case when prorrogado = 0 then   @estado else prorrogado end,
		EDFLAGP =case when prorrogado = 0 then @EDFLAGP else EDFLAGP end
	where Codigo_proceso  = @codigo_proceso
	and dlnp = @dlnp
END


GO
/****** Object:  StoredProcedure [dbo].[UpdateEstadoProceso]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[UpdateEstadoProceso]
@Codigo_proceso uniqueidentifier,
@Estado char (2 ),
@usuario		varchar(30) = '' 
AS
BEGIN
	SET NOCOUNT ON
		UPDATE Proceso
		SET Estado = @Estado --'EP'
		WHERE  Codigo_proceso = @Codigo_proceso
		EXECUTE AddLogInfo '', @Codigo_proceso, '', @Estado, 'UpdateEstadoProceso', @usuario
	SET NOCOUNT OFF
END


GO
/****** Object:  StoredProcedure [dbo].[UpdateFechaObtencionArchivo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[UpdateFechaObtencionArchivo]
@Codigo_proceso as uniqueidentifier,
@Email as bit,
@usuario VARCHAR ( 30 ) 
AS
BEGIN
SET NOCOUNT ON
	if @Email = 1 
	BEGIN
		UPDATE PROCESO
		set Fecha_EnvioEmail = getdate()
		where Codigo_proceso = @Codigo_proceso
	END
	else
	begin
		UPDATE PROCESO
		set Fecha_DescargaArchivo = getdate()
		where Codigo_proceso = @Codigo_proceso
	end
	EXECUTE AddLogInfo '', @Codigo_proceso, '', '', 'UpdateFechaObtencionArchivo', @usuario
SET NOCOUNT OFF
END


GO
/****** Object:  StoredProcedure [dbo].[UpdateLoteBloqueo]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[UpdateLoteBloqueo] 
@numeroLote	bigint, 
@respuesta	varchar ( 100)
AS
BEGIN
	UPDATE LoteBloqueo
	set respuesta = @respuesta,
		fin = 1	
	where codigoLote = @numeroLote 
END


GO
/****** Object:  StoredProcedure [dbo].[UpdateLoteBloqueo2]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[UpdateLoteBloqueo2]
@numeroLote	bigint, 
@respuesta	varchar ( 100)
AS
BEGIN
	UPDATE LoteBloqueo
	set respuesta = @respuesta,
		fin = 1	
	where codigoLote = @numeroLote 
END


GO
/****** Object:  StoredProcedure [dbo].[UpdateLoteProrroga]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[UpdateLoteProrroga] 
@numeroLote	bigint, 
@respuesta	varchar ( 100)
AS
BEGIN
	UPDATE [LoteProrroga]
	set respuesta = @respuesta,	
		fin = 1	
	where codigoLote = @numeroLote 
END



GO
/****** Object:  StoredProcedure [dbo].[UpdateLoteProrroga2]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[UpdateLoteProrroga2] 
@numeroLote	bigint, 
@respuesta	varchar ( 100)
AS
BEGIN
	UPDATE [LoteProrroga]
	set respuesta = @respuesta,	
		fin = 1	
	where codigoLote = @numeroLote 
END


GO
/****** Object:  StoredProcedure [dbo].[UpdErrorCargaArchivoDescuentos]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[UpdErrorCargaArchivoDescuentos]
@Codigo_proceso as uniqueidentifier,
@usuario		varchar(30) = ''
AS
BEGIN
	SET NOCOUNT ON
		UPDATE PROCESO
		SET Estado = 'ED'
		WHERE Codigo_proceso = @Codigo_proceso
	
		EXECUTE AddLogInfo '', @Codigo_proceso, '', 'ED', 'UpdErrorCargaArchivoDescuentos', @usuario	
	SET NOCOUNT OFF
END


GO
/****** Object:  StoredProcedure [dbo].[UpdEstadoGeneracionError]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[UpdEstadoGeneracionError]
@Codigo_proceso AS UNIQUEIDENTIFIER,
@usuario		varchar(30) = ''
AS
BEGIN
	SET NOCOUNT ON
		if exists ( select 1 from proceso where Codigo_proceso = @codigo_proceso and Estado = 'G0' ) 
		begin
			update proceso 
			set Estado = 'EG'
			WHERE Codigo_proceso = @codigo_proceso
		end
	
		if exists ( select 1 from proceso where Codigo_proceso = @codigo_proceso and TmpStatusGen = 'G0' ) 
		begin
			update proceso 
			set TmpStatusGen = 'EG'
			WHERE Codigo_proceso = @codigo_proceso
		end
	EXECUTE AddLogInfo '', @Codigo_proceso, '', 'EG', 'UpdEstadoGeneracionError', @usuario	
	SET NOCOUNT OFF
END


GO
/****** Object:  StoredProcedure [dbo].[UpdEstadoGeneracionExito]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[UpdEstadoGeneracionExito]
@Codigo_proceso 	UNIQUEIDENTIFIER,
@usuario		varchar(30) = '' 
AS
BEGIN
SET NOCOUNT ON
	if exists ( select 1 from proceso where Codigo_proceso = @codigo_proceso and Estado in ( 'G0', 'EG' )) 
	begin
		update proceso 
		set Estado = 'G1'
		WHERE Codigo_proceso = @codigo_proceso
	end
	if exists ( select 1 from proceso where Codigo_proceso = @codigo_proceso and TmpStatusGen  in ( 'G0', 'EG' ) ) 
	begin
		update proceso 
		set TmpStatusGen = 'G1',
		Fecha_GeneracionCF = getdate()
		WHERE Codigo_proceso = @codigo_proceso
	end
	EXECUTE AddLogInfo '', @Codigo_proceso, '', 'G1', 'UpdEstadoGeneracionExito', @usuario
SET NOCOUNT OFF
END


GO
/****** Object:  StoredProcedure [dbo].[UpdRestauraEstadoInicial]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[UpdRestauraEstadoInicial]
@Codigo_proceso AS UNIQUEIDENTIFIER,
@usuario		varchar(30) = ''
AS
BEGIN
	SET NOCOUNT ON
--Restauramos el estado inicial del flag de generacion
		update proceso 
		set TmpStatusGen = 'P2'
		WHERE Codigo_proceso = @codigo_proceso
	EXECUTE AddLogInfo '', @Codigo_proceso, '', 'P2', 'UpdRestauraEstadoInicial', @usuario	
	SET NOCOUNT OFF
END

GO
/****** Object:  StoredProcedure [dbo].[ValidaExistenciaFuncionario]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER PROCEDURE [dbo].[ValidaExistenciaFuncionario]
(
	@idFuncionario INT
)
AS
BEGIN
	
	SELECT
			COUNT(*) AS Cantidad
	FROM [dbo].[Log_Envio_Correos] LEC 
	WHERE	
			LEC.iTipoEnvioCorreoId = 5
		AND LEC.iCodigoCliente = @idFuncionario
		AND LEC.iEstado = 1
		AND CONVERT(CHAR(10),LEC.dFechaCreacion,120) = CONVERT(CHAR(10),GETDATE(),120)	
	
END

GO
/****** Object:  StoredProcedure [dbo].[ValidarFinProcesoBatch]    Script Date: 10-Jan-23 1:58:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[ValidarFinProcesoBatch]       
 @codigo_proceso char(3)  
/******************************************************************************************    
Autor: Christian Rivera    
Fecha creacion: 16-09-2013    
Descripcion: Valida si el proceso de actualizacion de cuotas ha finalizado    
   Retorna: 0 --> Pendiente    
      1 --> Finalizado    
*******************************************************************************************/    
as      
begin        
 declare @Resultado int        
 declare @estado_proceso int    
    
 select @Resultado = 0      
       
 select @estado_proceso = estado_proceso    
 from logprocesobatch     
 where codigo_proceso = @codigo_proceso and     
   fecha_proceso = convert(char(8),getdate(),112)    
    
 IF @estado_proceso = 1      
  BEGIN       
   SET @Resultado = 1    
  END      
       
 select @Resultado        
end 
GO
